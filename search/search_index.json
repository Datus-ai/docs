{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Datus is an open-source data engineering agent that builds evolvable context for your data systems. Unlike traditional tools that merely move data, Datus captures, learns, and evolves the knowledge surrounding your data\u2014transforming metadata, reference SQL, semantic models, and metrics into a living knowledge base that grounds AI queries and eliminates hallucinations.</p> <p>With Datus, data engineers shift from writing repetitive SQL to building reusable, AI-ready context. Every query, correction, and domain rule becomes long-term memory\u2014enabling specialized subagents that deliver accurate, domain-aware analytics to your entire organization.</p> <p></p> <p>Three Entry Points for Different Users</p> <ul> <li>Datus-CLI: An AI-powered command-line interface for data engineers\u2014think \"Claude Code for data engineers.\" Write SQL, build subagents, and construct context interactively.</li> <li>Datus-Chat: A web chatbot providing multi-turn conversations with built-in feedback mechanisms (upvotes, issue reports, success stories) for data analysts.</li> <li>Datus-API: RESTful APIs for other agents or applications that need stable, accurate data services.</li> </ul> <p>Two Execution Modes</p> <ul> <li>Agentic Mode: Ideal for ad-hoc development and exploratory workflows. Flexible, conversational, and context-aware through specialized subagents.</li> <li>Workflow Mode: Optimized for production scenarios requiring high stability and orchestration. Workflows can use subagents as nodes for complex pipelines.</li> </ul> <p>Context Engine at the Core</p> <p>The heart of Datus is its Context Engine, which combines human expertise with AI capabilities:</p> <ul> <li>Automatically captures metadata, metrics, reference SQL, documents, and success stories</li> <li>Supports human-in-the-loop curation and refinement</li> <li>Powers both subagents and workflows with rich, domain-specific context</li> </ul> <p>Flexible Integration Layer</p> <p>Datus integrates seamlessly with your existing stack:</p> <ul> <li>LLMs: OpenAI, Claude, DeepSeek, Qwen, Kimi, and more (Configuration)</li> <li>Data Warehouses: StarRocks, Snowflake, DuckDB, SQLite, PostgreSQL, and others (Namespace Setup)</li> <li>Semantic Layers: MetricFlow support for metric definitions and queries</li> <li>Extensibility: Add custom integrations via MCP (Model Context Protocol)</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Get your Datus Agent up and running in minutes.</p> <p>Start Here</p> <p> Quickstart Guide</p> <p>Discover how Datus leverages contextual data engineering from your data assets to continuously learn and improve</p> <p>Learn Key Concepts</p> <p> Contextual Data Engineering</p>"},{"location":"#important-topics","title":"Important Topics","text":"<ul> <li> <p> Datus CLI</p> <p>Command-line interface for local development and real-time preview of your data workflows.</p> <p> Learn more</p> </li> <li> <p> Knowledge Base</p> <p>Centralized repository for organizing and managing your data assets and documentation.</p> <p> Browse knowledge base</p> </li> <li> <p> Subagent System</p> <p>Extend Datus with specialized subagents for different data engineering tasks and workflows.</p> <p> Explore subagents</p> </li> <li> <p> Workflow Management</p> <p>Design and orchestrate complex data pipelines with configurable workflow builder.</p> <p> Explore workflows</p> </li> </ul>"},{"location":"release_notes/","title":"Release notes","text":""},{"location":"release_notes/#02","title":"0.2","text":""},{"location":"release_notes/#020","title":"0.2.0","text":"<p>Enhanced Chat Functionality</p> <ul> <li>Advanced multi-turn conversations for seamless interactions. #91</li> <li>Agentic execution of database tools, file system operations, and automatic to-do list generation.</li> <li>Support for both automatic and manual compaction (.compact). #125</li> <li>Session management with .resume and .clear commands.</li> <li>Provide dedicated context by introducing it with the @ Table, @ file, @ metrics, @sql_history commands. #134 #152</li> <li>Token consumption tracking and estimation for better resource visibility. #119</li> <li>Write-capability confirmations before executing sensitive tool actions.</li> <li>Plan Mode: An AI-assisted planning feature that generates and manages a to-do list. #147</li> </ul> <p>Automatic building knowledge base</p> <ul> <li>Automatic generation of Metric YAML files in MetricFlow format from historyical success stories. #10</li> <li>Automatic summary and labeling SQL history files from *.sql files in workspace. #132</li> <li>Improves SQL accuracy and generation speed using metrics &amp; SQL history.</li> </ul> <p>MCP Extension</p> <ul> <li>New .mcp commands to add, remove, list, and call MCP servers and tools. #54</li> </ul> <p>Flexible Workflow Configuration</p> <ul> <li>Fully customizable workflow definitions via agent.yml.</li> <li>Configurable nodes, models, and database connections.</li> <li>Support for sub-workflows and result selection to improve accuracy. #88</li> </ul> <p>Context Exploration</p> <ul> <li>Improve @catalogs to display all databases, schemas, and tables across multiple databases.</li> <li>New @subject to show all metrics built with MetricFlow. #165</li> <li>Context search tools integration to enhance recall of metadata and metrics. #138</li> </ul> <p>User Behavior Logging</p> <ul> <li>Automatic collection of user behavior logs.</li> <li>Transforms human\u2013computer interaction data into trainable datasets for future improvements.</li> </ul>"},{"location":"release_notes/#01","title":"0.1","text":""},{"location":"release_notes/#010","title":"0.1.0","text":"<p>Datus-cli</p> <ul> <li>Supports connecting to SQLite, DuckDB, StarRocks, and Snowflake, and performing common command-line operations.</li> <li>Supports three types of command extensions: !run_command, @context, and /chat to enhance development efficiency.</li> </ul> <p>Datus-agent</p> <ul> <li>Supports automatic NL2SQL generation using the React paradigm.</li> <li>Supports retrieving database metadata and building vector-based search on metadata.</li> <li>Supports deep reasoning via the MCP server.</li> <li>Supports integration with bird-dev and spider2-snow benchmarks.</li> <li>Supports saving and restoring workflows, allowing execution context and node inputs/outputs to be recorded.</li> <li>Offers flexible configuration: you can define multiple models, databases, and node execution strategies in Agent.yaml.</li> </ul>"},{"location":"release_notes/#012","title":"0.1.2","text":"<p>Datus-cli</p> <ul> <li>Add fix node, use !fix to quick fix the last sql with error, a simple template to make llm foucs on this task.</li> </ul> <p>Datus-agent</p> <ul> <li>Peroformance improvement for bootstrap-kb for multi-thread.</li> <li>Other minor bugfixes.</li> </ul>"},{"location":"release_notes/#013","title":"0.1.3","text":"<p>Datus-cli</p> <ul> <li>Added datus-init to initialize the ~/.datus/ directory.</li> <li>Included a sample DuckDB database in ~/.datus/sample.</li> </ul> <p>Datus-agent</p> <ul> <li>Added the check_result option to the output node (default: False).</li> </ul>"},{"location":"release_notes/#014","title":"0.1.4","text":"<p>Datus-agent</p> <ul> <li>Added the check-mcp command to confirm the MCP server configuration and availability.</li> <li>Added support for both DuckDB and SQLite MCP servers.</li> <li>Implemented automatic installation of the MCP server into the datus-mcp directory.</li> </ul>"},{"location":"release_notes/#015","title":"0.1.5","text":"<p>Datus-agent</p> <ul> <li>Automated semantic layer generation.</li> <li>Introduced a new internal workflow: metrics2SQL.</li> <li>Added save_llm_trace to facilitate training dataset collection.</li> </ul> <p>Datus-cli</p> <ul> <li>Enhanced !reason and !gen_semantic_model commands for a more agentic and intuitive experience.</li> </ul>"},{"location":"benchmark/benchmark_manual/","title":"Benchmark","text":"<p>Evaluate Datus Agent's performance and capabilities using industry-standard benchmarks. Run comprehensive tests against datasets like BIRD and Spider 2.0-Snow to assess accuracy, execution success rate, and query generation quality.</p>"},{"location":"benchmark/benchmark_manual/#overview","title":"Overview","text":"<p>Datus Agent benchmark mode enables you to:</p> <ul> <li>Measure Accuracy: Evaluate how well the agent generates correct SQL from natural language</li> <li>Track Success Rates: Monitor query execution success across different database types</li> <li>Compare Results: Validate generated queries against expected outputs</li> <li>Identify Improvements: Discover areas for optimization and refinement</li> </ul>"},{"location":"benchmark/benchmark_manual/#quick-start-with-docker","title":"Quick Start with Docker","text":"<p>Get started quickly with pre-configured Docker containers that include benchmark datasets.</p>"},{"location":"benchmark/benchmark_manual/#step-1-pull-the-docker-image","title":"Step 1: Pull the Docker Image","text":"<p>Tip</p> <p>Ensure Docker is installed and running on your system before proceeding.</p> Terminal<pre><code>docker pull datusai/datus-agent:0.2.0-rc1\n</code></pre>"},{"location":"benchmark/benchmark_manual/#step-2-launch-the-docker-container","title":"Step 2: Launch the Docker Container","text":"<p>Tip</p> <p>Demo datasets are preloaded, allowing you to quickly explore Datus capabilities without additional setup.</p> BIRDSpider 2.0-Snow Terminal<pre><code>docker run --name datus \\\n--env DEEPSEEK_API_KEY=&lt;your_api_key&gt;  \\\n-d datusai/datus-agent:0.2.0\n</code></pre> Terminal<pre><code>docker run --name datus \\\n--env DEEPSEEK_API_KEY=&lt;your_api_key&gt;  \\\n--env SNOWFLAKE_ACCOUNT=&lt;your_snowflake_acount&gt;  \\\n--env SNOWFLAKE_USERNAME=&lt;your_snowflake_username&gt;  \\\n--env SNOWFLAKE_PASSWORD=&lt;your_snowflake_password&gt;  \\\n-d datusai/datus-agent:0.2.0\n</code></pre>"},{"location":"benchmark/benchmark_manual/#step-3-run-benchmark-tests","title":"Step 3: Run Benchmark Tests","text":"<p>Warning</p> <p>Each task may take several minutes to complete. Running all tasks may require hours or days depending on your system configuration.</p> <p>BIRD Dataset</p> <p>Info</p> <p>Task ID range: 0-1533</p> Run by Task IDRun All Tasks Terminal<pre><code>docker exec -it datus python -m datus.main benchmark  \\\n--namespace bird_sqlite \\\n--benchmark bird_dev \\\n--benchmark_task_ids &lt;task_id&gt;\n</code></pre> Terminal<pre><code>docker exec -it datus python -m datus.main benchmark  \\\n--namespace bird_sqlite \\\n--benchmark bird_dev\n</code></pre> <p>Spider 2.0-Snow Dataset</p> <p>Info</p> <p>You can find the task ID (instance ID) in the spider2-snow.jsonl file.</p> <p>Note</p> <p>Ensure you start the Docker container with Snowflake environment parameters configured.</p> Run by Task IDRun All Tasks Terminal<pre><code>docker exec -it datus python -m datus.main benchmark  \\\n--namespace snowflake \\\n--benchmark spider2 \\\n--benchmark_task_ids &lt;task_id&gt;\n</code></pre> Terminal<pre><code>docker exec -it datus python -m datus.main benchmark  \\\n--namespace snowflake \\\n--benchmark spider2\n</code></pre>"},{"location":"benchmark/benchmark_manual/#step-4-review-benchmark-results","title":"Step 4: Review Benchmark Results","text":"<p>Tip</p> <p>Each benchmark generates a comprehensive performance summary with detailed metrics and task breakdowns.</p> Benchmark Result<pre><code>================================================================================\nBENCHMARK ACCURACY EVALUATION REPORT\n================================================================================\nGenerated Time: 2025-09-18 12:07:30\n\nEXECUTIVE SUMMARY\n----------------------------------------\nTotal tasks analyzed: 1\nExecution success rate: 100.0%\nResult comparison match rate: 100.0%\n\nDETAILED STATISTICS\n----------------------------------------\nTotal comparisons performed: 1\nSuccessful matches: 1\nMismatches: 0\nComparison errors: 0\nEmpty result errors: 0\nMismatch rate: 0.0%\nError rate: 0.0%\n\nTASK BREAKDOWN BY CATEGORY\n----------------------------------------\nMatched tasks (1):\n14\n\nMismatched tasks (0):\nNone\n\nFailed tasks (0):\nNone\n\nADDITIONAL STATISTICS\n----------------------------------------\nOverall success rate: 100.0%\nSuccessful tasks: 1\nFailed tasks: 0\nMismatched tasks: 0\n\n================================================================================ [datus.utils.benchmark_utils]\n2025-09-18 12:07:30 [info     ]\nFinal Result: {'status': 'success', 'generated_time': '2025-09-18T12:07:30.497861', 'summary': {'total_files': 1, 'total_output_nodes': 1, 'total_output_success': 1, 'total_output_failure': 0, 'success_rate': 100.0, 'comparison_summary': {'total_comparisons': 1, 'successful_matches': 1, 'mismatches': 0, 'comparison_errors': 0, 'empty_result_errors': 0, 'match_rate': 100.0}}, 'task_ids': {'failed_task_ids': '', 'matched_task_ids': '14', 'mismatched_task_ids': '', 'empty_result_task_ids': ''}, 'details': {'14': {'total_nodes': 6, 'output_nodes': 1, 'output_success': 1, 'output_failure': 0, 'errors': [], 'node_types': {'start': 1, 'schema_linking': 1, 'generate_sql': 1, 'execute_sql': 1, 'reflect': 1, 'output': 1}, 'completion_time': 1758197249.7893646, 'status': 'completed', 'comparison_results': [{'task_id': '14', 'actual_file_exists': True, 'gold_file_exists': True, 'actual_path': 'output/bird_sqlite/14.csv', 'gold_path': '/app/benchmark/dev_20240627/gold/exec_result/14.csv', 'comparison': {'match': True, 'actual_file_exists': True, 'expected_file_exists': True, 'actual_shape': (5, 1), 'expected_shape': (5, 1), 'actual_preview': 'NCESSchool\\n       ----------\\n       11707\\n       4653\\n       8283\\n       ...', 'expected_preview': 'NCESSchool\\n       ----------\\n       11707\\n       4653\\n       8283\\n       ...', 'error': None}}]}}} [__main__]\n</code></pre>"},{"location":"cli/chat_command/","title":"Chat Command <code>/</code>","text":""},{"location":"cli/chat_command/#1-overview","title":"1. Overview","text":"<p>The Chat Command <code>/</code> is the heart of Datus-CLI. It enables you to converse with the AI agent in a multi-turn session, describe tasks in natural language, and receive reasoning steps and SQL code suggestions. Think of it as your copilot for exploring data, drafting SQL, and planning workflows \u2014 all directly in the CLI.</p> <p>You can chat with Datus in any format \u2014 plain English, bullet points, or sketches of logic \u2014 and freely edit or follow up on its responses. The agent keeps track of your instructions and previous outputs, so you can iteratively refine results without starting over.</p>"},{"location":"cli/chat_command/#2-basic-usage","title":"2. Basic Usage","text":"<p>Start a new chat session by entering <code>/</code> followed by your message:</p> <pre><code>/ How many orders were placed last week?\n</code></pre> <p>The agent will respond with its reasoning process and a proposed SQL query. You can then follow up naturally:</p> <pre><code>/ Filter only for VIP customers\n</code></pre> <p>Datus streams the output as it thinks \u2014 showing each action's execution result in real time. If the result contains SQL, it will:</p> <ul> <li>Automatically highlight the SQL in the output</li> <li>Copy the SQL to your clipboard for quick use</li> <li>Finally produce a Markdown-formatted summary of the result</li> </ul> <p></p> <p></p> <p></p>"},{"location":"cli/chat_command/#3-advanced-features","title":"3. Advanced Features","text":""},{"location":"cli/chat_command/#context-injection","title":"Context Injection","text":"<p>Context Injection allows you to pull existing tables, metrics or files into your conversation. There are two ways to do this:</p>"},{"location":"cli/chat_command/#browse-mode","title":"Browse Mode","text":"<p>Type <code>@</code> and press Tab to browse your context tree step by step. You can navigate by category (table / file / metrics) and drill down the directory-like structure to select the exact item you need.</p>"},{"location":"cli/chat_command/#fuzzy-search-mode","title":"Fuzzy Search Mode","text":"<p>Type <code>@</code> followed by some keywords, then press Tab to trigger a fuzzy search. Datus will suggest context items ranked by textual similarity, letting you quickly find what you need without knowing the exact path.</p> <p>This is the fastest way to ground your prompts with precise context.</p> <p></p> <p></p>"},{"location":"cli/chat_command/#session-commands","title":"Session Commands","text":"<ul> <li><code>.clear</code>: Clear the current session context and start fresh</li> <li><code>.compact</code>: Compress previous turns to reduce memory usage while preserving context</li> <li>Auto-trigger: <code>.compact</code> will run automatically when the model context usage exceeds 90%, so you can continue chatting without hitting limits</li> <li><code>.chat_info</code>: Show the current active context (messages, tables, metrics)</li> </ul>"},{"location":"cli/context_command/","title":"Context Command <code>@</code>","text":""},{"location":"cli/context_command/#1-overview","title":"1. Overview","text":"<p>The Context Command <code>@</code> allows you to inject rich contextual knowledge directly into your chat session. Instead of asking the model to guess your data structure, you can explicitly point it to the tables, metrics, or SQL snippets you want it to use \u2014 dramatically improving the accuracy of generated SQL.</p> <p>Context items are organized into three separate trees:</p> <ul> <li><code>@catalog</code> \u2014 your physical data structure (databases, schemas, tables)</li> <li><code>@subject</code> \u2014 your semantic/business layer (domains, layers, semantic models, metrics)</li> </ul> <p>By combining these, you give Datus the same mental model you have \u2014 so it can reason with your data instead of guessing.</p>"},{"location":"cli/context_command/#2-basic-usage","title":"2. Basic Usage","text":"<p>You can summon the context browser by typing <code>@</code> and pressing Tab. Depending on which command you choose, you'll see a tree view you can drill down:</p>"},{"location":"cli/context_command/#catalog","title":"@catalog","text":"<pre><code>catalog\n  \u2514\u2500\u2500 database\n      \u2514\u2500\u2500 schema\n          \u2514\u2500\u2500 table\n</code></pre> <p>When your focus is on the panel where the semantic model is located and modify it via <code>Ctrl+e</code>.</p> <p></p>"},{"location":"cli/context_command/#subject","title":"@subject","text":"<pre><code>domain\n  \u2514\u2500\u2500 layer1\n      \u2514\u2500\u2500 layer2\n          \u2514\u2500\u2500 semantic_model\n              \u2514\u2500\u2500 metrics\n              \u2514\u2500\u2500 historical sqls\n</code></pre>"},{"location":"cli/context_command/#modify-domain-layers-and-name","title":"Modify Domain layers and Name","text":"<p>When your focus is on the domain tree on the left, you can modify it via <code>Ctrl+e</code></p> <p></p>"},{"location":"cli/context_command/#modify-metrics-details","title":"Modify Metrics Details","text":"<p>When your focus is on the panel where the metrics details are located on the right, you can modify it via <code>Ctrl+e</code>. </p>"},{"location":"cli/context_command/#modify-historical-sql","title":"Modify Historical SQL","text":"<p>When your focus is on the panel on the right where the historical SQL details is located, you can modify it via <code>Ctrl+e</code> </p> <p>For the initialization of the context tree, you can refer to the Knowledge Base documentation.</p>"},{"location":"cli/context_command/#3-advanced-features","title":"3. Advanced Features","text":""},{"location":"cli/context_command/#context-injection-modes","title":"Context Injection Modes","text":"<p>There are two ways to inject context in chat commands:</p>"},{"location":"cli/context_command/#browse-mode","title":"Browse Mode","text":"<p>Type <code>@</code> (or <code>@catalog</code>, <code>@subject</code>, <code>@sql</code>) and press Tab to open the tree browser, navigating node by node until you reach the desired table, metric, or SQL.</p>"},{"location":"cli/context_command/#fuzzy-search-mode","title":"Fuzzy Search Mode","text":"<p>Type <code>@</code> (or <code>@any_text</code>) followed by any text, then press Tab. Datus will fuzzy search across all context trees and suggest the best matches, so you don't need to remember exact paths. Recent tables, metrics, and SQL searched in the !execution command will appear at the top of the results.</p>"},{"location":"cli/context_command/#examples","title":"Examples","text":"<pre><code># Browse mode - navigate step by step\n/ pay attention to @catalog &lt;Tab&gt;\n# Select catalog &gt; my_database &gt; public &gt; customers step by step\n\n# Fuzzy search mode - quick keyword search\n/ @revenue &lt;Tab&gt;\n# Shows all revenue-related metrics across all domains\n</code></pre>"},{"location":"cli/context_command/#context-types","title":"Context Types","text":""},{"location":"cli/context_command/#physical-data-catalog","title":"Physical Data (<code>@catalog</code>)","text":"<ul> <li>Databases and schemas</li> <li>Table structures and column definitions</li> <li>Data types and constraints</li> <li>Foreign key relationships</li> </ul>"},{"location":"cli/context_command/#business-context-subject","title":"Business Context (<code>@subject</code>)","text":"<ul> <li>Business domains and data layers</li> <li>Semantic models and business logic</li> <li>Calculated metrics and KPIs</li> <li>Business glossary and definitions</li> </ul>"},{"location":"cli/context_command/#historical-knowledge-sql","title":"Historical Knowledge (<code>@sql</code>)","text":"<ul> <li>Previously executed SQL queries</li> <li>Reusable SQL snippets and templates</li> <li>Query patterns and best practices</li> <li>Optimization examples</li> </ul> <p>Check the knowledge base documentation to learn how to build these context trees.</p>"},{"location":"cli/execution_command/","title":"Tool Commands <code>!</code>","text":""},{"location":"cli/execution_command/#1-overview","title":"1. Overview","text":"<p>Tool commands (prefixed with <code>!</code>) provide specialized AI-powered capabilities and utility operations within the Datus-CLI environment. These commands enable schema discovery, SQL generation, query optimization, and other intelligent data operations without leaving the interactive session.</p>"},{"location":"cli/execution_command/#2-command-categories","title":"2. Command Categories","text":""},{"location":"cli/execution_command/#21-ai-workflow-commands","title":"2.1 AI Workflow Commands","text":""},{"location":"cli/execution_command/#run-query","title":"<code>!run &lt;query&gt;</code>","text":"<p>Run a natural language query through the AI agent with live workflow status display.</p> <pre><code>!run Find all users who made purchases in the last 30 days\n!run Calculate total revenue by product category\n</code></pre> <p>This command creates an interactive workflow that:</p> <ul> <li>Performs automatic schema linking</li> <li>Generates optimized SQL queries</li> <li>Executes queries and displays results</li> <li>Provides real-time status updates</li> </ul>"},{"location":"cli/execution_command/#22-schema-discovery-commands","title":"2.2 Schema Discovery Commands","text":""},{"location":"cli/execution_command/#sl-schema_linking","title":"<code>!sl</code> / <code>!schema_linking</code>","text":"<p>Perform intelligent schema linking to discover relevant tables and columns for your query.</p> <pre><code>!sl user purchase information\n!schema_linking sales data by region\n</code></pre> <p>Features:</p> <ul> <li>Semantic search for relevant database tables</li> <li>Table definition (DDL) display</li> <li>Sample data preview</li> <li>Configurable matching methods: fast, medium, slow, from_llm</li> <li>Adjustable top_n results</li> </ul> <p>Interactive prompts guide you through:</p> <ul> <li>Catalog/database/schema selection</li> <li>Number of tables to match</li> <li>Matching method preference</li> </ul>"},{"location":"cli/execution_command/#23-search-discovery-commands","title":"2.3 Search &amp; Discovery Commands","text":""},{"location":"cli/execution_command/#sm-search_metrics","title":"<code>!sm</code> / <code>!search_metrics</code>","text":"<p>Use natural language to search for corresponding metrics in your data catalog.</p> <pre><code>!sm monthly active users\n!search_metrics revenue growth rate\n</code></pre> <p>Allows filtering by:</p> <ul> <li>Domain</li> <li>Layer1 (business layer)</li> <li>Layer2 (sub-layer)</li> <li>Top N results</li> </ul>"},{"location":"cli/execution_command/#ss-search_sql","title":"<code>!ss</code> / <code>!search_sql</code>","text":"<p>Search historical SQL queries using natural language descriptions.</p> <pre><code>!ss queries about user retention\n!search_sql monthly sales reports\n</code></pre> <p>Returns:</p> <ul> <li>SQL query text with syntax highlighting</li> <li>Query summary and comments</li> <li>Tags and categorization</li> <li>Domain/layer metadata</li> <li>File path and relevance distance</li> </ul>"},{"location":"cli/execution_command/#24-sql-generation-optimization-commands","title":"2.4 SQL Generation &amp; Optimization Commands","text":""},{"location":"cli/execution_command/#gen","title":"<code>!gen</code>","text":"<p>Generate SQL queries based on natural language task descriptions with optional table constraints.</p> <pre><code>!gen Show me top 10 customers by revenue\n!gen Calculate year-over-year growth by product\n</code></pre> <p>The command:</p> <ul> <li>Creates a new SQL task or reuses the current one</li> <li>Leverages recent table schemas and metrics from context</li> <li>Generates optimized SQL with explanation</li> <li>Stores result in CLI context for further operations</li> </ul>"},{"location":"cli/execution_command/#fix-description","title":"<code>!fix &lt;description&gt;</code>","text":"<p>Fix issues in the last executed SQL query based on your description.</p> <pre><code>!fix The date filter should be for last quarter, not last month\n!fix Add grouping by region\n</code></pre> <p>Requirements:</p> <ul> <li>Requires a previous SQL query in context</li> <li>Interactive confirmation before execution</li> <li>Preserves original query for reference</li> </ul>"},{"location":"cli/execution_command/#25-advanced-ai-commands","title":"2.5 Advanced AI Commands","text":""},{"location":"cli/execution_command/#gen_metrics","title":"<code>!gen_metrics</code>","text":"<p>Generate metrics definitions from SQL queries and table structures.</p> <pre><code>!gen_metrics\n</code></pre> <p>Features: - Extracts metric definitions from SQL - Interactive configuration of:   - Task description   - Source SQL query   - Prompt version</p>"},{"location":"cli/execution_command/#gen_semantic_model","title":"<code>!gen_semantic_model</code>","text":"<p>Generate semantic models for data modeling and documentation.</p> <pre><code>!gen_semantic_model\n</code></pre> <p>Interactive prompts for:</p> <ul> <li>Table name selection</li> <li>Catalog/database/schema metadata</li> <li>Business layer (layer1/layer2)</li> <li>Domain classification</li> <li>Prompt version</li> </ul>"},{"location":"cli/execution_command/#26-analysis-commands","title":"2.6 Analysis Commands","text":""},{"location":"cli/execution_command/#reason","title":"<code>!reason</code>","text":"<p>Perform SQL reasoning and explanation with streaming output.</p> <pre><code>!reason\n</code></pre> <p>Provides:</p> <ul> <li>SQL query analysis</li> <li>Explanation of query logic</li> <li>Performance considerations</li> <li>Potential optimization suggestions</li> </ul>"},{"location":"cli/execution_command/#compare","title":"<code>!compare</code>","text":"<p>Compare SQL results with expected outcomes.</p> <pre><code>!compare\n</code></pre> <p>Features:</p> <ul> <li>Interactive expectation input (SQL query or data format)</li> <li>Detailed comparison analysis</li> <li>Discrepancy identification</li> </ul>"},{"location":"cli/execution_command/#27-utility-commands","title":"2.7 Utility Commands","text":""},{"location":"cli/execution_command/#save","title":"<code>!save</code>","text":"<p>Save the last query result to a file.</p> <pre><code>!save\n</code></pre> <p>Interactive options:</p> <ul> <li>File type: json, csv, sql, or all</li> <li>Output directory (defaults to ~/.datus/output)</li> <li>Custom filename</li> </ul>"},{"location":"cli/execution_command/#bash-command","title":"<code>!bash &lt;command&gt;</code>","text":"<p>Execute safe bash commands (security restricted).</p> <pre><code>!bash pwd\n!bash ls -la\n!bash cat config.yaml\n</code></pre> <p>Security: Only whitelisted commands are allowed:</p> <ul> <li><code>pwd</code> - Print working directory</li> <li><code>ls</code> - List files</li> <li><code>cat</code> - Display file contents</li> <li><code>head</code> - Show file beginning</li> <li><code>tail</code> - Show file end</li> <li><code>echo</code> - Display text</li> </ul> <p>Commands not in the whitelist will be rejected with a security warning.</p>"},{"location":"cli/execution_command/#3-best-practices","title":"3. Best Practices","text":"<ol> <li>Start with Schema Linking - Use <code>!sl</code> to discover relevant tables before generating queries</li> <li>Leverage Search - Use <code>!sm</code> and <code>!sh</code> to find existing metrics and queries before creating new ones</li> <li>Iterative Refinement - Use <code>!fix</code> to refine queries instead of starting from scratch</li> <li>Save Results - Use <code>!save</code> to preserve important query results</li> <li>Security First - Be aware of bash command restrictions when using <code>!bash</code></li> </ol>"},{"location":"cli/execution_command/#4-security-considerations","title":"4. Security Considerations","text":"<ul> <li>Tool commands run with the same privileges as the Datus-CLI process</li> <li>Bash commands are restricted to a whitelist of safe operations</li> <li><code>!bash</code> commands timeout after 10 seconds to prevent hanging</li> <li>All operations are logged for audit purposes</li> <li>API credentials and database connections are handled securely</li> </ul>"},{"location":"cli/introduction/","title":"Introduction","text":"<p>Datus-CLI is an AI-native, terminal-first SQL client built for data engineers. It combines an agentic chat experience, precise context management, and reproducible execution into one lightweight workflow, enabling you to reason about data, generate and refine SQL, and run tasks\u2014all without leaving your terminal.</p>"},{"location":"cli/introduction/#core-magic-commands","title":"Core Magic Commands","text":"<p>At its core are three \"magic commands\" that keep things simple and fast:</p> <ul> <li><code>/</code> Chat command - For multi-turn conversation</li> <li><code>@</code> Context command - For on-demand recall of metadata/metrics</li> <li><code>!</code> Execution command - For deterministic, scriptable actions</li> </ul>"},{"location":"cli/introduction/#additional-features","title":"Additional Features","text":"<p>In addition to the three magic commands, you can also:</p> <ul> <li>Run SQL directly like a traditional SQL client</li> <li>Use session commands such as <code>.compact</code> and <code>.clear</code> to manage or reset sessions</li> <li>Explore metadata with <code>.tables</code> and <code>.databases</code></li> <li>Use <code>.mcp</code> to add, remove, or test MCP servers to extend functionality</li> <li>Use plan mode to break down complex tasks into reviewable steps before execution</li> </ul>"},{"location":"cli/introduction/#what-is-vibe-sql","title":"What is Vibe SQL?","text":"<p>Vibe SQL is the Datus philosophy that you don't need to write every SQL line yourself. Instead of manually crafting queries, you describe your intent and data \"vibe\" in natural language, and Datus:</p> <ul> <li>Generates working SQL behind the scenes</li> <li>Builds tables, metrics, and views for you automatically</li> <li>Can wire those results into a ready-made chatbot or analytics interface for your stakeholders</li> </ul>"},{"location":"cli/introduction/#what-makes-datus-cli-different","title":"What Makes Datus-CLI Different","text":"<ul> <li> <p>Context, not control - Datus treats the workflow context as short-term memory (task description, executed SQL + results/reflections, selected tables/metrics) and builds long-term memory from user preferences and the surrounding data environment (lineage, metrics, docs)</p> </li> <li> <p>Explainable, reliable flows - Workflows can pause, edit, and resume at any node, introducing human-in-the-loop (HITL) when confidence is low\u2014so you get both exploration and control</p> </li> <li> <p>Two-way context engineering - Datus builds durable memory from Tree + Vector recall across catalogs, metrics, success-story SQL, and external rules\u2014so useful context is always one \"@\" away</p> </li> </ul>"},{"location":"cli/introduction/#why-a-cli","title":"Why a CLI?","text":"<p>A CLI provides tighter control over context (not just code), making it easier to keep diffs small and reproducible while collaborating with an AI agent. This is especially useful when you want reliable changes instead of opaque, large edits typical of GUI tools.</p>"},{"location":"cli/introduction/#getting-started","title":"Getting Started","text":"<p>You first need to install and initialize Datus-CLI through the installation process, and then you can start Datus-CLI by running:</p> <pre><code>datus-cli --namespace duckdb-demo\n</code></pre>"},{"location":"cli/mcp_extensions/","title":"MCP Extensions","text":""},{"location":"cli/mcp_extensions/#1-overview","title":"1. Overview","text":"<p>MCP (Model Context Protocol) is how Datus-CLI connects to external tool servers \u2014 enabling your agent to gain new capabilities beyond what's built in.</p> <p>With <code>.mcp</code>, you can:</p> <ul> <li>Add local or remote MCP servers (stdio, HTTP, SSE)</li> <li>List all available servers and their status</li> <li>Check a server's connection and available tools</li> <li>Call a tool exposed by any MCP server directly inside your CLI</li> </ul> <p>This makes Datus-CLI infinitely extensible: you can plug in SQLite, Snowflake, MetricFlow, Filesystem, or even your own custom MCP server without changing the Datus core.</p>"},{"location":"cli/mcp_extensions/#2-basic-usage","title":"2. Basic Usage","text":""},{"location":"cli/mcp_extensions/#add-a-new-mcp-server","title":"Add a New MCP Server","text":"<pre><code>.mcp add &lt;name&gt; &lt;command&gt; [args...]\n</code></pre> <p>Examples:</p> <pre><code># Local stdio-based server\n.mcp add --transport stdio sqlite /Users/me/bin/uv -- -m mcp_sqlite_server\n\n# SSE server with authentication header\n.mcp add --transport sse api-server https://api.example.com/mcp/sse \\\n  --header \"Authorization: Bearer token\" --timeout 30.0\n\n# HTTP stream server\n.mcp add --transport http metricflow https://localhost:9000/mcp\n</code></pre>"},{"location":"cli/mcp_extensions/#list-existing-servers","title":"List Existing Servers","text":"<pre><code>.mcp list\n</code></pre> <p>Shows all configured MCP servers and their status:</p> <pre><code>1. duckdb-mftutorial  \u2718 failed\n2. filesystem         \u2714 connected\n3. metricflow         \u2714 connected\n4. snowflake_local    \u2714 connected\n5. sqlite             \u2714 connected\n</code></pre> <p>You can press Enter to view server details, such as command, args, environment, and available tools.</p>"},{"location":"cli/mcp_extensions/#check-a-specific-server","title":"Check a Specific Server","text":"<pre><code>.mcp check &lt;mcp_name&gt;\n</code></pre> <p>Verifies connectivity and prints available tools from that server.</p>"},{"location":"cli/mcp_extensions/#call-a-tool-from-a-server","title":"Call a Tool from a Server","text":"<pre><code>.mcp call &lt;mcp_name&gt;.&lt;tool_name&gt; &lt;args&gt;\n</code></pre> <p>Examples:</p> <pre><code>.mcp call sqlite.list_tables\n.mcp call metricflow.list_metrics\n</code></pre>"},{"location":"cli/mcp_extensions/#3-advanced-features","title":"3. Advanced Features","text":""},{"location":"cli/mcp_extensions/#storage-configuration","title":"Storage &amp; Configuration","text":"<ul> <li>All MCP server definitions are stored in a single JSON file: <code>~/.datus/conf/.mcp.json</code></li> <li>Each entry includes command, args, optional env, and headers</li> <li>Environment variables can be expanded with <code>${VAR}</code> or <code>${VAR:-default}</code> inside command, args, env, url, or headers</li> </ul> <p>Example configuration:</p> <pre><code>{\n  \"mcpServers\": {\n    \"metricflow\": {\n      \"command\": \"/Users/me/miniconda3/bin/uv\",\n      \"args\": [\n        \"--directory\", \"/Users/me/src/mcp-metricflow-server\",\n        \"run\", \"mcp-metricflow-server\"\n      ],\n      \"env\": {\n        \"MF_PROJECT_DIR\": \"/Users/me/.metricflow/sample_models\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"cli/mcp_extensions/#server-types","title":"Server Types","text":"<ul> <li>stdio \u2014 starts a local subprocess and communicates via stdin/stdout</li> <li>http \u2014 connects to a streamable HTTP endpoint</li> <li>sse \u2014 connects to a Server-Sent Events endpoint</li> </ul> <p>Use stdio for local dev tools (fastest), http for persistent servers, and sse for remote cloud services.</p>"},{"location":"cli/mcp_extensions/#environment-variable-expansion","title":"Environment Variable Expansion","text":"<p>MCP configurations support environment variable expansion:</p> <pre><code>{\n  \"mcpServers\": {\n    \"snowflake\": {\n      \"command\": \"${PYTHON_PATH:-python}\",\n      \"args\": [\"-m\", \"mcp_snowflake_server\"],\n      \"env\": {\n        \"SNOWFLAKE_ACCOUNT\": \"${SNOWFLAKE_ACCOUNT}\",\n        \"SNOWFLAKE_USER\": \"${SNOWFLAKE_USER}\",\n        \"SNOWFLAKE_PASSWORD\": \"${SNOWFLAKE_PASSWORD:-}\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"cli/mcp_extensions/#error-handling-and-debugging","title":"Error Handling and Debugging","text":"<ul> <li>Server connection failures are clearly reported</li> <li>Tool call errors include detailed error messages</li> <li>Debug mode available for troubleshooting connectivity issues</li> <li>Automatic retry logic for transient connection failures</li> </ul>"},{"location":"cli/mcp_extensions/#security-considerations","title":"Security Considerations","text":"<ul> <li>Environment variables containing secrets are handled securely</li> <li>Authentication headers are stored encrypted</li> <li>Local stdio servers run with user permissions</li> <li>Remote connections use secure protocols (HTTPS/WSS)</li> </ul>"},{"location":"cli/mcp_extensions/#integration-examples","title":"Integration Examples","text":""},{"location":"cli/mcp_extensions/#database-integration","title":"Database Integration","text":"<pre><code># Add SQLite server for local development\n.mcp add sqlite uvx mcp-server-sqlite --db-path ./data/sample.db\n\n# Query tables through MCP\n.mcp call sqlite.list_tables\n.mcp call sqlite.read_query \"SELECT * FROM customers LIMIT 5\"\n</code></pre>"},{"location":"cli/mcp_extensions/#metricflow-integration","title":"MetricFlow Integration","text":"<pre><code># Add MetricFlow server for semantic layer\n.mcp add metricflow python -m mcp_metricflow_server\n\n# Access business metrics\n.mcp call metricflow.list_metrics\n.mcp call metricflow.query_metrics --metrics revenue --dimensions customer_segment\n</code></pre>"},{"location":"cli/mcp_extensions/#filesystem-integration","title":"Filesystem Integration","text":"<pre><code># Add filesystem server for file operations\n.mcp add filesystem python -m mcp_filesystem_server --base-path /project/data\n\n# File operations through MCP\n.mcp call filesystem.list_directory /reports\n.mcp call filesystem.read_file /reports/summary.md\n</code></pre>"},{"location":"cli/plan_mode/","title":"Plan Mode User Guide(Beta)","text":""},{"location":"cli/plan_mode/#overview","title":"Overview","text":"<p>Plan Mode is an interactive workflow feature that helps you break down complex tasks into manageable steps. Instead of executing commands immediately, the AI first creates a detailed execution plan that you can review, modify, and control.</p>"},{"location":"cli/plan_mode/#how-it-works","title":"How It Works","text":"<p>Plan Mode follows a three-phase workflow:</p> <ol> <li>Plan Generation - AI analyzes your request and creates a step-by-step plan</li> <li>User Confirmation - You review and choose how to execute the plan</li> <li>Execution - Steps are executed based on your chosen mode</li> </ol>"},{"location":"cli/plan_mode/#getting-started","title":"Getting Started","text":"<p>To use Plan Mode, press Shift+Tab to toggle plan mode on/off before submitting your message. When enabled, the system will automatically enter planning workflow instead of executing immediately.</p>"},{"location":"cli/plan_mode/#workflow-phases","title":"Workflow Phases","text":""},{"location":"cli/plan_mode/#phase-1-plan-generation","title":"Phase 1: Plan Generation","text":"<p>When you submit a request in plan mode, the AI will:</p> <ul> <li>Analyze your requirements</li> <li>Break down the task into clear, actionable steps</li> <li>Display the proposed execution plan</li> </ul> <p>Example output: <pre><code>Plan Generated Successfully!\nExecution Plan:\n  1. Query the customer database for recent orders\n  2. Calculate total revenue by product category\n  3. Generate summary report with visualizations\n  4. Export results to CSV file\n</code></pre></p>"},{"location":"cli/plan_mode/#phase-2-choose-execution-mode","title":"Phase 2: Choose Execution Mode","text":"<p>After the plan is generated, you'll be prompted to select an execution mode:</p> <pre><code>CHOOSE EXECUTION MODE:\n\n  1. Manual Confirm - Confirm each step\n  2. Auto Execute - Run all steps automatically\n  3. Revise - Provide feedback and regenerate plan\n  4. Cancel\n</code></pre>"},{"location":"cli/plan_mode/#option-1-manual-confirm-mode","title":"Option 1: Manual Confirm Mode","text":"<ul> <li>Best for: Tasks requiring careful review at each step</li> <li>How it works: Before each step execution, you'll see:</li> <li>Full plan with progress indicators (\u2713 completed, \u25b6 current, \u25cb pending)</li> <li>The next step to be executed</li> <li>Options to continue, switch to auto mode, revise, or cancel</li> </ul> <p>Example interaction: <pre><code>Plan Progress:\n  \u2713 1. Query the customer database for recent orders\n  \u25b6 2. Calculate total revenue by product category\n  \u25cb 3. Generate summary report with visualizations\n  \u25cb 4. Export results to CSV file\n\nNext step: Calculate total revenue by product category\nOptions:\n  1. Execute this step\n  2. Execute this step and continue automatically\n  3. Revise remaining plan\n  4. Cancel\n\nYour choice (1-4) [1]:\n</code></pre></p>"},{"location":"cli/plan_mode/#option-2-auto-execute-mode","title":"Option 2: Auto Execute Mode","text":"<ul> <li>Best for: Well-defined tasks that don't require step-by-step review</li> <li>How it works: All steps execute automatically with minimal interruption</li> <li>Note: You can still cancel execution at any point</li> </ul> <p>Example interaction: <pre><code>Plan Progress:\n  \u2713 1. Query the customer database for recent orders\n  \u25b6 2. Calculate total revenue by product category\n  \u25cb 3. Generate summary report with visualizations\n  \u25cb 4. Export results to CSV file\n\nAuto Mode: Calculate total revenue by product category\nExecute? (y/n) [y]:\n</code></pre></p>"},{"location":"cli/plan_mode/#option-3-revise-plan","title":"Option 3: Revise Plan","text":"<ul> <li>Best for: When the initial plan doesn't meet your needs</li> <li>How it works:</li> <li>Provide feedback on what should be changed</li> <li>AI regenerates the plan incorporating your feedback</li> <li>Already completed steps are preserved</li> <li>You can revise multiple times until satisfied</li> </ul> <p>Example: <pre><code>Feedback for replanning: Add data validation step before calculation\n\nReplanning with feedback: Add data validation step before calculation\n[New plan generated with validation step included]\n</code></pre></p>"},{"location":"cli/plan_mode/#option-4-cancel","title":"Option 4: Cancel","text":"<ul> <li>Stops the entire workflow</li> <li>No steps will be executed</li> <li>Safe exit from plan mode</li> </ul>"},{"location":"cli/plan_mode/#progress-tracking","title":"Progress Tracking","text":"<p>During execution, the system shows real-time progress with visual indicators:</p> <ul> <li>\u2713 (green checkmark) - Completed steps</li> <li>\u25b6 (yellow arrow) - Current step being executed</li> <li>\u25cb (white circle) - Pending steps</li> </ul>"},{"location":"cli/plan_mode/#mid-execution-options","title":"Mid-Execution Options","text":"<p>While executing in manual mode, you can:</p> <ol> <li>Continue step-by-step - Maintain control over each action</li> <li>Switch to auto mode - Speed up remaining steps</li> <li>Revise remaining plan - Adjust upcoming steps based on current results</li> <li>Cancel execution - Stop the workflow</li> </ol>"},{"location":"cli/plan_mode/#best-practices","title":"Best Practices","text":""},{"location":"cli/plan_mode/#when-to-use-manual-mode","title":"When to Use Manual Mode","text":"<ul> <li>Complex database operations</li> <li>Tasks with potential side effects</li> <li>Learning new workflows</li> <li>Critical operations requiring validation</li> </ul>"},{"location":"cli/plan_mode/#when-to-use-auto-mode","title":"When to Use Auto Mode","text":"<ul> <li>Routine, well-tested operations</li> <li>Report generation</li> <li>Data exports</li> <li>Multi-step queries you're confident about</li> </ul>"},{"location":"cli/plan_mode/#error-handling","title":"Error Handling","text":"<p>If a step fails during execution:</p> <ul> <li>The system marks it as failed</li> <li>Execution pauses in manual mode</li> <li>You can revise the plan to address the error</li> <li>Previously completed steps are preserved</li> </ul>"},{"location":"cli/plan_mode/#summary","title":"Summary","text":"<p>Plan Mode gives you control over complex workflows by:</p> <ul> <li>Breaking tasks into clear steps</li> <li>Letting you review before execution</li> <li>Providing flexibility during execution</li> <li>Preserving progress when revising plans</li> </ul> <p>Choose manual mode when you need control, auto mode when you're confident, and don't hesitate to revise when the plan needs adjustment.</p>"},{"location":"cli/reference/","title":"Reference","text":"<p>This section is currently under preparation. A full command reference will be added in a future release.</p>"},{"location":"cli/sql_execution/","title":"SQL Execution","text":""},{"location":"cli/sql_execution/#1-overview","title":"1. Overview","text":"<p>Besides the magic commands (<code>/</code>, <code>@</code>, <code>!</code>), Datus-CLI can also act as a traditional SQL client. You can directly run SQL queries and explore database metadata with built-in metadata commands (<code>.tables</code>, <code>.databases</code>, <code>.schemas</code>, etc.).</p> <p>We use a set of built-in Metadata Commands to provide a unified way to access metadata across all databases \u2014 but the native commands like <code>SHOW DATABASES</code> or <code>DESCRIBE TABLES</code> are still available and can be used as well.</p>"},{"location":"cli/sql_execution/#2-basic-usage","title":"2. Basic Usage","text":""},{"location":"cli/sql_execution/#run-sql","title":"Run SQL","text":"<p>Execute SQL queries directly in the CLI:</p> <pre><code>Datus-sql&gt; SELECT T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`District Name` = 'Fresno County Office of Education' AND T1.`Charter School (Y/N)` = 1\n</code></pre> <p>Output: <pre><code>\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n\u2503 Zip              \u2503\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n\u2502 93726-5309       \u2502\n\u2502 93628-9602       \u2502\n\u2502 93706-2611       \u2502\n\u2502 93726-5208       \u2502\n\u2502 93706-2819       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nReturned 5 rows in 0.01 seconds\n</code></pre></p>"},{"location":"cli/sql_execution/#explore-metadata","title":"Explore Metadata","text":"<p>Use the built-in metadata commands to explore your database structure:</p> <pre><code>.databases                       # List all databases\n.database &lt;database_name&gt;        # Switch current database\n.schemas                         # List all schemas (or show details)\n.schema &lt;schema_name&gt;            # Switch current schema\n.tables                          # List all tables in current schema\n.table_schema &lt;table_name&gt;       # Show table DDL\n.indexes &lt;table_name&gt;            # Show table indexes\n</code></pre> <p>Use these commands to quickly inspect your data environment while chatting or debugging SQL.</p>"},{"location":"cli/sql_execution/#3-advanced-features","title":"3. Advanced Features","text":""},{"location":"cli/sql_execution/#cross-database-compatibility","title":"Cross-Database Compatibility","text":"<p>The metadata commands work consistently across different database types:</p> <ul> <li>SQLite: Local file databases</li> <li>DuckDB: Analytical workloads</li> <li>Snowflake: Cloud data warehouse</li> <li>MySQL/PostgreSQL: Traditional RDBMS</li> <li>StarRocks: Real-time analytics</li> </ul>"},{"location":"cli/sql_execution/#rich-output-formatting","title":"Rich Output Formatting","text":"<p>SQL results are displayed with:</p> <ul> <li>Table formatting: Clean, aligned columns with borders</li> <li>Data type awareness: Proper formatting for numbers, dates, strings</li> <li>Performance metrics: Execution time and row count</li> <li>Error handling: Clear error messages with suggestions</li> </ul>"},{"location":"cli/sql_execution/#query-history","title":"Query History","text":"<ul> <li>All executed queries are automatically saved</li> <li>Access previous queries with up/down arrow keys</li> <li>Query history persists across sessions</li> <li>Integration with the <code>@sql</code> context system</li> </ul>"},{"location":"cli/sql_execution/#export-options","title":"Export Options","text":"<p>Results can be exported in various formats:</p> <ul> <li>CSV: For data analysis and reporting</li> <li>JSON: For API integration and data exchange</li> <li>Parquet: For analytical workloads</li> <li>Excel: For business reporting</li> </ul>"},{"location":"cli/sql_execution/#best-practices","title":"Best Practices","text":""},{"location":"cli/sql_execution/#query-optimization","title":"Query Optimization","text":"<ol> <li>Use LIMIT for exploratory queries on large tables</li> <li>Index awareness: Check <code>.indexes</code> before writing complex JOINs</li> <li>Schema understanding: Use <code>.table_schema</code> to understand data types</li> <li>Performance monitoring: Pay attention to execution times</li> </ol>"},{"location":"cli/sql_execution/#metadata-exploration-workflow","title":"Metadata Exploration Workflow","text":"<ol> <li>Start with <code>.databases</code> to see available databases</li> <li>Switch to target database with <code>.database &lt;name&gt;</code></li> <li>Explore schemas with <code>.schemas</code></li> <li>List tables with <code>.tables</code></li> <li>Examine specific table structure with <code>.table_schema &lt;table&gt;</code></li> <li>Check indexes for performance with <code>.indexes &lt;table&gt;</code></li> </ol>"},{"location":"cli/sql_execution/#integration-with-chat","title":"Integration with Chat","text":"<p>Combine SQL execution with chat commands for maximum productivity:</p> <pre><code># Use chat to generate SQL\n/ Show me the top 10 customers by revenue\n\n# Execute the generated SQL directly\nSELECT customer_name, SUM(order_total) as revenue\nFROM customers c JOIN orders o ON c.id = o.customer_id\nGROUP BY customer_name\nORDER BY revenue DESC\nLIMIT 10;\n\n# Follow up with context injection\n@catalog customers\n/ Now show me their contact information\n</code></pre>"},{"location":"configuration/agent/","title":"Agent","text":"<p>The agent configuration defines the core settings for your Datus Agent, including the target model selection and all available LLM providers that can be used throughout the system.</p>"},{"location":"configuration/agent/#configuration-structure","title":"Configuration Structure","text":""},{"location":"configuration/agent/#target-model","title":"Target Model","text":"<p>The <code>target</code> field specifies the default LLM configuration that will be used across all nodes unless explicitly overridden.</p> <pre><code>agent:\n  target: openai  # Default model configuration key from models section\n</code></pre>"},{"location":"configuration/agent/#models-configuration","title":"Models Configuration","text":"<p>Configure LLM providers that your agent can use. Each model configuration includes the provider type, API endpoints, credentials, and specific model names.</p> <p>Required Parameters:</p> <ul> <li><code>provider</code> - The LLM provider name (you can name it as needed, not required to match the actual provider name)</li> <li><code>type</code> - Interface type corresponding to LLM manufacturers</li> <li><code>base_url</code> - Base address of the model provider's API endpoint</li> <li><code>api_key</code> - API key for accessing the LLM service (supports environment variables)</li> <li><code>model</code> - Specific model name to use from the provider</li> </ul> <pre><code>models:\n  provider_name:\n    type: provider_type\n    base_url: https://api.example.com/v1\n    api_key: ${API_KEY_ENV_VAR}\n    model: model-name\n</code></pre> <p>Environment Variables</p> <p>Use environment variables to securely store API keys and other sensitive information:</p> <pre><code># Recommended: Using environment variables\napi_key: ${YOUR_API_KEY}\n\n# Not recommended for production\napi_key: \"sk-your-actual-key-here\"\n</code></pre>"},{"location":"configuration/agent/#supported-llm-providers","title":"Supported LLM Providers","text":"<p>Datus Agent supports a wide range of LLM providers through standardized interfaces:</p> Provider Models Interface Type OpenAI GPT-4, GPT-5, and other OpenAI models <code>openai</code> Anthropic Claude 4 (Sonnet, Opus) and Claude 3 models <code>claude</code> Google Gemini models (Pro, Flash, Ultra) <code>gemini</code> DeepSeek DeepSeek Chat and DeepSeek Reasoning models <code>deepseek</code> Kimi Moonshot AI's Kimi models <code>openai</code> Qwen Alibaba's Qwen series models <code>openai</code>"},{"location":"configuration/agent/#provider-configuration-examples","title":"Provider Configuration Examples","text":"OpenAIAnthropic ClaudeDeepSeekGoogle GeminiKimi (Moonshot)Qwen (Alibaba)Azure OpenAI <pre><code>openai:\n  type: openai\n  base_url: https://api.openai.com/v1\n  api_key: ${OPENAI_API_KEY}\n  model: gpt-4-turbo\n</code></pre> <pre><code>anthropic:\n  type: claude\n  base_url: https://api.anthropic.com\n  api_key: ${ANTHROPIC_API_KEY}\n  model: claude-sonnet-4-20250514\n</code></pre> <pre><code>deepseek:\n  type: deepseek\n  base_url: https://api.deepseek.com\n  api_key: ${DEEPSEEK_API_KEY}\n  model: deepseek-chat\n</code></pre> <pre><code>google:\n  type: gemini\n  base_url: https://generativelanguage.googleapis.com/v1beta\n  api_key: ${GEMINI_API_KEY}\n  model: gemini-2.5-flash\n</code></pre> <pre><code>kimi:\n  type: openai  # Uses OpenAI-compatible interface\n  base_url: https://api.moonshot.cn/v1\n  api_key: ${KIMI_API_KEY}\n  model: kimi-k2-turbo-preview\n</code></pre> <pre><code>qwen:\n  type: openai  # Uses OpenAI-compatible interface\n  base_url: https://dashscope.aliyuncs.com/compatible-mode/v1\n  api_key: ${QWEN_API_KEY}\n  model: qwen-turbo\n</code></pre> <pre><code>azure_openai:\n  type: openai\n  base_url: https://${AZURE_OPENAI_ENDPOINT}/openai/deployments/${AZURE_DEPLOYMENT_NAME}\n  api_key: ${AZURE_OPENAI_API_KEY}\n  model: gpt-4\n</code></pre>"},{"location":"configuration/agent/#complete-configuration-example","title":"Complete Configuration Example","text":"<p>Here's a comprehensive agent configuration example with multiple providers:</p> datus-config.yaml<pre><code># Complete Datus Agent Configuration\nagent:\n  target: openai  # Default model for all operations\n\nmodels:\n  # Production OpenAI configuration\n  openai:\n    type: openai\n    base_url: https://api.openai.com/v1\n    api_key: ${OPENAI_API_KEY}\n    model: gpt-4-turbo\n\n  # Alternative Google Gemini\n  google:\n    type: gemini\n    base_url: https://generativelanguage.googleapis.com/v1beta\n    api_key: ${GEMINI_API_KEY}\n    model: gemini-2.5-flash\n\n  # Anthropic Claude for reasoning\n  anthropic:\n    type: claude\n    base_url: https://api.anthropic.com\n    api_key: ${ANTHROPIC_API_KEY}\n    model: claude-sonnet-4-20250514\n\n  # Cost-effective DeepSeek\n  deepseek_v3:\n    type: deepseek\n    base_url: https://api.deepseek.com\n    api_key: ${DEEPSEEK_API_KEY}\n    model: deepseek-chat\n\n  # Azure OpenAI (Enterprise)\n  azure_openai:\n    type: openai\n    base_url: https://${AZURE_OPENAI_ENDPOINT}/openai/deployments/${AZURE_DEPLOYMENT_NAME}\n    api_key: ${AZURE_OPENAI_API_KEY}\n    model: gpt-4\n</code></pre>"},{"location":"configuration/benchmark/","title":"Benchmark Configuration","text":"<p>Configure benchmark datasets to evaluate and test Datus Agent's performance on standardized SQL generation tasks. Benchmarks help measure accuracy, compare different configurations, and validate improvements.</p>"},{"location":"configuration/benchmark/#supported-benchmarks","title":"Supported Benchmarks","text":"<p>Datus Agent currently supports the following benchmark datasets:</p> <ul> <li>BIRD-DEV: A comprehensive benchmark for complex SQL generation</li> <li>Spider2: Advanced multi-database SQL benchmark</li> <li>Semantic Layer: Business metric and semantic understanding benchmark</li> </ul>"},{"location":"configuration/benchmark/#benchmark-configuration-structure","title":"Benchmark Configuration Structure","text":"<p>Configure benchmarks in the <code>benchmark</code> section of your configuration file:</p> <pre><code>benchmark:\n  bird_dev:                          # Benchmark namespace\n    benchmark_path: benchmark/bird/dev_20240627\n\n  spider2:\n    benchmark_path: benchmark/spider2/spider2-snow\n\n  semantic_layer:\n    benchmark_path: benchmark/semantic_layer\n</code></pre>"},{"location":"configuration/benchmark/#bird-dev-benchmark","title":"BIRD-DEV Benchmark","text":"<p>The BIRD (Big Bench for Large-scale Database Grounded Text-to-SQL Evaluation) benchmark tests complex SQL generation capabilities.</p>"},{"location":"configuration/benchmark/#configuration","title":"Configuration","text":"<pre><code>benchmark:\n  bird_dev:\n    benchmark_path: benchmark/bird/dev_20240627\n</code></pre>"},{"location":"configuration/benchmark/#spider2-benchmark","title":"Spider2 Benchmark","text":"<p>Spider2 is an advanced benchmark that tests SQL generation across multiple databases and complex scenarios.</p>"},{"location":"configuration/benchmark/#configuration_1","title":"Configuration","text":"<pre><code>benchmark:\n  spider2:\n    benchmark_path: benchmark/spider2/spider2-snow\n</code></pre>"},{"location":"configuration/benchmark/#semantic-layer-benchmark","title":"Semantic Layer Benchmark","text":"<p>Tests the agent's ability to understand business metrics and semantic relationships.</p>"},{"location":"configuration/benchmark/#configuration_2","title":"Configuration","text":"<pre><code>benchmark:\n  semantic_layer:\n    benchmark_path: benchmark/semantic_layer\n</code></pre> <p>For detailed usage instructions and advanced configuration options, see the Benchmarks chapter.</p>"},{"location":"configuration/introduction/","title":"Configuration Introduction","text":"<p>The Agent is the central configuration unit in Datus. It defines how your agent behaves, which models and databases it connects to, and how workflows are executed. By customizing the agent, you can adapt Datus to fit different environments and business scenarios.</p>"},{"location":"configuration/introduction/#key-highlights-of-agent-configuration","title":"Key Highlights of Agent Configuration","text":"<ul> <li>Flexibility at scale: Configure multiple models, connect to multiple databases, and define node strategies or workflow rules</li> <li>Agent configuration file: <code>agent.yml</code> is the primary configuration file for both datus-agent and datus-cli</li> <li> <p>Startup priority:</p> <ol> <li>File specified by <code>-f</code></li> <li><code>./conf/agent.yml</code></li> <li><code>~/.datus/conf/agent.yml</code></li> </ol> </li> <li> <p>Separation of concerns: MCP (Model Context Protocol) configuration is stored in <code>.mcp.json</code>, not in <code>agent.yml</code>, ensuring a clear boundary between agent settings and MCP server management</p> </li> </ul> <p>With this structure, agents in Datus remain modular, portable, and easy to maintain, giving you full control over how they run across different environments.</p>"},{"location":"configuration/introduction/#configuration-overview","title":"Configuration Overview","text":"<p>The Datus Agent configuration is the heart of how your system behaves\u2014it governs which models to use, how different components (nodes, workflows, storage, namespaces, benchmarks) connect, and how queries get processed end-to-end.</p> <p>Here's a high-level summary of each module and how they relate:</p> Module Purpose Key Concepts / Responsibilities Agent Global settings &amp; model providers Defines the default target LLM, and the set of supported LLM providers (with types, base URLs, API keys, model names) Nodes Task-level processing units Each \"node\" handles a specific step (schema linking, SQL generation, reasoning, reflection, output formatting, chat, utilities) in the data-to-SQL pipeline Workflow Orchestration of nodes Defines execution plans (sequential, parallel, sub-workflows, reflection paths) that specify how nodes are chained to answer a user's query Storage Embeddings &amp; vector store configuration Manages embedding models, device settings, embedding storage paths, and how metadata / documents / metrics are embedded and retrieved Namespace Database connection abstraction Encapsulates configurations for different databases (Snowflake, StarRocks, SQLite, DuckDB, etc.), allowing multi-database support under logical \"namespaces\" Benchmark Evaluation &amp; testing setup Defines benchmark datasets (e.g. BIRD-DEV, Spider2, semantic layer) and paths to evaluate the SQL-generation performance of the agent"},{"location":"configuration/introduction/#configuration-structure","title":"Configuration Structure","text":"<p>The main configuration file follows a hierarchical structure:</p> <pre><code># Global model configurations\nmodels:\n  default: \"openai:gpt-4\"\n  providers:\n    openai:\n      type: \"openai\"\n      base_url: \"https://api.openai.com/v1\"\n      api_key: \"${OPENAI_API_KEY}\"\n\n# Database connections\nnamespace:\n  production:\n    type: snowflake\n    account: \"${SNOWFLAKE_ACCOUNT}\"\n    username: \"${SNOWFLAKE_USER}\"\n    password: \"${SNOWFLAKE_PASSWORD}\"\n\n# Workflow execution plans\nworkflow:\n  default: \"reflection\"\n  plans:\n    reflection:\n      - schema_linking\n      - generate_sql\n      - execute_sql\n      - reflect\n      - output\n\n# Node-specific configurations\nnodes:\n  schema_linking:\n    model: \"openai:gpt-3.5-turbo\"\n    similarity_threshold: 0.7\n\n# Storage and embeddings\nstorage:\n  embedding_model: \"sentence-transformers/all-MiniLM-L6-v2\"\n  vector_store_path: \"./data/vector_store\"\n\n# Benchmark datasets\nbenchmark:\n  bird_dev:\n    path: \"./benchmark/bird/dev_20240627\"\n    database_pattern: \"**/*.sqlite\"\n</code></pre>"},{"location":"configuration/introduction/#environment-variable-support","title":"Environment Variable Support","text":"<p>All configuration values support environment variable expansion with default values:</p> <pre><code># Direct environment variable reference\napi_key: ${OPENAI_API_KEY}\n\n# Environment variable with default value\ntimeout: ${API_TIMEOUT:-30}\n\n# Complex string interpolation\nconnection_string: \"postgresql://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT:-5432}/${DB_NAME}\"\n</code></pre>"},{"location":"configuration/introduction/#multi-environment-configuration","title":"Multi-Environment Configuration","text":"<p>Configure different environments using separate configuration files:</p> <pre><code>conf/\n\u251c\u2500\u2500 agent.yml              # Main configuration\n\u251c\u2500\u2500 agent.yml.dev          # Development overrides\n\u251c\u2500\u2500 agent.yml.staging      # Staging environment\n\u251c\u2500\u2500 agent.yml.production   # Production settings\n\u2514\u2500\u2500 .mcp.json              # MCP server configuration\n</code></pre>"},{"location":"configuration/introduction/#next-steps","title":"Next Steps","text":"<p>Explore the detailed configuration for each component:</p> <ul> <li>Agent Settings: Configure models, providers, and global settings</li> <li>Database Namespaces: Set up multi-database connections</li> <li>Workflow Definitions: Define custom execution patterns</li> <li>Node Configuration: Customize individual node behavior</li> <li>Storage Settings: Configure knowledge base and vector storage</li> <li>Benchmark Datasets: Set up evaluation and testing</li> </ul>"},{"location":"configuration/namespace/","title":"Namespace","text":"<p>Configure database namespaces and connections for different data sources</p>"},{"location":"configuration/namespace/#overview","title":"Overview","text":"<p>Namespaces in Datus Agent provide a comprehensive data connectivity framework that abstracts and organizes database connections across diverse data ecosystems. Each namespace serves as a logical container that encapsulates database connection configurations, enabling seamless multi-database operations within a unified interface.</p> <p>The namespace configuration system is built on a polymorphic architecture that supports heterogeneous resource types through a unified abstraction layer. This design pattern enables:</p> <ul> <li>Universal Connectivity: Support for cloud data warehouses (Snowflake, StarRocks), local databases (SQLite, DuckDB), and specialized benchmark datasets</li> <li>Environment Isolation: Logical separation of development, staging, and production environments</li> <li>Credential Security: Environment variable-based credential management with secure connection protocols</li> <li>Dynamic Discovery: Pattern-based database discovery for automated inclusion of multiple database files</li> <li>Scalable Organization: Hierarchical namespace structure that grows with organizational complexity</li> </ul> <p>The namespace system operates as a configuration-driven abstraction layer that translates high-level business requirements into specific database connection parameters, providing developers and analysts with a consistent interface regardless of the underlying database technology.</p>"},{"location":"configuration/namespace/#namespace-structure","title":"Namespace Structure","text":"<p>Namespaces are configured under the <code>namespace</code> section and contain resource connection details for different service types:</p> <pre><code>namespace:\n  # service configuration\n  service:\n    type: cloud_provider\n    endpoint: ${SERVICE_ENDPOINT}\n    access_key: ${ACCESS_KEY}\n    secret_key: ${SECRET_KEY}\n    region: ${SERVICE_REGION}\n\n  # Local resource configuration\n  local_resource:\n    type: local_service\n    resources:\n      - name: primary\n        uri: protocol://path/to/resource\n      - name: secondary\n        uri: protocol://path/to/backup\n</code></pre>"},{"location":"configuration/namespace/#supported-database-types","title":"Supported Database Types","text":""},{"location":"configuration/namespace/#snowflake","title":"Snowflake","text":"<pre><code>snowflake:\n  type: snowflake\n  # Option 1: Using individual parameters\n  account: ${SNOWFLAKE_ACCOUNT}\n  username: ${SNOWFLAKE_USER}\n  password: ${SNOWFLAKE_PASSWORD}\n  database: ${SNOWFLAKE_DATABASE}    # Optional\n  schema: ${SNOWFLAKE_SCHEMA}        # Optional\n  warehouse: ${SNOWFLAKE_WAREHOUSE}  # Optional\n</code></pre>"},{"location":"configuration/namespace/#starrocks","title":"StarRocks","text":"<pre><code>starrocks:\n  type: starrocks\n  host: ${STARROCKS_HOST}\n  port: ${STARROCKS_PORT}\n  username: ${STARROCKS_USER}\n  password: ${STARROCKS_PASSWORD}\n  database: ${STARROCKS_DATABASE}\n  catalog: ${STARROCKS_CATALOG}      # Optional\n</code></pre>"},{"location":"configuration/namespace/#sqlite","title":"SQLite","text":"<pre><code># Single database configuration\nlocal_sqlite:\n  type: sqlite\n  name: ssb                          # Required for SQLite\n  uri: sqlite:////Users/xxx/benchmark/SSB.db\n\n# Multiple databases configuration\nlocal_sqlite_multi:\n  type: sqlite\n  dbs:\n    - name: ssb\n      uri: sqlite:////Users/xxx/benchmark/SSB.db\n    - name: northwind\n      uri: sqlite:////Users/xxx/data/northwind.db\n</code></pre>"},{"location":"configuration/namespace/#duckdb","title":"DuckDB","text":"<pre><code># Single database configuration\nlocal_duckdb:\n  type: duckdb\n  name: analytics\n  uri: duckdb:////absolute/path/to/analytics.db\n\n# Multiple databases configuration\nlocal_duckdb_multi:\n  type: duckdb\n  dbs:\n    - name: ssb\n      uri: duckdb:////absolute/path/to/ssb.db\n    - name: tpch\n      uri: duckdb:///relative/path/to/tpch.duckdb  # Relative path\n</code></pre>"},{"location":"configuration/namespace/#configuration-parameters","title":"Configuration Parameters","text":""},{"location":"configuration/namespace/#common-parameters","title":"Common Parameters","text":"<ul> <li>type: Database dialect/type (required)</li> <li>name: Database identifier (required for SQLite and DuckDB)</li> <li>uri: Connection URI for local databases</li> <li>host: Database server hostname</li> <li>port: Database server port</li> <li>username: Database username</li> <li>password: Database password</li> <li>database: Database name</li> </ul>"},{"location":"configuration/namespace/#database-specific-parameters","title":"Database-Specific Parameters","text":""},{"location":"configuration/namespace/#snowflake-parameters","title":"Snowflake Parameters","text":"<ul> <li>account: Snowflake account identifier (top-level container)</li> <li>warehouse: Compute warehouse to use</li> <li>role: User role for permissions</li> <li>schema: Default schema</li> </ul>"},{"location":"configuration/namespace/#starrocks-parameters","title":"StarRocks Parameters","text":"<ul> <li>catalog: Catalog name for multi-catalog setups</li> <li>ssl: Enable SSL connection</li> </ul>"},{"location":"configuration/namespace/#sqliteduckdb-parameters","title":"SQLite/DuckDB Parameters","text":"<ul> <li>path_pattern: Glob pattern for multiple database files</li> <li>dbs: Array of database configurations for multi-database setup</li> </ul>"},{"location":"configuration/namespace/#complete-namespace-configuration","title":"Complete Namespace Configuration","text":"<pre><code>namespace:\n  # Production Snowflake\n  production_snowflake:\n    type: snowflake\n    account: ${SNOWFLAKE_ACCOUNT}\n    username: ${SNOWFLAKE_USER}\n    password: ${SNOWFLAKE_PASSWORD}\n    database: ANALYTICS\n    schema: PUBLIC\n    warehouse: COMPUTE_WH\n\n  # Development StarRocks\n  dev_starrocks:\n    type: starrocks\n    host: ${STARROCKS_HOST}\n    port: ${STARROCKS_PORT}\n    username: ${STARROCKS_USER}\n    password: ${STARROCKS_PASSWORD}\n    database: dev_analytics\n\n  # Local SQLite for testing\n  test_sqlite:\n    type: sqlite\n    dbs:\n      - name: orders\n        uri: sqlite:////Users/data/orders.db\n      - name: customers\n        uri: sqlite:////Users/data/customers.db\n      - name: products\n        uri: sqlite:////Users/data/products.db\n\n  # Local DuckDB for analytics\n  analytics_duckdb:\n    type: duckdb\n    dbs:\n      - name: sales\n        uri: duckdb:////opt/data/sales.db\n      - name: marketing\n        uri: duckdb:///data/marketing.duckdb\n\n  # BIRD benchmark databases\n  bird_benchmark:\n    type: sqlite\n    path_pattern: benchmark/bird/dev_20240627/dev_databases/**/*.sqlite\n</code></pre>"},{"location":"configuration/namespace/#multi-database-configuration","title":"Multi-Database Configuration","text":""},{"location":"configuration/namespace/#sqlite-multi-database-setup","title":"SQLite Multi-Database Setup","text":"<p>For SQLite and DuckDB, you can configure multiple databases within a single namespace:</p> <pre><code>multi_sqlite:\n  type: sqlite\n  dbs:\n    - name: sales_2023        # Each database must have a unique name\n      uri: sqlite:////data/sales_2023.db\n    - name: sales_2024\n      uri: sqlite:////data/sales_2024.db\n    - name: customer_master\n      uri: sqlite:////data/customers.db\n</code></pre>"},{"location":"configuration/namespace/#path-pattern-configuration","title":"Path Pattern Configuration","text":"<p>Use glob patterns to automatically include multiple database files:</p> <pre><code>benchmark_dbs:\n  type: sqlite\n  path_pattern: benchmarks/**/*.sqlite  # Includes all .sqlite files recursively\n</code></pre> <p>Supported patterns: - <code>*.sqlite</code> - All SQLite files in current directory - <code>**/*.sqlite</code> - All SQLite files recursively - <code>data/2024/*.db</code> - All .db files in data/2024 directory - <code>benchmark/bird/**/*.sqlite</code> - All SQLite files under benchmark/bird</p>"},{"location":"configuration/namespace/#uri-formats","title":"URI Formats","text":""},{"location":"configuration/namespace/#sqlite-uri-format","title":"SQLite URI Format","text":"<pre><code>sqlite:////absolute/path/to/database.db      # Absolute path\nsqlite:///relative/path/to/database.db       # Relative path\n</code></pre>"},{"location":"configuration/namespace/#duckdb-uri-format","title":"DuckDB URI Format","text":"<pre><code>duckdb:////absolute/path/to/database.db      # Absolute path\nduckdb:///relative/path/to/database.db       # Relative path\n</code></pre>"},{"location":"configuration/namespace/#security-considerations","title":"Security Considerations","text":""},{"location":"configuration/namespace/#credential-management","title":"Credential Management","text":"<pre><code># Good: Using environment variables\nusername: ${DB_USERNAME}\npassword: ${DB_PASSWORD}\n\n# Avoid: Hardcoded credentials\nusername: \"actual_username\"\npassword: \"actual_password\"\n</code></pre>"},{"location":"configuration/nodes/","title":"Nodes","text":""},{"location":"configuration/nodes/#overview","title":"Overview","text":"<p>Nodes are the building blocks of Datus Agent workflows. Each node performs a specific task in the data processing pipeline, from schema linking and SQL generation to reasoning and output formatting. This guide covers how to configure each node type for optimal performance.</p>"},{"location":"configuration/nodes/#configuration-structure","title":"Configuration Structure","text":"<p>Nodes are configured within the <code>nodes</code> section of your configuration file:</p> <pre><code>nodes:\n  node_name:\n    model: provider_name\n    prompt_version: \"1.0\"\n    # Additional node-specific parameters\n</code></pre> <p>Tip</p> <p>The <code>model</code> parameter in node configurations references the provider names defined in <code>agent.models</code>.</p>"},{"location":"configuration/nodes/#core-nodes","title":"Core Nodes","text":""},{"location":"configuration/nodes/#schema-linking","title":"Schema Linking","text":"<p>The schema linking node uses vector search to match table metadata, sample data, and extended knowledge definitions related to user questions.</p> <pre><code>schema_linking:\n  model: openai                    # LLM model for schema selection\n  matching_rate: fast              # fast/medium/slow/from_llm\n  prompt_version: \"1.0\"            # Prompt version to use\n</code></pre> <p>Configuration Parameters:</p> <ul> <li>model: LLM model key from agent.models configuration</li> <li>matching_rate: Controls how many matching results to return<ul> <li><code>fast</code>: Top 5 matching data (fastest, least comprehensive)</li> <li><code>medium</code>: Top 10 matching data (balanced)</li> <li><code>slow</code>: Top 20 matching data (most comprehensive)</li> <li><code>from_llm</code>: Use LLM to select the most relevant tables from all available metadata</li> </ul> </li> <li>prompt_version: Version of the prompt template to use</li> </ul>"},{"location":"configuration/nodes/#generate-sql","title":"Generate SQL","text":"<p>Generates SQL statements based on user questions and matching table information.</p> <pre><code>generate_sql:\n  model: deepseek_v3                    # LLM for SQL generation\n  prompt_version: \"1.0\"                 # Prompt template version\n  max_table_schemas_length: 4000        # Max length for table metadata\n  max_data_details_length: 2000         # Max length for sample data\n  max_context_length: 8000              # Max context length\n  max_value_length: 500                 # Max length per sample value\n</code></pre> <p>Configuration Parameters:</p> <ul> <li>model: LLM model for SQL generation</li> <li>prompt_version: Prompt template version (latest used by default)</li> <li>max_table_schemas_length: Maximum character length for table metadata provided to LLM</li> <li>max_data_details_length: Maximum character length for table sample data</li> <li>max_context_length: Maximum character length for context information</li> <li>max_value_length: Maximum character length for individual sample values</li> </ul>"},{"location":"configuration/nodes/#reasoning","title":"Reasoning","text":"<p>Iteratively generates, executes, and optimizes SQL queries based on database feedback.</p> <pre><code>reasoning:\n  model: anthropic                      # LLM for reasoning\n  prompt_version: \"1.0\"                 # Prompt template version\n  max_table_schemas_length: 4000        # Max length for table metadata\n  max_data_details_length: 2000         # Max length for sample data\n  max_context_length: 8000              # Max context length\n  max_value_length: 500                 # Max length per sample value\n</code></pre> <p>Configuration Parameters: - Same as <code>generate_sql</code> node - focuses on iterative improvement of SQL queries</p>"},{"location":"configuration/nodes/#search-metrics","title":"Search Metrics","text":"<p>Matches relevant metrics through vector search based on user questions.</p> <pre><code>search_metrics:\n  model: openai                    # LLM model for metric selection\n  matching_rate: medium            # fast/medium/slow/from_llm\n  prompt_version: \"1.0\"            # Prompt version to use\n</code></pre> <p>Configuration Parameters: - Same as <code>schema_linking</code> node - specialized for metric discovery</p>"},{"location":"configuration/nodes/#processing-nodes","title":"Processing Nodes","text":""},{"location":"configuration/nodes/#reflect","title":"Reflect","text":"<p>Evaluates SQL execution results and provides improvement suggestions.</p> <pre><code>reflect:\n  prompt_version: \"1.0\"            # Prompt template version\n</code></pre> <p>Configuration Parameters: - prompt_version: Version of reflection prompt template to use</p>"},{"location":"configuration/nodes/#output","title":"Output","text":"<p>Formats and outputs SQL results to files and provides final responses.</p> <pre><code>output:\n  model: anthropic                 # LLM for output formatting\n  prompt_version: \"1.0\"            # Prompt template version\n  check_result: true               # Enable result validation\n</code></pre> <p>Configuration Parameters:</p> <ul> <li>model: LLM model for result formatting and validation</li> <li>prompt_version: Output formatting prompt version</li> <li>check_result: When true, LLM validates generated SQL and results for completeness and accuracy</li> </ul>"},{"location":"configuration/nodes/#interactive-nodes","title":"Interactive Nodes","text":""},{"location":"configuration/nodes/#chat","title":"Chat","text":"<p>Enables multi-turn conversations with access to databases, files, metrics, and knowledge bases.</p> <pre><code>chat:\n  workspace_root: sql2             # Root directory for file operations\n  model: anthropic                 # LLM for conversation\n  max_turns: 25                    # Maximum conversation turns\n</code></pre> <p>Configuration Parameters:</p> <ul> <li>workspace_root: Root directory where file tools can operate</li> <li>model: LLM model for multi-turn dialogue</li> <li>max_turns: Maximum number of tool-assisted reasoning turns</li> </ul>"},{"location":"configuration/nodes/#utility-nodes","title":"Utility Nodes","text":""},{"location":"configuration/nodes/#date-parser","title":"Date Parser","text":"<p>Parses and interprets date-related queries in user questions.</p> <pre><code>date_parser:\n  # Typically uses default configuration\n  prompt_version: \"1.0\"\n</code></pre>"},{"location":"configuration/nodes/#compare","title":"Compare","text":"<p>Compares generated SQL with reference SQL for benchmarking purposes.</p> <pre><code>compare:\n  # Used primarily in benchmark scenarios\n  prompt_version: \"1.0\"\n</code></pre>"},{"location":"configuration/nodes/#fix","title":"Fix","text":"<p>Analyzes and fixes SQL queries using dialect-specific rules.</p> <pre><code>fix:\n  model: openai                    # LLM for SQL fixing\n  prompt_version: \"1.0\"            # Prompt version\n</code></pre>"},{"location":"configuration/nodes/#complete-node-configuration-example","title":"Complete Node Configuration Example","text":"<pre><code>nodes:\n  # Schema discovery and linking\n  schema_linking:\n    model: openai\n    matching_rate: fast\n    prompt_version: \"1.0\"\n\n  # Metric discovery\n  search_metrics:\n    model: openai\n    matching_rate: medium\n    prompt_version: \"1.0\"\n\n  # SQL generation\n  generate_sql:\n    model: deepseek_v3\n    prompt_version: \"1.0\"\n    max_table_schemas_length: 4000\n    max_data_details_length: 2000\n    max_context_length: 8000\n    max_value_length: 500\n\n  # Advanced reasoning\n  reasoning:\n    model: anthropic\n    prompt_version: \"1.0\"\n    max_table_schemas_length: 4000\n    max_data_details_length: 2000\n    max_context_length: 8000\n    max_value_length: 500\n\n  # Result reflection and improvement\n  reflect:\n    prompt_version: \"1.0\"\n\n  # Output formatting and validation\n  output:\n    model: anthropic\n    prompt_version: \"1.0\"\n    check_result: true\n\n  # Interactive chat\n  chat:\n    workspace_root: workspace\n    model: anthropic\n    max_turns: 25\n\n  # Date parsing\n  date_parser:\n    prompt_version: \"1.0\"\n\n  # SQL fixing\n  fix:\n    model: openai\n    prompt_version: \"1.0\"\n</code></pre>"},{"location":"configuration/nodes/#model-assignment-strategy","title":"Model Assignment Strategy","text":"<p>For Schema Linking:</p> <ul> <li>Use fast, cost-effective models: <code>gpt-3.5-turbo</code>, <code>deepseek-chat</code></li> <li>For complex schemas: <code>gpt-4</code>, <code>claude-4-sonnet</code></li> </ul> <p>For SQL Generation:</p> <ul> <li>Recommended: <code>deepseek-chat</code>, <code>gpt-4-turbo</code>, <code>claude-4-sonnet</code></li> <li>Avoid: Basic models that struggle with complex SQL</li> </ul> <p>For Reasoning:</p> <ul> <li>Best: <code>claude-4-sonnet</code>, <code>gpt-4-turbo</code>, <code>claude-4-opus</code></li> <li>Good: <code>gemini-2.5-flash</code></li> </ul> <p>For Output and Chat:</p> <ul> <li>Recommended: <code>claude-4-sonnet</code>, <code>gpt-4-turbo</code></li> <li>Good for formatting: <code>anthropic</code> models</li> </ul>"},{"location":"configuration/storage/","title":"Storage","text":"<p>Configure storage settings for Datus Agent's embedding models and vector databases. The storage configuration manages how metadata, documents, and metrics are embedded and stored for efficient retrieval during schema linking and knowledge search.</p>"},{"location":"configuration/storage/#storage-configuration-structure","title":"Storage Configuration Structure","text":"<p>The storage configuration defines the base path for vector databases and embedding models for different data types:</p> <pre><code>storage:\n  base_path: data                    # RAG storage base path\n  embedding_device_type: cpu         # Device type for embedding models\n\n  # Database metadata and sample data embedding\n  database:\n    registry_name: openai            # Embedding provider\n    model_name: text-embedding-v3-small\n    dim_size: 1024\n    batch_size: 10\n    target_model: openai\n\n  # Document embedding configuration\n  document:\n    model_name: all-MiniLM-L6-v2     # Local embedding model\n    dim_size: 384\n\n  # Metrics embedding configuration\n  metric:\n    model_name: all-MiniLM-L6-v2     # Local embedding model\n    dim_size: 384\n</code></pre>"},{"location":"configuration/storage/#base-configuration","title":"Base Configuration","text":""},{"location":"configuration/storage/#storage-path","title":"Storage Path","text":"<pre><code>storage:\n  base_path: data  # Base directory for vector storage\n</code></pre> <p>The final data paths will be:</p> <ul> <li><code>data/datus_db_&lt;namespace_name&gt;</code> for each configured namespace</li> <li>Example: <code>data/datus_db_snowflake</code>, <code>data/datus_db_local_sqlite</code></li> </ul>"},{"location":"configuration/storage/#device-configuration","title":"Device Configuration","text":"<pre><code>storage:\n  embedding_device_type: cpu  # cpu, cuda, mps, auto\n</code></pre> <p>Device Options:</p> <ul> <li><code>cpu</code>: Force CPU usage for embedding models</li> <li><code>cuda</code>: Use NVIDIA GPU (if available)</li> <li><code>mps</code>: Use Apple Metal Performance Shaders (Apple Silicon)</li> <li><code>auto</code>: Automatically select best available device</li> </ul>"},{"location":"configuration/storage/#embedding-model-configuration","title":"Embedding Model Configuration","text":""},{"location":"configuration/storage/#database-embeddings","title":"Database Embeddings","text":"<p>For table metadata, schema information, and sample data:</p> <pre><code>database:\n  registry_name: openai              # openai or sentence-transformers\n  model_name: text-embedding-v3-small\n  dim_size: 1024\n  batch_size: 10\n  target_model: openai               # Reference to agent.models\n</code></pre> <p>Configuration Parameters:</p> <ul> <li><code>registry_name</code>: Embedding provider type (<code>openai</code> or <code>sentence-transformers</code>)</li> <li><code>model_name</code>: Specific embedding model to use</li> <li><code>dim_size</code>: Output embedding dimension size</li> <li><code>batch_size</code>: Number of texts to process in each batch</li> <li><code>target_model</code>: LLM model key from <code>agent.models</code> (for OpenAI embeddings)</li> </ul>"},{"location":"configuration/storage/#document-embeddings","title":"Document Embeddings","text":"<p>For knowledge base documents and extended documentation:</p> <pre><code>document:\n  model_name: all-MiniLM-L6-v2       # Lightweight model (~100MB)\n  dim_size: 384                      # Smaller dimension for efficiency\n</code></pre>"},{"location":"configuration/storage/#metric-embeddings","title":"Metric Embeddings","text":"<p>For business metrics and KPI definitions:</p> <pre><code>metric:\n  model_name: all-MiniLM-L6-v2       # Consistent with document embeddings\n  dim_size: 384                      # Matching dimension size\n</code></pre>"},{"location":"configuration/storage/#embedding-provider-options","title":"Embedding Provider Options","text":""},{"location":"configuration/storage/#openai-embeddings-cloud","title":"OpenAI Embeddings (Cloud)","text":"<p>For high-quality embeddings with cloud API:</p> <pre><code>database:\n  registry_name: openai\n  model_name: text-embedding-v3-small    # or text-embedding-v3-large\n  dim_size: 1536                         # 1536 for v3-small, 3072 for v3-large\n  batch_size: 10                         # Adjust based on rate limits\n  target_model: openai                   # Must reference valid model in agent.models\n</code></pre> <p>Environment Variables</p> <p>Ensure your OpenAI API key is configured:</p> <pre><code>export OPENAI_API_KEY=\"your_openai_api_key\"\n</code></pre>"},{"location":"configuration/storage/#sentence-transformers-local","title":"Sentence Transformers (Local)","text":"<p>For local embedding models without external API calls:</p> <pre><code>database:\n  registry_name: sentence-transformers   # Default local provider\n  model_name: all-MiniLM-L6-v2          # Lightweight option\n  dim_size: 384\n</code></pre> <p>Alternative Local Models</p> <p>Consider these high-quality alternatives:</p> <ul> <li><code>intfloat/multilingual-e5-large-instruct</code>: 1.2GB, 1024 dimensions, multilingual</li> <li><code>BAAI/bge-large-en-v1.5</code>: 1.2GB, 1024 dimensions (English optimized)</li> <li><code>BAAI/bge-large-zh-v1.5</code>: 1.2GB, 1024 dimensions (Chinese optimized)</li> </ul>"},{"location":"configuration/storage/#model-selection-guidelines","title":"Model Selection Guidelines","text":"Performance-Focused (Small Models)Balanced Performance and QualityQuality-Focused (Large Models) <p>Optimized for speed and minimal resource usage:</p> <pre><code>document:\n  model_name: all-MiniLM-L6-v2         # ~100MB, 384 dimensions\n  dim_size: 384\n\nmetric:\n  model_name: intfloat/multilingual-e5-small  # ~460MB, 384 dimensions\n  dim_size: 384\n</code></pre> <p>Good balance of speed and retrieval quality:</p> <pre><code>database:\n  model_name: intfloat/multilingual-e5-large-instruct  # ~1.2GB, 1024 dimensions\n  dim_size: 1024\n</code></pre> <p>Maximum retrieval quality with cloud-based embeddings:</p> <pre><code>database:\n  registry_name: openai\n  model_name: text-embedding-v3-large   # Highest quality\n  dim_size: 3072\n  target_model: openai\n</code></pre>"},{"location":"configuration/storage/#complete-configuration-examples","title":"Complete Configuration Examples","text":"High-Performance Local SetupHybrid Cloud-Local SetupEnterprise Quality Setup <p>Fast local embeddings optimized for development:</p> <pre><code>storage:\n  base_path: data\n  embedding_device_type: auto          # Use best available device\n\n  # Fast local embeddings for all data types\n  database:\n    registry_name: sentence-transformers\n    model_name: all-MiniLM-L6-v2\n    dim_size: 384\n\n  document:\n    model_name: all-MiniLM-L6-v2\n    dim_size: 384\n\n  metric:\n    model_name: all-MiniLM-L6-v2\n    dim_size: 384\n</code></pre> <p>Best For</p> <ul> <li>Development environments</li> <li>Resource-constrained systems</li> <li>Offline deployment requirements</li> </ul> <p>Combines cloud quality for critical data with local efficiency:</p> <pre><code>storage:\n  base_path: data\n  embedding_device_type: cpu\n\n  # High-quality cloud embeddings for database metadata\n  database:\n    registry_name: openai\n    model_name: text-embedding-v3-small\n    dim_size: 1536\n    batch_size: 10\n    target_model: openai\n\n  # Local embeddings for documents and metrics\n  document:\n    model_name: intfloat/multilingual-e5-large-instruct\n    dim_size: 1024\n\n  metric:\n    model_name: intfloat/multilingual-e5-large-instruct\n    dim_size: 1024\n</code></pre> <p>Best For</p> <ul> <li>Production environments with mixed requirements</li> <li>Cost-conscious deployments</li> <li>Balancing quality and performance</li> </ul> <p>Maximum quality embeddings for production systems:</p> <pre><code>storage:\n  base_path: /opt/datus/embeddings\n  embedding_device_type: cuda          # Use GPU acceleration\n\n  # High-quality embeddings across all data types\n  database:\n    registry_name: openai\n    model_name: text-embedding-v3-large\n    dim_size: 3072\n    batch_size: 5                      # Smaller batches for large model\n    target_model: openai\n\n  document:\n    model_name: BAAI/bge-large-en-v1.5\n    dim_size: 1024\n\n  metric:\n    model_name: BAAI/bge-large-en-v1.5\n    dim_size: 1024\n</code></pre> <p>Best For</p> <ul> <li>Enterprise production environments</li> <li>High-accuracy requirements</li> <li>Systems with GPU acceleration</li> </ul>"},{"location":"configuration/storage/#integration-with-other-components","title":"Integration with Other Components","text":""},{"location":"configuration/storage/#metrics-configuration","title":"Metrics Configuration","text":"<p>The storage configuration works with the metrics section to embed business metrics:</p> <pre><code>metrics:\n  duckdb:                              # Namespace reference\n    domain: sale                       # Business domain\n    layer1: layer1                     # Metric layer classification\n    layer2: layer2                     # Sub-layer classification\n    ext_knowledge: \"\"                  # Extended knowledge base path\n\nstorage:\n  metric:\n    model_name: all-MiniLM-L6-v2       # Model for embedding metrics\n    dim_size: 384\n</code></pre>"},{"location":"configuration/workflow/","title":"Workflow","text":"<p>Configure workflow orchestration in Datus Agent to define execution plans, node sequences, parallel processing, and sub-workflow composition. Workflows control how nodes are executed to process user queries and generate SQL.</p> <p>Quick Start</p> <p>New to workflows? Start with the Basic Workflow Configuration section to understand the fundamentals.</p>"},{"location":"configuration/workflow/#workflow-structure","title":"Workflow Structure","text":"<p>Workflows are defined in the configuration file under the <code>workflow</code> section:</p> agent.yml<pre><code>workflow:\n  plan: planA                        # Active execution plan\n\n# Define execution plans\nplanA:\n  - schema_linking\n  - generate_sql\n  - output\n\nplanB:\n  - schema_linking\n  - generate_sql\n  - execute_sql\n  - reflect\n  - output\n</code></pre>"},{"location":"configuration/workflow/#basic-workflow-configuration","title":"Basic Workflow Configuration","text":""},{"location":"configuration/workflow/#simple-sequential-workflow","title":"Simple Sequential Workflow","text":"Simple Sequential Workflow<pre><code>workflow:\n  plan: basic_sql\n\nbasic_sql:\n  - schema_linking                   # Find relevant tables\n  - generate_sql                     # Create SQL query\n  - output                          # Format results\n</code></pre>"},{"location":"configuration/workflow/#workflow-with-execution-and-reflection","title":"Workflow with Execution and Reflection","text":"Workflow with Execution and Reflection<pre><code>workflow:\n  plan: with_execution\n\nwith_execution:\n  - schema_linking                   # Find relevant tables\n  - generate_sql                     # Create SQL query\n  - execute_sql                     # Run the query\n  - reflect                         # Analyze results\n  - output                          # Format final output\n</code></pre>"},{"location":"configuration/workflow/#advanced-workflow-features","title":"Advanced Workflow Features","text":"<p>Advanced Features</p> <p>The following features require careful planning and understanding of node dependencies. Test thoroughly in development environments.</p>"},{"location":"configuration/workflow/#parallel-execution","title":"Parallel Execution","text":"<p>Execute multiple nodes simultaneously and then select the best result:</p> Parallel Execution Example<pre><code>workflow:\n  plan: parallel_generation\n\nparallel_generation:\n  - schema_linking\n  - parallel:                       # Execute in parallel\n      - generate_sql\n      - reasoning\n  - selection                       # Choose best result\n  - execute_sql\n  - output\n</code></pre>"},{"location":"configuration/workflow/#sub-workflows","title":"Sub-workflows","text":"<p>Break complex workflows into reusable sub-components:</p> Sub-workflows Example<pre><code>workflow:\n  plan: multi_approach\n\nmulti_approach:\n  - schema_linking\n  - parallel:\n      - subworkflow1\n      - subworkflow2\n      - subworkflow3\n  - selection\n  - execute_sql\n  - output\n\n# Define sub-workflows\nsubworkflow1:\n  - search_metrics\n  - generate_sql\n\nsubworkflow2:\n  - search_metrics\n  - reasoning\n\nsubworkflow3:\n  - reasoning\n  - reflect\n</code></pre>"},{"location":"configuration/workflow/#sub-workflows-with-custom-configuration","title":"Sub-workflows with Custom Configuration","text":"<p>Each sub-workflow can use its own configuration file:</p> Sub-workflows with Custom Configuration<pre><code>workflow:\n  plan: multi_agent\n\nmulti_agent:\n  - schema_linking\n  - parallel:\n      - subworkflow1\n      - subworkflow2\n      - subworkflow3\n  - selection\n  - execute_sql\n  - output\n\nsubworkflow1:\n  steps:\n    - search_metrics\n    - generate_sql\n  config: multi/agent1.yaml          # Custom config file\n\nsubworkflow2:\n  steps:\n    - search_metrics\n    - reasoning\n  config: multi/agent2.yaml\n\nsubworkflow3:\n  steps:\n    - reasoning\n    - reflect\n  config: multi/agent3.yaml\n</code></pre>"},{"location":"configuration/workflow/#built-in-workflow-plans","title":"Built-in Workflow Plans","text":"<p>Datus Agent provides three built-in workflow plans if you don't configure custom ones:</p> <p>Default Workflows</p> <p>These workflows are automatically available and can be referenced without additional configuration.</p> Reflection WorkflowFixed WorkflowMetric-to-SQL Workflow <pre><code># Built-in: reflection\nreflection:\n  - schema_linking\n  - generate_sql\n  - execute_sql\n  - reflect\n  - output\n</code></pre> <pre><code># Built-in: fixed\nfixed:\n  - schema_linking\n  - generate_sql\n  - execute_sql\n  - output\n</code></pre> <pre><code># Built-in: metric_to_sql\nmetric_to_sql:\n  - schema_linking\n  - search_metrics\n  - date_parser\n  - generate_sql\n  - execute_sql\n  - reflect\n  - output\n</code></pre>"},{"location":"configuration/workflow/#reflection-nodes-configuration","title":"Reflection Nodes Configuration","text":"<p>Configure alternative workflows that can be triggered during reflection:</p> Reflection Nodes Configuration<pre><code>reflection_nodes:\n  # When schema linking needs improvement\n  schema_linking:\n    - schema_linking\n    - generate_sql\n    - execute_sql\n    - reflect\n\n  # When document search is needed\n  doc_search:\n    - doc_search\n    - generate_sql\n    - execute_sql\n    - reflect\n\n  # Simple regeneration\n  simple_regenerate:\n    - execute_sql\n    - reflect\n\n  # Enhanced reasoning\n  reasoning:\n    - reasoning\n    - execute_sql\n    - reflect\n</code></pre>"},{"location":"develop/","title":"Datus-agent","text":""},{"location":"develop/#deployment","title":"Deployment","text":""},{"location":"develop/#pulling-submodule-code-locally","title":"Pulling submodule code locally","text":"<pre><code>git submodule update --init\n</code></pre>"},{"location":"develop/#install-the-necessary-dependencies","title":"Install the Necessary Dependencies","text":""},{"location":"develop/#using-uv","title":"Using <code>uv</code>","text":"<pre><code># Create a virtual environment\nuv venv -p 3.12\n\n# Synchronize all dependencies\nuv sync\n# with dev dependencies\nuv sync --dev\n\n# Use current environment\nsource .venv/bin/activate\n</code></pre>"},{"location":"develop/#using-conda","title":"Using <code>conda</code>","text":"<pre><code>conda create -n datus-agent python=3.12\nconda activate datus-agent\npip install -r requirements.txt\n</code></pre>"},{"location":"develop/#using-venv","title":"Using <code>venv</code>","text":"<pre><code>virtualenv datus-agent --python=python3.12\nsource datus-agent/bin/activate\npip install -r requirements.txt\n</code></pre>"},{"location":"develop/#configuration","title":"Configuration","text":""},{"location":"develop/#agentyml","title":"Agent.yml","text":"<pre><code>cp conf/agent.yml.qs conf/agent.yml\n</code></pre> <p>Then modify <code>conf/agent.yml</code> as needed:</p> <pre><code>agent:\n  target: deepseek-v3\n  models:\n    deepseek-v3:\n      type: deepseek\n      base_url: https://api.deepseek.com\n      api_key: ${DEEPSEEK_API_KEY}\n      model: deepseek-chat\n\n    deepseek-r1:\n      type: deepseek\n      base_url: https://api.deepseek.com\n      api_key: ${DEEPSEEK_API_KEY}\n      model: deepseek-reasoner\n\n  storage_path: data\n\n  benchmark:\n    bird_dev:\n      benchmark_path: benchmark/bird/dev_20240627\n    spider2:\n      benchmark_path: benchmark/spider2/spider2-snow\n\n  namespace: # namespace is a set of database connections\n    local_duckdb:\n      type: duckdb\n      uri: ./tests/duckdb-demo.duckdb\n    spider-snow:\n      type: snowflake\n      warehouse: ${SNOWFLAKE_WAREHOUSE}\n      account: ${SNOWFLAKE_ACCOUNT}\n      username: ${SNWOFLAKE_USER}\n      password: ${SNOWFLAKE_PASSWORD}\n    bird_sqlite:\n      type: sqlite\n      path_pattern: benchmark/bird/dev_20240627/dev_databases/**/*.sqlite\n\n  storage:\n    base_path: data\n    # Local model recommendations:\n    # 1. For extreme performance: all-MiniLM-L6-v2 (~100M) or intfloat/multilingual-e5-small (~460M)\n    # 2. For balanced performance and quality: intfloat/multilingual-e5-large-instruct (~1.2G)\n    # 3. For optimal retrieval quality: BAAI/bge-large-en-v1.5 or BAAI/bge-large-zh-v1.5 (~3.6G)\n    # You can also select any model that suits your requirements.\n    # Default: all-MiniLM-L6-v2 if no model is configured.\n    # Claude model suggestions: Now we just support openai.\n    database:\n      registry_name: sentence-transformers # default is sentence-transformers, now just support sentence-transformers and openai.\n      model_name: text-embedding-v3\n      dim_size: 1024\n      # batch_size: 10 # This configuration is required when the registration mode is openai\n    document:\n      model_name: intfloat/multilingual-e5-large-instruct\n      dim_size: 1024\n    metric:\n      model_name:  all-MiniLM-L6-v2\n      dim_size: 384\n</code></pre> <p>You can configure multiple models and databases. The <code>target</code> is the default model to use.</p>"},{"location":"develop/#langsmith-optional","title":"Langsmith (Optional)","text":"<p>Set the following environment variables for Langsmith integration:</p> <pre><code>LANGSMITH_TRACING=true\nLANGSMITH_ENDPOINT=https://api.smith.langchain.com\nLANGCHAIN_API_KEY=xxx\nLANGSMITH_PROJECT=Datus-agent\n</code></pre>"},{"location":"develop/#have-a-try","title":"Have a Try","text":""},{"location":"develop/#test-connection","title":"Test Connection","text":"<pre><code>python -m datus.main probe-llm\n</code></pre> <p>Example Output: <pre><code>LLM model test successful\nFinal Result: {\"status\": \"success\", \"message\": \"LLM model test successful\", \"response\": \"Yes, I can 'hear' you! \ud83d\ude0a How can I assist you today?\"}\n</code></pre></p> <pre><code>python -m datus.main check-db --namespace local_duckdb\n</code></pre>"},{"location":"develop/#run-sql","title":"Run SQL","text":"<pre><code>python -m datus.cli.main --namespace local_duckdb --config conf/agent.yml\n\nDatus&gt; select * from tree;\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n\u2503 Continent \u2503 TradingBloc \u2503 Country    \u2503 GDP    \u2503\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n\u2502 NA        \u2502 US          \u2502 US         \u2502 19.485 \u2502\n\u2502 Asia      \u2502 China       \u2502 China      \u2502 12.238 \u2502\n\u2502 Asia      \u2502 Japan       \u2502 Japan      \u2502 4.872  \u2502\n\u2502 Europe    \u2502 EU          \u2502 Germany    \u2502 3.693  \u2502\n\u2502 Asia      \u2502 India       \u2502 India      \u2502 2.651  \u2502\n\u2502 Europe    \u2502 UK          \u2502 UK         \u2502 2.638  \u2502\n\u2502 Europe    \u2502 EU          \u2502 France     \u2502 2.583  \u2502\n\u2502 SA        \u2502 Brazil      \u2502 Brazil     \u2502 2.054  \u2502\n\u2502 Europe    \u2502 EU          \u2502 Italy      \u2502 1.944  \u2502\n\u2502 NA        \u2502 US          \u2502 Canada     \u2502 1.647  \u2502\n\u2502 Europe    \u2502 Russia      \u2502 Russia     \u2502 1.578  \u2502\n\u2502 Asia      \u2502 SouthKorea  \u2502 SouthKorea \u2502 1.531  \u2502\n\u2502 Australia \u2502 Australia   \u2502 Australia  \u2502 1.323  \u2502\n\u2502 Europe    \u2502 EU          \u2502 Spain      \u2502 1.314  \u2502\n\u2502 NA        \u2502 US          \u2502 Mexico     \u2502 1.151  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nReturned 15 rows in 0.03 seconds\n\nDatus&gt; .help\n</code></pre>"},{"location":"develop/#spider2-benchmark","title":"Spider2 Benchmark","text":""},{"location":"develop/#initialization","title":"Initialization","text":"<p>Update <code>agent.yml</code> if needed:</p> <pre><code>benchmark:\n  spider2:\n    benchmark_path: benchmark/spider2/spider2-snow\n\nnamespace:\n  spidersnow:\n    type: snowflake\n    username: ${SNOWFLAKE_USER}\n    account: ${SNOWFLAKE_ACCOUNT}\n    warehouse: ${SNOWFLAKE_WAREHOUSE}\n    password: ${SNOWFLAKE_PASSWORD}\n</code></pre>"},{"location":"develop/#bootstrap-knowledge-base","title":"Bootstrap Knowledge Base","text":"<pre><code>python -m datus.main bootstrap-kb --namespace spidersnow --benchmark spider2 --kb_update_strategy overwrite\n</code></pre> <p>\u26a0\ufe0f May take hours (approx. 14,000 tables).</p>"},{"location":"develop/#run-test-by-ids","title":"Run Test by IDs","text":"<pre><code>python -m datus.main benchmark --namespace spidersnow --benchmark spider2 --benchmark_task_ids sf_bq104\n</code></pre>"},{"location":"develop/#python-m-datusclimain-namespace-spidersnow-config-confagentyml-datus-darun_screen-creating-a-new-sql-task-enter-task-id-49856268-enter-task-description-based-on-the-most-recent-refresh-date-identify-the-top-ranked-rising-search-term-for-the-week-that-is-exactly-one-year-prior-to-the-latest-available-week-in-the-dataset-enter-database-name-google_trends-enter-output-directory-output-enter-external-knowledge-optional-sql-task-created-49856268-database-snowflake-google_trends","title":"<pre><code>python -m datus.cli.main --namespace spidersnow  --config conf/agent.yml\n\nDatus&gt; !darun_screen\nCreating a new SQL task\nEnter task ID (49856268):\nEnter task description (): Based on the most recent refresh date, identify the top-ranked rising search term for the week that is exactly one year prior to the latest available week in the dataset.\nEnter database name: GOOGLE_TRENDS\nEnter output directory (output):\nEnter external knowledge (optional) ():\nSQL Task created: 49856268\nDatabase: snowflake - GOOGLE_TRENDS\n</code></pre>","text":""},{"location":"develop/#bird-benchmark","title":"Bird Benchmark","text":""},{"location":"develop/#initialization_1","title":"Initialization","text":"<p>Update Configuration:</p> <pre><code>benchmark:\n  bird_dev:\n    benchmark_path: benchmark/bird/dev_20240627\n\nnamespace:\n  bird_sqlite:\n    type: sqlite\n    path_pattern: benchmark/bird/dev_20240627/dev_databases/**/*.sqlite\n</code></pre>"},{"location":"develop/#download-and-extract-bird-dev","title":"Download and Extract Bird Dev","text":"<pre><code>wget https://bird-bench.oss-cn-beijing.aliyuncs.com/dev.zip\nunzip dev.zip\nmkdir -p benchmark/bird\nmv dev_20240627 benchmark/bird\ncd benchmark/bird/dev_20240627\nunzip dev_databases\ncd ../../..\n</code></pre>"},{"location":"develop/#bootstrap-knowledge-base_1","title":"Bootstrap Knowledge Base","text":"<pre><code>python -m datus.main bootstrap-kb --namespace bird_sqlite --benchmark bird_dev --kb_update_strategy overwrite\n</code></pre>"},{"location":"develop/#run-tests","title":"Run Tests","text":"<pre><code>python -m datus.main benchmark --namespace bird_sqlite --benchmark bird_dev --plan fixed --schema_linking_rate medium --benchmark_task_ids 14 15\n</code></pre> <pre><code>python -m datus.main benchmark --namespace bird_sqlite --benchmark bird_dev --schema_linking_rate fast --benchmark_task_ids 32\n</code></pre> <pre><code>python -m datus.main benchmarking --benchmark bird_dev --plan fixed --schema_linking_model medium\n</code></pre>"},{"location":"develop/#using-cli-to-develop","title":"Using cli to develop","text":"<pre><code>python -m datus.cli.main --namespace bird_sqlite  --config conf/agent.yml\n</code></pre>"},{"location":"develop/#semantic-layer-benchmark","title":"Semantic Layer Benchmark","text":""},{"location":"develop/#initialization_2","title":"Initialization","text":"<p>Install Metricflow:</p> <pre><code># poetry config virtualenvs.in-project true\npoetry lock\npoetry install\nsource .venv/bin/activate\n\n# make sure these commands succeeded\nmf setup\nmf tutorial\nmf validate-configs\n</code></pre> <p>Update Configuration <code>~/.metricflow/config.yml</code>:</p> <pre><code>model_path: &lt;/path/to/semantic-models-dir&gt;\ndwh_schema: mf_demo\ndwh_dialect: duckdb\ndwh_database: &lt;home dir&gt;/.metricflow/duck.db\n</code></pre> <p>Update Configuration conf/agent.yml:</p> <pre><code>namespace:\n  duckdb:\n    type: duckdb\n    name: duck\n    uri: ~/.metricflow/duck.db\n\nbenchmark:\n  semantic_layer:\n    benchmark_path: benchmark/semantic_layer\n\nmetrics:\n  tutorial:\n    domain: sale\n    layer1: layer1\n    layer2: layer2\n    ext_knowledge: \"\"\n</code></pre> <p>Export Environment Variables: <pre><code>export MF_PATH=&lt;/path/to/metricflow&gt;/.venv/bin/mf\nexport MF_VERBOSE=true\nexport MF_MODEL_PATH=&lt;/path/to/semantic-models-dir&gt;\n</code></pre></p>"},{"location":"develop/#bootstrap-metrics-generation","title":"Bootstrap Metrics Generation","text":"<pre><code>python -m datus.main bootstrap-kb --namespace duckdb --components metrics --metric_meta tutorial --kb_update_strategy overwrite\n</code></pre>"},{"location":"develop/#run-tests_1","title":"Run Tests","text":"<pre><code>python -m datus.main benchmark --namespace duckdb --benchmark semantic_layer --plan metric_to_sql --metric_meta tutorial\n</code></pre>"},{"location":"getting_started/Quickstart/","title":"Quickstart","text":"<p>Get started with Datus Agent in just a few minutes. This guide will walk you through installation, setup, and your first interactions with Datus.</p>"},{"location":"getting_started/Quickstart/#step-1-installation-setup","title":"Step 1: Installation &amp; Setup","text":""},{"location":"getting_started/Quickstart/#install-python-312","title":"Install Python 3.12","text":"<p>Datus requires a Python 3.12 environment. Choose your preferred method:</p> Condavirtualenvuv <pre><code>conda create -n datus python=3.12\nconda activate datus\n</code></pre> <pre><code>virtualenv datus --python=python3.12\nsource datus/bin/activate\n</code></pre> <pre><code>uv venv datus --python 3.12\nsource datus/bin/activate\n</code></pre>"},{"location":"getting_started/Quickstart/#install-datus-agent","title":"Install Datus Agent","text":"Stable ReleaseBeta Release <pre><code>pip install datus-agent\n</code></pre> <pre><code>pip install --no-deps -i https://test.pypi.org/simple/ datus-agent\n</code></pre>"},{"location":"getting_started/Quickstart/#initialize-configuration","title":"Initialize Configuration","text":"<p>Run the initialization command:</p> <pre><code>datus-agent init\n</code></pre> <p>The setup will guide you through:</p> <p>1. LLM Configuration - Configure your preferred LLM provider (OpenAI, DeepSeek, Claude, Kimi, Qwen)</p> <p>2. Namespace Setup - Connect to your database. For a quick start, use the demo database:</p> <p>Demo Database</p> <p>Datus provides a pre-configured demo DuckDB database for testing.</p> <p>Connection string: <code>~/.datus/sample/duckdb-demo.duckdb</code></p> <p>3. Workspace Configuration - Set up your SQL files directory (default: <code>~/.datus/workspace</code>)</p> <p>4. Knowledge Base (Optional) - Initialize vector DB for metadata and reference SQL</p> <p>After setup completes, you're ready to launch Datus!</p>"},{"location":"getting_started/Quickstart/#step-2-launch-datus-cli","title":"Step 2: Launch Datus CLI","text":"<p>Start the Datus CLI with your configured namespace:</p> <p>Configuration</p> <p>You can connect to different databases by adding namespaces in <code>agent.yml</code>. See our Configuration guide for details.</p> <p>Terminal<pre><code>datus-cli --namespace duckdb-demo\n</code></pre> <pre><code>Initializing AI capabilities in background...\n\nDatus - AI-powered SQL command-line interface\nType '.help' for a list of commands or '.exit' to quit.\n\nNamespace duckdb selected\nConnected to duckdb using database duckdb\nContext: Current: database: duckdb\nType SQL statements or use ! @ . commands to interact.\nDatus&gt;\n</code></pre></p>"},{"location":"getting_started/Quickstart/#step-3-start-using-datus","title":"Step 3: Start Using Datus","text":"<p>Tip</p> <p>You can execute SQL in Datus just like in a SQL editor.</p> <p>List all tables:</p> <p>Terminal<pre><code>Datus&gt; .tables\n</code></pre> <pre><code>Tables in Database duckdb-demo\n+---------------------+\n| Table Name          |\n+=====================+\n| bank_failures       |\n| boxplot             |\n| calendar            |\n| candle              |\n| christmas_cost      |\n| companies           |\n| country_stats_scatter|\n| gold_vs_bitcoin     |\n| japan_births_deaths |\n| japan_population    |\n| metrics             |\n| niger_population    |\n| quotes              |\n| radar               |\n| sankey              |\n| search_trends       |\n| tree                |\n+---------------------+\n</code></pre></p> <p>Ask any question you like. Here is a table named <code>gold_vs_bitcoin</code>. Let's view its schema:</p> <p>Terminal<pre><code>Datus&gt; desc gold_vs_bitcoin\n</code></pre> <pre><code>+------------------+------------------+------------------+------------------+------------------+------------------+\n| column_name      | column_type      | null             | key              | default          | extra            |\n+==================+==================+==================+==================+==================+==================+\n| time             | TIMESTAMP        | YES              | None             | None             | None             |\n| gold             | DOUBLE           | YES              | None             | None             | None             |\n| bitcoin          | DOUBLE           | YES              | None             | None             | None             |\n+------------------+------------------+------------------+------------------+------------------+------------------+\nReturned 3 rows in 0.04 seconds\n</code></pre></p> <p>Tip</p> <p>To chat, start a line with <code>/</code> and continue in natural language.</p> <p>Suppose we want to understand the correlation between gold and Bitcoin. We can ask the Datus agent directly:</p> Terminal<pre><code>Datus&gt; /Detailed analysis of gold\u2013Bitcoin correlation.\n</code></pre> <p>Datus will display its thinking process to show how it approaches the task, then provide a detailed report.</p> Detailed Analysis Output <pre><code>Creating new chat session...\nProcessing chat request...\n+---------------------------------------------------------------------------------------------------------------------------------------+\n|                                                    Action Stream                                                                      |\n+=======================================================================================================================================+\n| \ud83d\udd27 Tool call - search_files('{\"path\": \"/Users/yt/.datus/workspace\", \"pattern\": ...') - \u2713                                            |\n|     No matches found (0.5s)                                                                                                          |\n| \ud83d\udcac Thinking: Let me check the directory structure to see what's available:                                                           |\n| \ud83d\udd27 Tool call - list_directory('{\"path\": \"/Users/yt/.datus/workspace\"}') - \u2713 (0.5s)                                                   |\n| \ud83d\udcac Thinking: Now let me analyze the gold-Bitcoin correlation by examining the data and performing a comprehensive correlation        |\n| analysis:                                                                                                                            |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"SELECT \\n    COUNT(*) as total_records,\\n...') - \u2713                                               |\n|     \u2713 1 rows (0.5s)                                                                                                                  |\n| \ud83d\udcac Thinking: Now let me calculate the correlation coefficient and perform a detailed analysis:                                       |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"SELECT \\n    -- Correlation coefficient\\n...') - \u2713                                               |\n|     \u2713 1 rows (0.5s)                                                                                                                  |\n| \ud83d\udcac Thinking: Let me get more detailed statistics and time-based analysis:                                                            |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"WITH daily_aggregates AS (\\n    SELECT \\n...') - \u2713                                               |\n|     \u2713 1 rows (0.5s)                                                                                                                  |\n| \ud83d\udcac Thinking: Let me check the distribution of the data and look for any patterns:                                                    |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"SELECT \\n    -- Price movement analysis\\n...') - \u2713                                               |\n|     \u2717 Failed:(error_code=500006, e...) (0.5s)                                                                                        |\n| \ud83d\udcac Thinking: Let me fix the query to properly analyze price movement patterns:                                                       |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"WITH price_changes AS (\\n    SELECT \\n   ...') - \u2713                                               |\n|     \u2713 5 rows (0.5s)                                                                                                                  |\n| \ud83d\udcac Thinking: Now let me analyze the strength of the correlation across different time periods and price levels:                      |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"WITH price_quartiles AS (\\n    SELECT \\n ...') - \u2713                                               |\n|     \u2713 16 rows (0.5s)                                                                                                                 |\n| \ud83d\udcac Thinking: Let me also analyze the volatility and risk characteristics:                                                            |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"SELECT \\n    -- Risk and return metrics\\n...') - \u2713                                               |\n|     \u2717 Failed:(error_code=500006, e...) (0.5s)                                                                                        |\n| \ud83d\udcac Thinking: Let me correct the query with the proper function names:                                                                |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"SELECT \\n    -- Risk and return metrics\\n...') - \u2713                                               |\n|     \u2713 1 rows (0.5s)                                                                                                                  |\n| \ud83d\udcac Thinking: Finally, let me examine the time series data to understand the temporal patterns:                                       |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"SELECT \\n    DATE(time) as trading_date,\\...') - \u2713                                               |\n|     \u2713 1 rows (0.5s)                                                                                                                  |\n| \ud83d\udcac Chat interaction completed successfully                                                                                           |\n+---------------------------------------------------------------------------------------------------------------------------------------+\n</code></pre> <p>Generated SQL:</p> Generated Query<pre><code>-- Generated SQL (copied)\nSELECT\n    -- Overall correlation and basic stats\n    CORR(gold, bitcoin) as correlation_coefficient,\n    COUNT(*) as total_observations,\n    AVG(gold) as avg_gold_price,\n    AVG(bitcoin) as avg_bitcoin_price,\n    STDDEV(gold) as gold_volatility,\n    STDDEV(bitcoin) as bitcoin_volatility,\n    COVAR_POP(gold, bitcoin) as covariance,\n\n    -- Price movement patterns\n    (SELECT COUNT(*) FROM (\n        SELECT\n            CASE\n                WHEN gold_change &gt; 0 AND bitcoin_change &gt; 0 THEN 'Both Up'\n                WHEN gold_change &lt; 0 AND bitcoin_change &lt; 0 THEN 'Both Down'\n                WHEN gold_change &gt; 0 AND bitcoin_change &lt; 0 THEN 'Gold Up, Bitcoin Down'\n                WHEN gold_change &lt; 0 AND bitcoin_change &gt; 0 THEN 'Gold Down, Bitcoin Up'\n            END as pattern\n        FROM (\n            SELECT\n                gold - LAG(gold) OVER (ORDER BY time) as gold_change,\n                bitcoin - LAG(bitcoin) OVER (ORDER BY time) as bitcoin_change\n            FROM gold_vs_bitcoin\n        ) WHERE gold_change IS NOT NULL\n    ) WHERE pattern = 'Both Up') as both_up_count,\n\n    (SELECT COUNT(*) FROM (\n        SELECT\n            CASE\n                WHEN gold_change &gt; 0 AND bitcoin_change &gt; 0 THEN 'Both Up'\n                WHEN gold_change &lt; 0 AND bitcoin_change &lt; 0 THEN 'Both Down'\n                WHEN gold_change &gt; 0 AND bitcoin_change &lt; 0 THEN 'Gold Up, Bitcoin Down'\n                WHEN gold_change &lt; 0 AND bitcoin_change &gt; 0 THEN 'Gold Down, Bitcoin Up'\n            END as pattern\n        FROM (\n            SELECT\n                gold - LAG(gold) OVER (ORDER BY time) as gold_change,\n                bitcoin - LAG(bitcoin) OVER (ORDER BY time) as bitcoin_change\n            FROM gold_vs_bitcoin\n        ) WHERE gold_change IS NOT NULL\n    ) WHERE pattern = 'Both Down') as both_down_count\nFROM gold_vs_bitcoin\n</code></pre> <p>Analysis Results:</p> Gold-Bitcoin Correlation Analysis <pre><code>+===============================================================================================================+\n|                                        Gold-Bitcoin Correlation Analysis                                     |\n+===============================================================================================================+\n\n                                                      \ud83d\udcca Overall Correlation\n\n\u2022 Correlation Coefficient: -0.225 (Weak negative correlation)\n\u2022 Total Observations: 954 data points\n\u2022 Time Period: Single day - December 1, 2024 (16:00 to 16:15)\n\n\n                                                        \ud83d\udcb0 Price Statistics\n\n\u2022 Average Gold Price: 0.684\n\u2022 Average Bitcoin Price: 0.785\n\u2022 Gold Volatility: 0.200\n\u2022 Bitcoin Volatility: 0.233\n\u2022 Covariance: -0.0105\n\n\n                                                    \ud83d\udcc8 Price Movement Patterns\n\nBased on 953 observed price changes:\n\n\u2022 Both Assets Moving Up: 216 times (22.67%)\n\u2022 Both Assets Moving Down: 203 times (21.30%)\n\u2022 Gold Up, Bitcoin Down: 189 times (19.83%)\n\u2022 Gold Down, Bitcoin Up: 190 times (19.94%)\n\n\n                                                          \ud83c\udfaf Key Insights\n\n                                                   1. Weak Negative Correlation\n\nThe -0.225 correlation suggests these assets tend to move in opposite directions more often than together, though the relationship\nis weak.\n\n                                                   2. Similar Movement Patterns\n\nBoth assets show remarkably similar movement patterns:\n\n\u2022 Approximately 44% of the time they move in the same direction\n\u2022 Approximately 40% of the time they move in opposite directions\n\n                                                     3. Volatility Comparison\n\nBitcoin shows slightly higher volatility (0.233) compared to Gold (0.200), which aligns with Bitcoin's reputation as a more\nvolatile asset.\n\n                                                   4. Risk-Adjusted Performance\n\n\u2022 Gold Sharpe Ratio: 3.42\n\u2022 Bitcoin Sharpe Ratio: 3.37 Both assets show strong risk-adjusted returns during this period.\n\n\n                                                           \u26a0\ufe0f Limitations\n\nThis analysis is based on a very short time window (15 minutes of data). For more robust correlation analysis, data spanning\nmultiple days/weeks would be needed to observe:\n\n\u2022 Longer-term correlation trends\n\u2022 Market regime changes\n\u2022 Impact of macroeconomic events\n\u2022 Seasonal patterns\n\n\n                                                    \ud83d\udca1 Investment Implications\n\nThe weak negative correlation suggests these assets could provide some diversification benefits, though the relationship is not\nstrong enough for reliable hedging strategies based on this limited dataset.\n</code></pre> <p>If you want detailed information for every step, press <code>y</code> at the end:</p> Terminal<pre><code>Would you like to check the details? (y/n): y\n</code></pre> <p>Datus will then show details in a new screen.</p>"},{"location":"getting_started/Quickstart/#step-4-advanced-features","title":"Step 4: Advanced Features","text":""},{"location":"getting_started/Quickstart/#context-management","title":"Context Management","text":"<p>Note</p> <p>If you have initialized the knowledge base for metadata.</p> <p>If you want to add items such as a file, metric or table to the context, use <code>@</code>. Manual retrieval gives the LLM more precise context, narrows the search scope, and improves answer accuracy.</p> Terminal<pre><code>Datus&gt; /@Table duckdb-demo.main.bank_failures\n</code></pre> <p>Datus will automatically analyze the table and add metadata to the context.</p> Context Analysis Output <pre><code>Processing chat request...\n+----------------------------------------------------------------------------------------------------------------------------------+\n|                                                    Action Stream                                                                 |\n+==================================================================================================================================+\n| \ud83d\udfe1 User: @Table duckdb-demo.main.bank_failures                                                                                  |\n| \ud83d\udcac Generating response with tools...                                                                                            |\n| \ud83d\udcac Thinking: I'll provide a comprehensive analysis of the bank_failures table. Let me start by examining the data structure     |\n| and then perform various analyses.                                                                                              |\n| \ud83d\udd27 Tool call - describe_table('{\"table_name\": \"bank_failures\"}') - \u2713                                                            |\n|     \u2713 7 columns (0.5s)                                                                                                          |\n| \ud83d\udcac Thinking: Now let me perform a comprehensive analysis of the bank failures data:                                             |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- Comprehensive Bank Failures Analysis\\n...') - \u2713                                          |\n|     \u2717 Failed:(error_code=500006, e...) (0.5s)                                                                                   |\n| \ud83d\udcac Thinking: Let me break this down into separate queries for a comprehensive analysis:                                         |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- 1. Basic overview statistics\\nSELECT \\...') - \u2713                                          |\n|     \u2713 1 rows (0.5s)                                                                                                             |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- 2. Yearly analysis of bank failures\\nS...') - \u2713                                          |\n|     \u2713 14 rows (0.5s)                                                                                                            |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- 3. State-wise analysis (top 15 states)...') - \u2713                                          |\n|     \u2713 15 rows (0.5s)                                                                                                            |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- 4. Largest bank failures (top 20 by as...') - \u2713                                          |\n|     \u2713 20 rows (0.5s)                                                                                                            |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- 5. Acquisition analysis (top acquirers...') - \u2713                                          |\n|     \u2713 15 rows (0.5s)                                                                                                            |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- 6. Asset size distribution analysis\\nW...') - \u2713                                          |\n|     \u2713 6 rows (0.5s)                                                                                                             |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- 7. Recent failures (2023-2024)\\nSELECT...') - \u2713                                          |\n|     \u2713 8 rows (0.5s)                                                                                                             |\n| \ud83d\udcac Chat interaction completed successfully                                                                                      |\n+----------------------------------------------------------------------------------------------------------------------------------+\n\n+==================================================================================================================================+\n|                                       \ud83c\udfe6 Comprehensive Bank Failures Analysis (2008-2024)                                       |\n+==================================================================================================================================+\n\n                                                       \ud83d\udcca Executive Summary\n\n\u2022 Total Failures: 545 banks failed between 2008-2024\n\u2022 Total Assets: $1.696 trillion in failed bank assets\n\u2022 Time Span: 16 years (January 2008 - October 2024)\n\u2022 Geographic Reach: 42 states, 419 cities affected\n\u2022 Average Bank Size: $3.11 billion\n\n\n                                                    \ud83d\udcc8 Key Historical Patterns\n\n                                                       Major Crisis Periods\n\n1 2008-2009 Financial Crisis: 166 failures, $938.1B assets\n\u2022 Peak: 2009 (140 failures, $169.5B assets)\n\u2022 Includes Bear Stearns ($395B) and Washington Mutual ($307B)\n2 2010-2014 Post-Crisis Cleanup: 270 failures, $150.0B assets\n\u2022 Peak: 2010 (157 failures - highest count)\n\u2022 Smaller institutions, regulatory cleanup\n3 2023 Banking Stress: 6 failures, $572.7B assets\n\u2022 Major failures: First Republic ($229B), Silicon Valley Bank ($209B), Signature Bank ($118B)\n\n\n                                                    \ud83d\uddfa\ufe0f Geographic Distribution\n\n                                                  Top 5 States by Failure Count\n\n1 Georgia: 91 failures (16.7%) - $34.4B assets\n2 Florida: 73 failures (13.4%) - $39.2B assets\n3 Illinois: 66 failures (12.1%) - $37.7B assets\n4 California: 43 failures (7.9%) - $559.8B assets\n5 Minnesota: 23 failures (4.2%) - $3.2B assets\n\n                                                   Top 5 States by Assets Lost\n\n1 California: $559.8B (33.0% of total)\n2 New York: $513.4B (30.3% of total)*\n3 Washington: $318.9B (18.8% of total)\n4 Illinois: $37.7B (2.2% of total)\n5 Florida: $39.2B (2.3% of total)\n\n*Includes Bear Stearns and Signature Bank\n\n\n                                                      \ud83d\udcb0 Asset Size Analysis\n\n                                                        Size Distribution\n\n\nAsset Range   Failures   % of Total   Total Assets   % of Assets   Avg Size\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\nUnder $100M   136        24.9%        $7.7B          0.5%          $56M\n$100M-$500M   275        50.5%        $66.5B         3.9%          $242M\n$500M-$1B     57         10.5%        $40.3B         2.4%          $707M\n$1B-$5B       55         10.1%        $119.6B        7.1%          $2.2B\n$5B-$10B      7          1.3%         $43.8B         2.6%          $6.3B\nOver $10B     15         2.8%         $1,418.2B      83.6%         $94.5B\n\n\nKey Insight: While 75% of failures were under $1B in assets, the 15 largest failures (&gt;$10B) represent 83.6% of all failed assets.\n\n\n                                                     \ud83c\udfc6 Largest Bank Failures\n\n1 Bear Stearns (2008) - $395.0B (J.P. Morgan Chase)\n2 Washington Mutual (2008) - $307.0B (JPMorgan Chase)\n3 First Republic Bank (2023) - $229.0B (JPMorgan Chase)\n4 Silicon Valley Bank (2023) - $209.0B (First Citizens)\n5 Signature Bank (2023) - $118.4B (Flagstar Bank)\n\n\n                                                     \ud83c\udfdb\ufe0f Acquisition Landscape\n\n                                                    Top Acquiring Institutions\n\n1 U.S. Bank, N.A.: 13 acquisitions ($38.7B)\n2 State Bank and Trust: 10 acquisitions ($3.5B)\n3 Ameris Bank: 9 acquisitions ($1.9B)\n4 Stearns Bank, N.A.: 9 acquisitions ($1.7B)\n5 First-Citizens Bank: 7 acquisitions ($7.8B)\n\n                                                         Notable Patterns\n\n\u2022 JPMorgan Chase: Acquired 3 institutions but captured $930B+ in assets\n\u2022 20 banks: Had no acquirer (insured depositors paid directly)\n\u2022 Consolidation: Larger banks acquired most failed institutions\n\n\n                                                   \ud83d\udcc5 Recent Trends (2023-2024)\n\n                                                       2023 Major Failures\n\n\u2022 First Republic Bank: $229B (May 2023)\n\u2022 Silicon Valley Bank: $209B (March 2023)\n\u2022 Signature Bank: $118B (March 2023)\n\u2022 Silvergate Bank: $16B (March 2023)\n\n                                                          2024 Failures\n\n\u2022 Republic First Bancorp: $6B (April 2024)\n\u2022 First National Bank of Lindsay: $108M (October 2024)\n\n\n                                                         \ud83c\udfaf Key Insights\n\n                                                  1. Systemic Risk Concentration\n\n\u2022 15 largest failures (2.8% of total) represent 83.6% of failed assets\n\u2022 \"Too big to fail\" remains a significant concern\n\n                                                   2. Geographic Vulnerability\n\n\u2022 Southeast (GA, FL) had highest failure counts\n\u2022 West Coast (CA, WA) had largest asset concentrations\n\n                                                      3. Temporal Clustering\n\n\u2022 Clear crisis periods: 2008-2009, 2010-2014, 2023\n\u2022 Regulatory changes followed each crisis period\n\n                                                         4. Size Matters\n\n\u2022 Most failures were small banks\n\u2022 But systemic risk comes from very large institutions\n\n                                                     5. Acquisition Patterns\n\n\u2022 Large banks benefit from crisis acquisitions\n\u2022 Significant industry consolidation\n\n\n                                                  \u26a0\ufe0f Risk Management Implications\n\n1 Regulatory Focus: Largest institutions require heightened supervision\n2 Regional Monitoring: Southeast banking markets need closer oversight\n3 Crisis Preparedness: Friday intervention patterns suggest need for rapid response capabilities\n4 Systemic Monitoring: Asset concentration remains critical risk indicator\n\nThis analysis provides a comprehensive view of US bank failures over 16 years, highlighting patterns, risks, and regulatory\nimplications for the banking sector.\nWould you like to check the details? (y/n): n\n</code></pre> <p>Tip</p> <p>For more command references and options, see CLI or simply type <code>.help</code>.</p>"},{"location":"getting_started/Quickstart/#next-steps","title":"Next Steps","text":"<p>Now that you're up and running with Datus, explore more advanced features:</p> <ul> <li>Contextual Data Engineering - Learn how to use data assets as context</li> <li>Configuration Guide - Connect to your own databases and customize settings</li> <li>CLI Reference - Discover all available commands and options</li> <li>MetricFlow - Generate and query metrics with datus-metricflow</li> </ul>"},{"location":"getting_started/contextual_data_engineering/","title":"Contextual Data Engineering","text":""},{"location":"getting_started/contextual_data_engineering/#whats-contextual-data-engineering","title":"What's Contextual Data Engineering","text":"<p>Contextual Data Engineering is a new paradigm that transforms how data systems are built, maintained, and used in the age of AI. Instead of delivering static tables and pipelines, it focuses on building evolvable context \u2014 a living, intelligent layer for data that integrates metadata, referenced SQLs, semantic models, and metrics into a unified system that both humans and AI agents can understand.</p> <p></p> <ul> <li>In traditional data engineering, pipelines end with data delivery.</li> <li>In contextual data engineering, the pipeline itself becomes a knowledge graph of your data system, continuously learning from historical SQL, feedback loops, and human corrections.</li> </ul> <p>It is not just about moving data and build tables \u2014 it's about understanding and evolving the context around the data.</p>"},{"location":"getting_started/contextual_data_engineering/#why-it-matters","title":"Why It Matters","text":"<p>LLMs hallucinate without context</p> <p>Data context is a vast and complex space. We need data engineers \u2014 the ones who know the data best \u2014 to build reusable, AI-ready contexts that ground every query and response.</p> <p>Static tables don't scale for dynamic needs</p> <p>Modern business questions change daily. Ad-hoc data fetch requests consume half of a data engineer's time, but the knowledge behind those queries is rarely captured or reused.</p> <p>Traditional data engineering is not evolvable</p> <p>The focus has long been on the data consumer side (analytics and dashboards), not the producer side where context and accuracy are built. Contextual data engineering shifts that focus \u2014 empowering engineers to produce living context rather than static artifacts.</p>"},{"location":"getting_started/contextual_data_engineering/#why-datus","title":"Why Datus","text":"<p>Automatic Context Capture</p> <p>Datus automatically captures, stores, and recalls historical SQL, table structures, metrics, and semantic layers on demand \u2014 turning every interaction into long-term knowledge.</p> <p>Enhanced Long-term Memory</p> <p>Dual recall mechanisms (Tree + Vector) allow the system to remember not just exact matches, but semantically related queries and patterns \u2014 forming a continuously growing \"context graph\" for your data.</p> <p>Evolving Context Engineering</p> <p>The system learns from both machine generation and human feedback, incrementally refining its context over time. Every correction, benchmark, or success story becomes part of a self-improving data memory.</p>"},{"location":"getting_started/contextual_data_engineering/#core-concepts","title":"Core Concepts","text":""},{"location":"getting_started/contextual_data_engineering/#long-term-memory","title":"Long-Term Memory","text":"<p>We model Data Engineering Context (Long-Term Memory) as two trees:</p> <p></p> <ul> <li>In Datus CLI, you can browse and edit them via <code>@catalog</code> and <code>@subject</code></li> <li>Use <code>datus-agent bootstrap-kb</code> to batch-initialize and cold-start the knowledge base</li> <li>With subagents, you can define a scoped context \u2014 a curated subset of the global store that enables precise, domain-aware delivery</li> </ul>"},{"location":"getting_started/contextual_data_engineering/#interactive-context-building","title":"Interactive Context Building","text":"<p>Co-authored context</p> <p>LLMs draft semantic models and metrics from tables and reference SQL, while engineers refine labels, metadata, and the subject tree.</p> <p>Command-driven iteration</p> <p>Commands like <code>/gen_semantic_model</code>, <code>/gen_metrics</code>, and <code>/gen_sql_summary</code> create and update assets. The <code>@catalog</code> and <code>@subject</code> screens support in-place edits.</p> <p>Feedback drives continuous improvement</p> <p>Exploration with <code>/chat</code>, success-story writebacks, and issue/benchmark loops convert usage into durable, reusable knowledge.</p>"},{"location":"getting_started/contextual_data_engineering/#subagent-system","title":"Subagent System","text":"<p>Scoped, domain-aware subagents</p> <p>Package description, rules, and scoped context to unify tables, SQL patterns, metrics, and constraints for specific business scenarios.</p> <p>Configurable tools and MCPs</p> <p>Configure tools per scenario. Built-ins include DB tools, context-search tools, and filesystem tools. Enable and compose as needed.</p> <p>RL-ready architecture</p> <p>The subagent's scoped context forms an ideal RL environment (environment + question + SQL) for continuous training and evaluation.</p>"},{"location":"getting_started/contextual_data_engineering/#tools-and-components","title":"Tools and Components","text":"<p>Datus CLI</p> <p>An interactive CLI for data engineers with context-aware compression and search tools. Provides three \"magic commands\":</p> <ul> <li><code>/</code> to chat and orchestrate</li> <li><code>@</code> to view and recall context</li> <li><code>!</code> to execute node/tool actions</li> </ul> <p>Datus Agent</p> <p>A benchmarking and bootstrap utility \u2014 the batch companion to the CLI. Used to:</p> <ul> <li>Build initial context from historical data</li> <li>Run benchmarks and evaluations</li> <li>Expose corresponding APIs</li> </ul> <p>Datus Chat</p> <p>A lightweight web chatbot for analysts and business users, supporting:</p> <ul> <li>Multi-turn conversations</li> <li>Built-in feedback (upvotes, issue reports, success stories)</li> </ul>"},{"location":"getting_started/contextual_data_engineering/#user-journey","title":"User Journey","text":""},{"location":"getting_started/contextual_data_engineering/#initial-exploration","title":"Initial Exploration","text":"<p>Kick off with <code>/chat</code></p> <p>Probe the database and quickly validate end-to-end Q&amp;A: schema understanding, simple aggregations, and table lookups.</p> <p>Refine with targeted hints</p> <p>Use <code>/question + @table @file</code> to provide examples, join rules, column notes, or query templates that ground the model in the right context.</p> <p>Tight feedback loop</p> <p>Try \u2192 inspect result \u2192 add clarifications (e.g., \"use PK join between <code>orders</code> and <code>users</code>\", \"<code>status</code> \u2208 {A,B,C}\") \u2192 retry.</p> <p>Example:</p> <pre><code>/chat What were last week's DAU and retention for the new region?\n/question @table users events @file ./notes/retention_rules.md\n</code></pre>"},{"location":"getting_started/contextual_data_engineering/#building-context","title":"Building Context","text":"<p>Import Reference SQL</p> <p>Capture proven patterns and edge-case handling. Promote high-value snippets into reusable blocks. See Reference SQL Tracking for details.</p> <p>Generate first-pass assets</p> <ul> <li><code>/gen_semantic_model @table ...</code> \u2014 draft YAML for dimensions/measures</li> <li><code>/gen_metrics @sql @semantic_model ...</code> \u2014 define business metrics and tests</li> <li><code>/gen_sql_summary @file ./sql/</code> \u2014 summarize intent and dependencies</li> </ul> <p>Human-in-the-loop curation</p> <p>Refine domain \u2192 layer_1 \u2192 layer_2 descriptions, align naming conventions, and edit metadata directly in <code>@catalog</code> / <code>@subject</code>.</p> <p>Example:</p> <pre><code>/gen_semantic_model @table fact_orders dim_users\n/gen_metrics @sql ./sql/retention.sql @semantic_model ./models/game.yaml \"30-day retention\"\n</code></pre>"},{"location":"getting_started/contextual_data_engineering/#creating-a-subagent","title":"Creating a Subagent","text":"<p>Define a domain-aware chatbot</p> <p>Use <code>.subagent add &lt;name&gt;</code> for a specific scenario (e.g., \"commercialization analytics\").</p> <p>Package the essentials</p> <p>Include description, rules (join keys, filters, calculation rules), scoped context (tables, SQL snippets, metrics), and allowed tools.</p> <p>Constrain the search space</p> <p>Limit to selected catalogs/tables and enable only relevant tools/MCPs (DB tools, context search, filesystem where needed).</p> <p>Example:</p> <pre><code>.subagent add california_schools\n</code></pre>"},{"location":"getting_started/contextual_data_engineering/#delivering-and-iterating","title":"Delivering and Iterating","text":"<p>Ship to the web</p> <p>Serve the subagent as a lightweight chatbot UI for analysts to perform multi-turn analysis and report preview.</p> <pre><code>datus-agent --namespace schools --web\n</code></pre> <p>You can then access <code>http://localhost:8501/?subagent=california_schools</code> (change <code>localhost</code> to your IP address if you're deploying the subagent to your stakeholders).</p> <p>Collect and write back feedback</p> <p>Analysts upvote good results and report issues with traceable session links. Export successful runs as success stories.</p> <p>Close the loop</p> <p>When data engineers receive issue links from customers, they can revise SQL, update rules and metadata, build more metrics, or expand the scoped context. The subagent improves continuously as knowledge is captured.</p>"},{"location":"getting_started/contextual_data_engineering/#next-steps","title":"Next Steps","text":"<ul> <li> <p> Knowledge Base</p> <p>Explore detailed context management with metadata, metrics, and reference SQL.</p> <p> Learn more</p> </li> <li> <p> Workflow Integration</p> <p>Integrate context into automated data pipelines and orchestration.</p> <p> Explore workflows</p> </li> <li> <p> CLI Context Commands</p> <p>Master the CLI with hands-on context management commands.</p> <p> View commands</p> </li> <li> <p> Configuration</p> <p>Configure advanced settings for agents, namespaces, and storage.</p> <p> Configuration guide</p> </li> </ul>"},{"location":"getting_started/contextual_data_engineering/#related-resources","title":"Related Resources","text":"<ul> <li>Metadata Management - Organize and manage table schemas and column descriptions</li> <li>Metrics Definition - Define reusable business metrics</li> <li>Reference SQL Tracking - Capture and leverage historical query patterns</li> <li>Context Command Reference - Complete CLI context command reference</li> </ul>"},{"location":"getting_started/installation/","title":"Installation","text":"<p>Follow these steps to install the Datus Agent locally and set up your environment.</p>"},{"location":"getting_started/installation/#step-1-prepare-your-environment","title":"Step 1: Prepare Your Environment","text":""},{"location":"getting_started/installation/#install-python-312","title":"Install Python 3.12","text":"<p>Datus requires a Python 3.12 environment. Choose your preferred method below:</p> Condavirtualenvuv <pre><code>conda create -n datus python=3.12\nconda activate datus\n</code></pre> <pre><code>virtualenv datus --python=python3.12\nsource datus/bin/activate\n</code></pre> <pre><code>uv venv datus --python 3.12\nsource datus/bin/activate\n</code></pre>"},{"location":"getting_started/installation/#install-the-datus-agent","title":"Install the Datus Agent","text":"Stable ReleaseBeta Release <pre><code>pip install datus-agent\n</code></pre> <pre><code>pip install --no-deps -i https://test.pypi.org/simple/ datus-agent\n</code></pre>"},{"location":"getting_started/installation/#step-2-initialize-the-configuration","title":"Step 2: Initialize the Configuration","text":""},{"location":"getting_started/installation/#first-time-setup","title":"First-Time Setup","text":"<p>Run the initialization command:</p> <pre><code>datus-agent init\n</code></pre>"},{"location":"getting_started/installation/#customize-your-environment","title":"Customize Your Environment","text":"<p>The setup process will guide you through configuring various components:</p>"},{"location":"getting_started/installation/#1-llm-configuration","title":"1. LLM Configuration","text":"<p>Configure your preferred LLM provider:</p> <pre><code>- Which LLM provider? [openai/deepseek/claude/kimi/qwen] (deepseek): kimi\n- Enter your API key:\n- Enter your base URL (https://api.deepseek.com):\n- Enter your model name (deepseek-chat):\n\u2192 Testing LLM connectivity...\n\u2714 LLM model test successful\n</code></pre>"},{"location":"getting_started/installation/#2-namespace-setup","title":"2. Namespace Setup","text":"<p>Set up the database connection. For example, <code>duckdb-demo.duckdb</code> is a demo database provided with the project:</p> <pre><code>- Namespace name: duckdb-demo\n- Database type [sqlite/duckdb/snowflake/mysql/postgresql/starrocks] (starrocks):duckdb\n- Connection string: ~/.datus/sample/duckdb-demo.duckdb\n\u2192 Testing database connectivity...\n\u2714 Database connection test successful\n</code></pre> <p>Demo Database Connection</p> <p>Datus provides a pre-configured demo DuckDB database for testing and learning purposes.</p> <p>Connection string: <code>~/.datus/sample/duckdb-demo.duckdb</code></p> <p>This demo database contains sample tables and data that you can use to explore Datus features without setting up your own database. It's automatically available after running <code>datus-agent init</code>.</p>"},{"location":"getting_started/installation/#3-workspace-configuration","title":"3. Workspace Configuration","text":"<p>Configure the workspace root directory (where your SQL files are stored):</p> <pre><code>- Workspace path (\uff5e/.datus/workspace):\n\u2714 Workspace directory created\n</code></pre>"},{"location":"getting_started/installation/#4-knowledge-base-optional","title":"4. Knowledge Base (Optional)","text":"<p>Initialize the knowledge base for metadata and reference SQL:</p> <pre><code>- Initialize vector DB for metadata? [y/n] (n): y\n\u2192 Initializing metadata knowledge base...\n\u2192 Processed 17 tables with 17 sample records\n\u2714 Metadata knowledge base initialized\n- Initialize reference SQL from workspace? [y/n] (n):\n</code></pre>"},{"location":"getting_started/installation/#5-configuration-summary","title":"5. Configuration Summary","text":"<p>After setup, you'll see a summary like this:</p> Setting Value LLM kimi (kimi-k2-turbo-preview) Namespace duckdb-demo Workspace /Users/username/.datus/workspace <p>You're now ready to run <code>datus-cli --namespace duckdb-demo</code></p>"},{"location":"getting_started/installation/#step-3-launch-the-datus-agent","title":"Step 3: Launch the Datus Agent","text":""},{"location":"getting_started/installation/#run-datus-cli","title":"Run Datus CLI","text":"<p>Start the Datus CLI with your configured namespace:</p> <pre><code>datus-cli --namespace duckdb-demo\n</code></pre> <p>You should see output similar to:</p> <pre><code>Datus - AI-powered SQL command-line interface\nType '.help' for a list of commands or '.exit' to quit.\n\nNamespace duckdb-demo selected\nConnected to duckdb using database duckdb\nContext: Current: database: duckdb\nType SQL statements or use ! @ . commands to interact.\nDatus&gt;\n</code></pre>"},{"location":"getting_started/installation/#next-steps","title":"Next Steps","text":"<p>Follow the Quickstart guide to begin your experience with Datus Agent.</p> <p>For metrics generation and queries, you need to install datus-metricflow, reference to Datus-Metricflow Introduction</p>"},{"location":"knowledge_base/introduction/","title":"Knowledge Base Introduction","text":"<p>The Datus Agent Knowledge Base is a multi-modal intelligence system that transforms scattered data assets into a unified, searchable repository. Think of it as \"Google for your data\" with deep understanding of SQL, business metrics, and data relationships.</p>"},{"location":"knowledge_base/introduction/#core-purpose","title":"Core Purpose","text":"<ul> <li>Data Discovery: Find relevant tables, columns, and patterns</li> <li>Query Intelligence: Understand business intent and generate SQL</li> <li>Knowledge Preservation: Capture and organize SQL expertise</li> <li>Semantic Search: Find information by meaning, not keywords</li> </ul>"},{"location":"knowledge_base/introduction/#core-components","title":"Core Components","text":""},{"location":"knowledge_base/introduction/#1-schema-metadata","title":"1. Schema Metadata","text":"<p>Purpose: Understand database structure and provide intelligent table recommendations.</p> <ul> <li>Stores: Table definitions, column info, sample data, statistics</li> <li>Capabilities: Find tables by business meaning, get table structures, semantic search</li> <li>Use: Automatic table selection, data discovery, schema understanding</li> </ul>"},{"location":"knowledge_base/introduction/#2-business-metrics","title":"2. Business Metrics","text":"<p>Purpose: Manage and discover business metrics and KPIs.</p> <ul> <li>Stores: Semantic models, business metrics, hierarchical categorization</li> <li>Capabilities: Find metrics by concept, get calculations, discover related metrics</li> <li>Use: Standardized definitions, quick lookup, consistent reporting</li> </ul>"},{"location":"knowledge_base/introduction/#3-reference-sql","title":"3. reference SQL","text":"<p>Purpose: Capture, analyze, and make searchable SQL expertise.</p> <ul> <li>Stores: Historical queries, LLM summaries, query patterns, best practices</li> <li>Capabilities: Find queries by intent, get similar queries, learn patterns</li> <li>Use: Knowledge sharing, optimization through examples, team onboarding</li> </ul>"},{"location":"knowledge_base/introduction/#key-features","title":"Key Features","text":"<ul> <li>Unified Search: Single interface across all knowledge domains</li> <li>Semantic Search: Find by meaning using vector embeddings</li> <li>Intelligent Classification: Automatic categorization and organization</li> <li>Scalable: Lazy loading, batch processing, incremental updates</li> </ul>"},{"location":"knowledge_base/metadata/","title":"Schema Metadata Intelligence","text":""},{"location":"knowledge_base/metadata/#introduction","title":"Introduction","text":"<p>The metadata module is primarily used to enable LLMs to quickly match possible related table definition information and sample data based on user questions.</p> <p>When you use the <code>bootstrap-kb</code> command, we initialize the SQL statements and sample data for creating tables/views/materialized views in the data source you specify into a vector database.</p> <p>This module contains two types of information: table definition and sample data.</p>"},{"location":"knowledge_base/metadata/#data-structure-of-table-definition","title":"Data Structure of Table Definition","text":"Field Name Explanation Supported Database Types <code>catalog_name</code> The top-level container in a database system. It typically represents a collection of databases and provides metadata about them, such as available schemas, tables, and security settings StarRocks/Snowflake <code>database_name</code> A logical container that stores related data. It usually groups together multiple schemas and provides boundaries for data organization, security, and management. DuckDB/MySQL/StarRocks/Snowflake <code>schema_name</code> A namespace inside a database. It organizes objects such as tables, views, functions, and procedures into logical groups. Schemas help avoid name conflicts and support role-based access. DuckDB/Snowflake <code>table_type</code> The types of tables in the database, including <code>table</code>, <code>view</code>, and <code>mv</code> (abbreviation for materialized view). Each database supports table and view. DuckDB and Snowflake support materialized views. All supported databases <code>table_name</code> Name of the table/view/materialized view All supported databases <code>definition</code> SQL statements for creating tables/views/materialized views All supported databases <code>identifier</code> The unique identifier of the current table, which is composed of <code>catalog_name</code>, <code>database_name</code>, <code>schema_name</code> and <code>table_name</code>. You don't need to worry about it, because you won't need it in most scenarios. All supported databases"},{"location":"knowledge_base/metadata/#data-structure-of-sample-data","title":"Data Structure of Sample Data","text":"Field Name Explanation <code>catalog_name</code> Same as above <code>database_name</code> Same as above <code>schema_name</code> Same as above <code>table_type</code> Same as above <code>table_name</code> Same as above <code>sample_rows</code> Sample data for the current table/view/mv. Usually it will be the first 5 items in the current table <code>identifier</code> Same as above"},{"location":"knowledge_base/metadata/#how-to-build","title":"How to Build","text":"<p>You can build it using the <code>datus-agent bootstrap-kb</code> command:</p> <pre><code>datus-agent bootstrap-kb --namespace &lt;your_namespace&gt; --kb_update_strategy [check/overwrite/incremental]\n</code></pre>"},{"location":"knowledge_base/metadata/#command-line-parameter-description","title":"Command Line Parameter Description","text":"<ul> <li><code>--namespace</code>: The key corresponding to your database configuration</li> <li><code>--kb_update_strategy</code>: Execution strategy, there are three options:<ul> <li><code>check</code>: Check the number of data entries currently constructed</li> <li><code>overwrite</code>: Fully overwrite existing data</li> <li><code>incremental</code>: Incremental update: if existing data has changed, update it and append non-existent data</li> </ul> </li> </ul>"},{"location":"knowledge_base/metadata/#usage-examples","title":"Usage Examples","text":""},{"location":"knowledge_base/metadata/#check-current-status","title":"Check Current Status","text":"<pre><code>datus-agent bootstrap-kb --namespace &lt;your_namespace&gt; --kb_update_strategy check\n</code></pre>"},{"location":"knowledge_base/metadata/#full-rebuild","title":"Full Rebuild","text":"<pre><code>datus-agent bootstrap-kb --namespace &lt;your_namespace&gt; --kb_update_strategy overwrite\n</code></pre>"},{"location":"knowledge_base/metadata/#incremental-update","title":"Incremental Update","text":"<p>```bash datus-agent bootstrap-kb --namespace  --kb_update_strategy incremental"},{"location":"knowledge_base/metadata/#best-practices","title":"Best Practices","text":""},{"location":"knowledge_base/metadata/#database-configuration","title":"Database Configuration","text":"<ul> <li>Ensure your database namespace is properly configured in <code>agent.yml</code></li> <li>Verify database connectivity before running bootstrap commands</li> <li>Use appropriate credentials with read access to system tables</li> </ul>"},{"location":"knowledge_base/metadata/#update-strategy-selection","title":"Update Strategy Selection","text":"<ul> <li>Use <code>check</code> to verify current state without making changes</li> <li>Use <code>overwrite</code> for initial setup or when schema has changed significantly</li> <li>Use <code>incremental</code> for regular updates to capture new tables and changes</li> </ul>"},{"location":"knowledge_base/metadata/#performance-considerations","title":"Performance Considerations","text":"<ul> <li>Large databases may take time to process during initial bootstrap</li> <li>Consider running during off-peak hours for production databases</li> <li>Monitor disk space as metadata is stored locally in LanceDB</li> </ul>"},{"location":"knowledge_base/metadata/#troubleshooting","title":"Troubleshooting","text":""},{"location":"knowledge_base/metadata/#common-issues","title":"Common Issues","text":"<ul> <li>Permission errors: Ensure database user has access to system/information schema tables</li> <li>Connection timeouts: Check network connectivity and database availability</li> <li>Large result sets: Consider filtering to specific schemas if database is very large</li> </ul>"},{"location":"knowledge_base/metadata/#verification","title":"Verification","text":"<p>After bootstrap completion, verify the metadata was captured correctly:</p> <ul> <li>Check LanceDB storage directory for populated files</li> <li>Test search functionality through the CLI</li> <li>Verify sample data represents actual table contents</li> </ul>"},{"location":"knowledge_base/metrics/","title":"Business Metrics Intelligence","text":"<p>The Metrics component specifically focuses on automatically extracting and generating business metrics from historical SQL queries, establishing an enterprise-level metrics management system.</p>"},{"location":"knowledge_base/metrics/#core-value","title":"Core Value","text":""},{"location":"knowledge_base/metrics/#what-problem-does-it-solve","title":"What Problem Does It Solve?","text":"<ul> <li>Duplicate SQL queries: Large numbers of similar business query needs in enterprises</li> <li>Inconsistent metric definitions: Different developers have different understandings of the same business metrics</li> <li>Inefficient data analysis: SQL needs to be rewritten for each query</li> </ul>"},{"location":"knowledge_base/metrics/#what-value-does-it-provide","title":"What Value Does It Provide?","text":"<ul> <li>Metric standardization: Unified business metric definitions ensuring data consistency</li> <li>Knowledge reuse: Converting historical SQL experience into reusable metrics library</li> <li>Intelligent querying: Directly calling predefined metrics through natural language</li> </ul>"},{"location":"knowledge_base/metrics/#how-it-works","title":"How It Works","text":""},{"location":"knowledge_base/metrics/#data-hierarchy-structure","title":"Data Hierarchy Structure","text":"<pre><code>graph LR\n    A[Data Table/Historical SQLs] --&gt; B[Semantic Model]\n    B --&gt; C[Business Metrics]</code></pre>"},{"location":"knowledge_base/metrics/#1-semantic-model","title":"1. Semantic Model","text":"<ul> <li>Defines table structure and business meaning</li> <li>Contains dimensions, measures, identifiers, and other metadata</li> <li>Provides semantic foundation for SQL queries</li> </ul>"},{"location":"knowledge_base/metrics/#2-business-metrics","title":"2. Business Metrics","text":"<ul> <li>Calculable metrics defined based on semantic models</li> <li>Contains metric name, description, calculation logic</li> <li>Supports complex business calculations</li> </ul>"},{"location":"knowledge_base/metrics/#usage","title":"Usage","text":"<p>Prerequisites: This command relies on datus-metricflow, install it first.</p>"},{"location":"knowledge_base/metrics/#basic-command","title":"Basic Command","text":"<pre><code># Initialize metrics component from success story CSV\n\ndatus-agent bootstrap-kb \\\n    --namespace &lt;your_namespace&gt; \\\n    --components metrics \\\n    --success_story path/to/success_story.csv \\\n    --metric_meta business_meta\n</code></pre> <pre><code># Initialize metrics component from semantic YAML\n\ndatus-agent bootstrap-kb \\\n    --namespace &lt;your_namespace&gt; \\\n    --components metrics \\\n    --semantic_yaml path/to/semantic_model.yaml \\\n    --metric_meta business_meta\n</code></pre>"},{"location":"knowledge_base/metrics/#key-parameters","title":"Key Parameters","text":"Parameter Required Description Example <code>--namespace</code> \u2705 Database namespace <code>sales_db</code> <code>--components</code> \u2705 Components to initialize <code>metrics</code> <code>--success_story</code> \u26a0\ufe0f A CSV file containing historical SQLs and questions (required if not using <code>--semantic_yaml</code>) <code>benchmark/semantic_layer/success_story.csv</code> <code>--semantic_yaml</code> \u26a0\ufe0f Semantic model YAML file (required if not using <code>--success_story</code>) <code>models/semantic_model.yaml</code> <code>--metric_meta</code> \u2705 Metric metadata <code>ecommerce</code> configuration component in <code>agent.yml</code> <code>--kb_update_strategy</code> \u2705 Update strategy <code>overwrite</code>/<code>incremental</code> <code>--pool_size</code> \u274c Concurrent thread count <code>4</code>"},{"location":"knowledge_base/metrics/#data-source-formats","title":"Data Source Formats","text":""},{"location":"knowledge_base/metrics/#csv-format","title":"CSV Format","text":"<pre><code>question,sql\nHow many customers have been added per day?,\"SELECT ds AS date, SUM(1) AS new_customers FROM customers GROUP BY ds ORDER BY ds;\"\nWhat is the total transaction amount?,SELECT SUM(transaction_amount_usd) as total_amount FROM transactions;\n</code></pre>"},{"location":"knowledge_base/metrics/#yaml-format","title":"YAML Format","text":"<pre><code>data_source:\n  name: transactions\n  description: \"Transaction records\"\n  identifiers:\n    - name: transaction_id\n      type: primary\n  dimensions:\n    - name: transaction_date\n      type: time\n    - name: transaction_type\n      type: categorical\n  measures:\n    - name: amount\n      type: double\n      agg: sum\n---\nmetric:\n  name: total_revenue\n  description: \"Total revenue from all transactions\"\n  constraint: \"amount &gt; 0\"\n</code></pre>"},{"location":"knowledge_base/metrics/#summary","title":"Summary","text":"<p>The Bootstrap-KB Metrics component is the core functionality of Datus Agent, helping enterprises establish standardized data metrics systems through automated metric generation and management. It not only significantly improves data analysis efficiency but also ensures enterprise data consistency and reusability.</p> <p>By properly using the Metrics component, enterprises can build a strong foundation for data-driven decision making.</p>"},{"location":"knowledge_base/reference_sql/","title":"Reference SQL Intelligence","text":""},{"location":"knowledge_base/reference_sql/#overview","title":"Overview","text":"<p>Bootstrap-KB Reference SQL is a powerful component that processes, analyzes, and indexes SQL query files to create an intelligent searchable repository. It transforms raw SQL files with comments into a structured knowledge base with semantic search capabilities.</p>"},{"location":"knowledge_base/reference_sql/#core-value","title":"Core Value","text":""},{"location":"knowledge_base/reference_sql/#what-problem-does-it-solve","title":"What Problem Does It Solve?","text":"<ul> <li>SQL Knowledge Silos: SQL queries scattered across files without organization</li> <li>SQL Reusability: Difficulty finding existing queries for similar needs</li> <li>Query Discovery: No efficient way to search SQL by business intent</li> <li>Knowledge Management: SQL expertise locked in individual developers' minds</li> </ul>"},{"location":"knowledge_base/reference_sql/#what-value-does-it-provide","title":"What Value Does It Provide?","text":"<ul> <li>Intelligent Organization: Automatically categorizes and classifies SQL queries</li> <li>Semantic Search: Find SQL queries using natural language descriptions</li> <li>Knowledge Preservation: Captures SQL expertise in a searchable format</li> <li>Query Reusability: Easily discover and reuse existing SQL patterns</li> </ul>"},{"location":"knowledge_base/reference_sql/#usage","title":"Usage","text":""},{"location":"knowledge_base/reference_sql/#basic-command","title":"Basic Command","text":"<pre><code># Initialize Reference SQL component\ndatus-agent bootstrap-kb \\\n    --namespace &lt;your_namespace&gt; \\\n    --components reference_sql \\\n    --sql_dir /path/to/sql/directory \\\n    --kb_update_strategy overwrite\n</code></pre>"},{"location":"knowledge_base/reference_sql/#key-parameters","title":"Key Parameters","text":"Parameter Required Description Example <code>--namespace</code> \u2705 Database namespace <code>analytics_db</code> <code>--components</code> \u2705 Components to initialize <code>reference_sql</code> <code>--sql_dir</code> \u2705 Directory containing SQL files <code>/sql/queries</code> <code>--kb_update_strategy</code> \u2705 Update strategy <code>overwrite</code>/<code>incremental</code> <code>--validate-only</code> \u274c Only validate, don't store <code>--pool_size</code> \u274c Concurrent processing threads, default value is 4 <code>8</code> <code>--subject_tree</code> \u274c Predefined taxonomy structure for classification <code>analytics/user_analytics/activity_metrics,analytics/revenue/daily</code>"},{"location":"knowledge_base/reference_sql/#sql-file-format","title":"SQL File Format","text":""},{"location":"knowledge_base/reference_sql/#expected-format","title":"Expected Format","text":"<p>SQL files should use comment blocks to describe each query. Each SQL statement must be terminated with a semicolon (<code>;</code>).</p> <pre><code>-- Daily active users count\n-- Count unique users who logged in each day\nSELECT\n    DATE(created_at) as activity_date,\n    COUNT(DISTINCT user_id) as daily_active_users\nFROM user_activity\nWHERE created_at &gt;= '2025-01-01'\nGROUP BY DATE(created_at)\nORDER BY activity_date;\n\n-- Monthly revenue summary\n-- Total revenue grouped by month and category\nSELECT\n    DATE_TRUNC('month', order_date) as month,\n    category,\n    SUM(amount) as total_revenue,\n    COUNT(*) as order_count\nFROM orders\nWHERE order_date &gt;= '2025-01-01'\nGROUP BY DATE_TRUNC('month', order_date), category\nORDER BY month, total_revenue DESC;\n</code></pre>"},{"location":"knowledge_base/reference_sql/#format-requirements","title":"Format Requirements","text":"<ol> <li>Semicolon Delimiter: Each SQL statement must end with a semicolon (<code>;</code>)</li> <li>Comment Format: Use SQL line comments (<code>--</code>) to describe queries (optional)<ul> <li>Comments immediately preceding a SQL statement will be associated with that query</li> <li>Multiple comment lines are concatenated into a single description</li> <li>Comments can be omitted if not needed</li> </ul> </li> <li>SELECT Queries Only: Only <code>SELECT</code> statements are processed and stored</li> <li>SQL Dialects: Supports MySQL, Hive, and Spark SQL dialects</li> <li>Parameter Placeholders: The following parameter styles are supported:<ul> <li><code>#parameter#</code> - hash-delimited parameters</li> <li><code>:parameter</code> - colon-prefixed parameters</li> <li><code>@parameter</code> - at-sign parameters</li> <li><code>${parameter}</code> - shell-style parameters</li> </ul> </li> </ol>"},{"location":"knowledge_base/reference_sql/#file-organization","title":"File Organization","text":"<ul> <li>Place all SQL files (<code>.sql</code> extension) in a single directory</li> <li>Files are processed recursively</li> <li>Invalid SQL entries are logged to <code>sql_processing_errors.log</code> for review</li> </ul>"},{"location":"knowledge_base/reference_sql/#summary","title":"Summary","text":"<p>The Bootstrap-KB Reference SQL component transforms scattered SQL files into an intelligent, searchable knowledge base. It combines advanced NLP capabilities with robust SQL processing to create a powerful tool for SQL discovery and reuse.</p> <p>By implementing reference SQL, teams can break down knowledge silos and build a collective SQL intelligence asset that grows over time.</p>"},{"location":"metricflow/introduction/","title":"Datus-MetricFlow Introduction","text":"<p>Note: This project is forked from dbt-labs/metricflow version 0.140.0 and continues development from there. We are grateful to the dbt Labs team for their excellent work on the original MetricFlow project.</p>"},{"location":"metricflow/introduction/#what-is-metricflow","title":"What is MetricFlow?","text":"<p>MetricFlow is a semantic layer that helps you organize and manage metric definitions in code. It automatically generates clean, reusable SQL queries from your metric definitions, ensuring consistent metric outputs across your organization.</p> <p>Simply put, MetricFlow allows you to:</p> <ul> <li>Define your business metrics once in a standardized way</li> <li>Query those metrics consistently across different dimensions</li> <li>Get automatically generated SQL that's optimized for your data warehouse.</li> </ul>"},{"location":"metricflow/introduction/#key-features","title":"Key Features","text":""},{"location":"metricflow/introduction/#metric-management","title":"Metric Management","text":"<ul> <li>Centralized Definitions: Define all metrics in one place using simple YAML configuration</li> <li>Multiple Metric Types: Support for simple metrics, ratios, expressions, and cumulative metrics</li> <li>Dimension Analysis: Break down metrics by any dimension (time, geography, product category, etc.)</li> </ul>"},{"location":"metricflow/introduction/#smart-query-generation","title":"Smart Query Generation","text":"<ul> <li>Automatic SQL Generation: Converts metric requests into optimized SQL queries</li> <li>Multi-hop Joins: Handles complex joins between fact tables and dimension tables</li> <li>Time Granularity: Aggregate metrics at different time periods (daily, weekly, monthly, etc.)</li> </ul>"},{"location":"metricflow/introduction/#integration-flexibility","title":"Integration &amp; Flexibility","text":"<ul> <li>Multiple Data Warehouses: Works with various data platforms</li> <li>API Integration: Build custom integrations with downstream tools</li> <li>Version Control: Manage metric definitions in Git like regular code</li> </ul>"},{"location":"metricflow/introduction/#supported-systems","title":"Supported Systems","text":""},{"location":"metricflow/introduction/#data-warehouses","title":"Data Warehouses","text":"<p>datus-metricflow currently supports:</p> <ul> <li>DuckDB - Embedded analytical database (great for demos and local development)</li> <li>SQLite - Lightweight embedded database</li> <li>StarRocks - High-performance analytical database</li> </ul>"},{"location":"metricflow/introduction/#enhancements-in-datus-metricflow","title":"Enhancements in datus-metricflow","text":"<p>Building on MetricFlow 0.140.0, we have made the following improvements:</p> <ul> <li>Python 3.12 Support: Upgraded to support the latest Python version</li> <li>Additional Database Support: Added SQLite and StarRocks adapters</li> <li>Datus Integration: Seamlessly integrated with the Datus project for unified configuration</li> <li>Standalone Package: Can be installed as a dependency and used independently</li> <li>MCP Server: Enables LLM applications to query metrics through the Model Context Protocol</li> </ul>"},{"location":"metricflow/introduction/#installing-datus-metricflow","title":"Installing datus-metricflow","text":"<p>Make sure you have Python 3.12 installed on your system. Then install via pip:</p> <pre><code>pip install datus-metricflow\n</code></pre>"},{"location":"metricflow/introduction/#next-steps","title":"Next Steps","text":"<p>After installation:</p> <ol> <li>Define Your Metrics: Create YAML files in the semantic models directory or use subagents to define your business metrics</li> <li>Query Your Metrics: Use the <code>mf query</code> command or integrate with Datus Agent to query your metrics</li> <li>Integrate with Tools: Use the MCP server to connect MetricFlow with LLM applications</li> </ol>"},{"location":"subagent/builtin_subagents/","title":"Builtin Subagent","text":""},{"location":"subagent/builtin_subagents/#overview","title":"Overview","text":"<p>The Builtin Subagent are specialized AI assistants integrated within the Datus Agent system. Each subagent focuses on a specific aspect of data engineering automation \u2014 analyzing SQL, generating semantic models, and converting queries into reusable metrics \u2014 together forming a closed-loop workflow from raw SQL to knowledge-aware data products.</p> <p>This document covers three core subagents:</p> <ol> <li>gen_sql_summary \u2014 Summarizes and classifies SQL queries</li> <li>gen_semantic_model \u2014 Generates MetricFlow semantic models</li> <li>gen_metrics \u2014 Generates MetricFlow metric definitions</li> </ol>"},{"location":"subagent/builtin_subagents/#configuration","title":"Configuration","text":"<p>Builtin subagents work out of the box with default settings. You can optionally customize them in your <code>agent.yml</code> file:</p> <pre><code>agent:\n  agentic_nodes:\n    gen_semantic_model:\n      model: anthropic  # Optional: specify the AI model to use\n      max_turns: 10     # Optional: maximum conversation turns (default: 30)\n\n    gen_metrics:\n      model: anthropic\n      max_turns: 8\n\n    gen_sql_summary:\n      model: deepseek_v3\n      max_turns: 5\n</code></pre> <p>Optional configuration parameters:</p> <ul> <li><code>model</code>: The AI model to use for this subagent (e.g., <code>anthropic</code>, <code>deepseek_v3</code>)</li> <li><code>max_turns</code>: Maximum number of conversation turns before the subagent completes</li> </ul>"},{"location":"subagent/builtin_subagents/#gen_sql_summary","title":"gen_sql_summary","text":""},{"location":"subagent/builtin_subagents/#overview_1","title":"Overview","text":"<p>The SQL Summary feature helps you analyze, classify, and catalog SQL queries for knowledge reuse. It automatically generates structured YAML summaries that are stored in a searchable Knowledge Base, making it easy to find and reuse similar queries in the future.</p>"},{"location":"subagent/builtin_subagents/#what-is-a-sql-summary","title":"What is a SQL Summary?","text":"<p>A SQL summary is a structured YAML document that captures:</p> <ul> <li>Query Text: The complete SQL query</li> <li>Business Context: Domain, categories, and tags</li> <li>Semantic Summary: Detailed explanation for vector search</li> <li>Metadata: Name, comment, file path</li> </ul>"},{"location":"subagent/builtin_subagents/#quick-start","title":"Quick Start","text":"<p>Launch the SQL summary generation subagent:</p> <pre><code>/gen_sql_summary Analyze this SQL: SELECT SUM(revenue) FROM sales GROUP BY region. (You can also add some description on this SQL)\n</code></pre>"},{"location":"subagent/builtin_subagents/#generation-workflow","title":"Generation Workflow","text":"<pre><code>graph LR\n    A[User provides SQL + description] --&gt; B[Agent analyzes query]\n    B --&gt; C[Retrieves context]\n    C --&gt; D[Generates unique ID]\n    D --&gt; E[Creates YAML]\n    E --&gt; F[Saves file]\n    F --&gt; G[User confirms]\n    G --&gt; H[Syncs to Knowledge Base]</code></pre> <p>Detailed Steps:</p> <ol> <li>Understand SQL: The AI analyzes your query structure and business logic</li> <li>Get Context: Calls <code>prepare_sql_summary_context()</code> to retrieve:</li> <li>Existing taxonomy (domains, categories, tags)</li> <li>Similar SQL summaries for classification reference</li> <li>Generate Unique ID: Uses <code>generate_sql_summary_id()</code> based on SQL + comment</li> <li>Create Unique Name: Generates a descriptive name (max 20 characters)</li> <li>Classify Query: Assigns domain, layer1, layer2, and tags following existing patterns</li> <li>Generate YAML: Creates structured summary document</li> <li>Save File: Writes YAML to workspace using <code>write_file()</code></li> <li>User Confirmation: Shows the generated YAML and prompts for approval</li> <li>Sync to Knowledge Base: Stores in LanceDB for semantic search</li> </ol>"},{"location":"subagent/builtin_subagents/#interactive-confirmation","title":"Interactive Confirmation","text":"<p>After generation, you'll see:</p> <pre><code>==========================================================\nGenerated Reference SQL YAML\nFile: /path/to/sql_summary.yml\n==========================================================\n[YAML content with syntax highlighting]\n\n  SYNC TO KNOWLEDGE BASE?\n\n  1. Yes - Save to Knowledge Base\n  2. No - Keep file only\n\nPlease enter your choice: [1/2]\n</code></pre>"},{"location":"subagent/builtin_subagents/#configuration_1","title":"Configuration","text":""},{"location":"subagent/builtin_subagents/#agent-configuration","title":"Agent Configuration","text":"<p>In <code>agent.yml</code>:</p> <pre><code>agentic_nodes:\n  gen_sql_summary:\n    model: deepseek                        # LLM model for analysis\n    system_prompt: gen_sql_summary         # Prompt template\n    prompt_version: \"1.0\"\n    tools: generation_tools.prepare_sql_summary_context, generation_tools.generate_sql_summary_id, filesystem_tools.write_file\n    hooks: generation_hooks                # Enable confirmation workflow\n    workspace_root: /path/to/reference_sql   # Directory to save YAML files\n    agent_description: \"reference SQL analysis assistant\"\n</code></pre>"},{"location":"subagent/builtin_subagents/#key-configuration-options","title":"Key Configuration Options","text":"Parameter Description Example <code>model</code> LLM model for SQL analysis <code>deepseek</code>, <code>claude</code>, <code>openai</code>, <code>kimi</code> <code>workspace_root</code> Directory for SQL summary YAML files <code>/Users/you/.datus/data/reference_sql</code> <code>tools</code> Required tools for the workflow See tools section below <code>hooks</code> Enable interactive confirmation <code>generation_hooks</code>"},{"location":"subagent/builtin_subagents/#yaml-structure","title":"YAML Structure","text":"<p>The generated SQL summary follows this structure:</p> <pre><code>id: \"abc123def456...\"                      # Auto-generated MD5 hash\nname: \"Revenue by Region\"                  # Descriptive name (max 20 chars)\nsql: |                                     # Complete SQL query\n  SELECT\n    region,\n    SUM(revenue) as total_revenue\n  FROM sales\n  GROUP BY region\ncomment: \"Calculate total revenue grouped by region\"\nsummary: \"This query aggregates total revenue from the sales table, grouping results by geographic region. It uses SUM aggregation to calculate revenue totals for each region.\"\nfilepath: \"/Users/you/.datus/data/reference_sql/revenue_by_region.yml\"\ndomain: \"Sales\"                            # Business domain\nlayer1: \"Reporting\"                        # Primary category\nlayer2: \"Revenue Analysis\"                 # Secondary category\ntags: \"revenue, region, aggregation\"       # Comma-separated tags\n</code></pre>"},{"location":"subagent/builtin_subagents/#field-descriptions","title":"Field Descriptions","text":"Field Required Description Example <code>id</code> Yes Unique hash (auto-generated) <code>abc123def456...</code> <code>name</code> Yes Short descriptive name (max 20 chars) <code>Revenue by Region</code> <code>sql</code> Yes Complete SQL query <code>SELECT ...</code> <code>comment</code> Yes Brief one-line description User's message or generated summary <code>summary</code> Yes Detailed explanation (for search) Comprehensive query description <code>filepath</code> Yes Actual file path <code>/path/to/file.yml</code> <code>domain</code> Yes Business domain <code>Sales</code>, <code>Marketing</code>, <code>Finance</code> <code>layer1</code> Yes Primary category <code>Reporting</code>, <code>Analytics</code>, <code>ETL</code> <code>layer2</code> Yes Secondary category <code>Revenue Analysis</code>, <code>Customer Insights</code> <code>tags</code> Optional Comma-separated keywords <code>revenue, region, aggregation</code>"},{"location":"subagent/builtin_subagents/#gen_semantic_model","title":"gen_semantic_model","text":""},{"location":"subagent/builtin_subagents/#overview_2","title":"Overview","text":"<p>The semantic model generation feature helps you create MetricFlow semantic models from database tables through an AI-powered assistant. The assistant analyzes your table structure and generates comprehensive YAML configuration files that define metrics, dimensions, and relationships.</p>"},{"location":"subagent/builtin_subagents/#what-is-a-semantic-model","title":"What is a Semantic Model?","text":"<p>A semantic model is a YAML configuration that defines:</p> <ul> <li>Measures: Metrics and aggregations (SUM, COUNT, AVERAGE, etc.)</li> <li>Dimensions: Categorical and time-based attributes</li> <li>Identifiers: Primary and foreign keys for relationships</li> <li>Data Source: Connection to your database table</li> </ul>"},{"location":"subagent/builtin_subagents/#quick-start_1","title":"Quick Start","text":"<p>Start Datus CLI with <code>datus --namespace &lt;namespace&gt;</code>, and begin with a subagent command:</p> <pre><code>/gen_semantic_model generate a semantic model for table &lt;table_name&gt;\n</code></pre>"},{"location":"subagent/builtin_subagents/#how-it-works","title":"How It Works","text":""},{"location":"subagent/builtin_subagents/#interactive-generation","title":"Interactive Generation","text":"<p>When you request a semantic model, the AI assistant:</p> <ol> <li>Retrieves your table's DDL (structure)</li> <li>Checks if a semantic model already exists</li> <li>Generates a comprehensive YAML file</li> <li>Validates the configuration using MetricFlow</li> <li>Prompts you to save it to the Knowledge Base</li> </ol>"},{"location":"subagent/builtin_subagents/#generation-workflow_1","title":"Generation Workflow","text":"<pre><code>graph LR\n    A[User Request] --&gt; B[DDL Analysis]\n    B --&gt; C[YAML Generation]\n    C --&gt; D[Validation]\n    D --&gt; E[User Confirmation]\n    E --&gt; F[Storage]</code></pre>"},{"location":"subagent/builtin_subagents/#interactive-confirmation_1","title":"Interactive Confirmation","text":"<p>After generating the semantic model, you'll see:</p> <pre><code>=============================================================\nGenerated YAML: table_name.yml\nPath: /path/to/file.yml\n=============================================================\n[YAML content with syntax highlighting]\n\nSYNC TO KNOWLEDGE BASE?\n\n1. Yes - Save to Knowledge Base\n2. No - Keep file only\n\nPlease enter your choice: [1/2]\n</code></pre> <p>Options:</p> <ul> <li>Option 1: Saves the semantic model to your Knowledge Base (RAG storage) for AI-powered queries</li> <li>Option 2: Keeps the YAML file only without syncing to the Knowledge Base</li> </ul>"},{"location":"subagent/builtin_subagents/#configuration_2","title":"Configuration","text":""},{"location":"subagent/builtin_subagents/#agent-configuration_1","title":"Agent Configuration","text":"<p>In <code>agent.yml</code>, configure the semantic model generation node:</p> <pre><code>agentic_nodes:\n  gen_semantic_model:\n    model: claude                    # LLM model to use\n    system_prompt: gen_semantic_model\n    prompt_version: \"1.0\"\n    tools: db_tools.*, generation_tools.*, filesystem_tools.*\n    hooks: generation_hooks          # Enables user confirmation workflow\n    mcp: metricflow_mcp             # MetricFlow validation server\n    workspace_root: /path/to/semantic_models\n    agent_description: \"Semantic model generation assistant\"\n    rules:\n      - Use get_table_ddl tool to get complete table DDL\n      - Generate comprehensive semantic models\n      - Validate using metricflow_mcp\n</code></pre>"},{"location":"subagent/builtin_subagents/#key-configuration-options_1","title":"Key Configuration Options","text":"Parameter Description Example <code>model</code> LLM model for generation <code>claude</code>, <code>deepseek</code> (claude is recommended) <code>workspace_root</code> Directory to save YAML files <code>/Users/you/.datus/data/semantic_models</code> <code>tools</code> Available tools for the assistant <code>db_tools.*</code>, <code>filesystem_tools.*</code> <code>hooks</code> Enable user confirmation <code>generation_hooks</code> <code>mcp</code> MetricFlow validation server <code>metricflow_mcp</code>"},{"location":"subagent/builtin_subagents/#semantic-model-structure","title":"Semantic Model Structure","text":""},{"location":"subagent/builtin_subagents/#basic-template","title":"Basic Template","text":"<pre><code>data_source:\n  name: table_name                    # Required: lowercase with underscores\n  description: \"Table description\"\n\n  sql_table: schema.table_name        # For databases with schemas\n  # OR\n  sql_query: |                        # For custom queries\n    SELECT * FROM table_name\n\n  measures:\n    - name: total_amount              # Required\n      agg: SUM                        # Required: SUM|COUNT|AVERAGE|etc.\n      expr: amount_column             # Column or SQL expression\n      create_metric: true             # Auto-create queryable metric\n      description: \"Total transaction amount\"\n\n  dimensions:\n    - name: created_date\n      type: TIME                      # Required: TIME|CATEGORICAL\n      type_params:\n        is_primary: true              # One primary time dimension required\n        time_granularity: DAY         # Required for TIME: DAY|WEEK|MONTH|etc.\n\n    - name: status\n      type: CATEGORICAL\n      description: \"Order status\"\n\n  identifiers:\n    - name: order_id\n      type: PRIMARY                   # PRIMARY|FOREIGN|UNIQUE|NATURAL\n      expr: order_id\n\n    - name: customer\n      type: FOREIGN\n      expr: customer_id\n</code></pre>"},{"location":"subagent/builtin_subagents/#summary","title":"Summary","text":"<p>The semantic model generation feature provides:</p> <ul> <li>\u2705 Automated YAML generation from table DDL</li> <li>\u2705 Interactive validation and error fixing</li> <li>\u2705 User confirmation before storage</li> <li>\u2705 Knowledge Base integration</li> <li>\u2705 Duplicate prevention</li> <li>\u2705 MetricFlow compatibility</li> </ul>"},{"location":"subagent/builtin_subagents/#gen_metrics","title":"gen_metrics","text":""},{"location":"subagent/builtin_subagents/#overview_3","title":"Overview","text":"<p>The metrics generation feature helps you convert SQL queries into reusable MetricFlow metric definitions. Using an AI assistant, you can analyze SQL business logic and automatically generate standardized YAML metric configurations that can be queried consistently across your organization.</p>"},{"location":"subagent/builtin_subagents/#what-is-a-metric","title":"What is a Metric?","text":"<p>A metric is a reusable business calculation built on top of semantic models. Metrics provide:</p> <ul> <li>Consistent Business Logic: One definition, used everywhere</li> <li>Type Safety: Validated structure and measure references</li> <li>Metadata: Display names, formats, business context</li> <li>Composability: Build complex metrics from simpler ones</li> </ul> <p>Example: Instead of writing <code>SELECT SUM(revenue) / COUNT(DISTINCT customer_id)</code> repeatedly, define an <code>avg_customer_revenue</code> metric once.</p>"},{"location":"subagent/builtin_subagents/#quick-start_2","title":"Quick Start","text":"<p>Start Datus CLI with <code>datus --namespace &lt;namespace&gt;</code>, and use the metrics generation subagent:</p> <pre><code>/gen_metrics Generate a metric from this SQL: SELECT SUM(amount) FROM transactions, the corresponding question is total amount of all transactions\n</code></pre>"},{"location":"subagent/builtin_subagents/#how-it-works_1","title":"How It Works","text":""},{"location":"subagent/builtin_subagents/#generation-workflow_2","title":"Generation Workflow","text":"<pre><code>graph LR\n    A[User provides SQL and question] --&gt; B[Agent analyzes logic]\n    B --&gt; C[Finds semantic model]\n    C --&gt; D[Reads measures]\n    D --&gt; E[Checks for duplicates]\n    E --&gt; F[Generates metric YAML]\n    F --&gt; G[Appends to file]\n    G --&gt; H[Validates]\n    H --&gt; I[User confirms]\n    I --&gt; J[Syncs to Knowledge Base]</code></pre>"},{"location":"subagent/builtin_subagents/#important-limitations","title":"Important Limitations","text":"<p>\u26a0\ufe0f Single Table Queries Only</p> <p>The current version only supports generating metrics from single-table SQL queries. Multi-table JOINs are not supported.</p> <p>Supported: <pre><code>SELECT SUM(revenue) FROM transactions WHERE status = 'completed'\nSELECT COUNT(DISTINCT customer_id) / COUNT(*) FROM orders\n</code></pre></p> <p>Not Supported: <pre><code>SELECT SUM(o.amount)\nFROM orders o\nJOIN customers c ON o.customer_id = c.id  -- \u274c JOIN not supported\n</code></pre></p>"},{"location":"subagent/builtin_subagents/#interactive-confirmation_2","title":"Interactive Confirmation","text":"<p>After generation, you'll see:</p> <pre><code>==========================================================\nGenerated YAML: transactions.yml\nPath: /Users/you/.datus/data/semantic_models/transactions.yml\n==========================================================\n[YAML content with syntax highlighting showing the new metric]\n\n  SYNC TO KNOWLEDGE BASE?\n\n  1. Yes - Save to Knowledge Base\n  2. No - Keep file only\n\nPlease enter your choice: [1/2]\n</code></pre> <p>Options: - Option 1: Syncs the metric to your Knowledge Base for AI-powered semantic search - Option 2: Keeps the YAML file only without syncing to the Knowledge Base</p>"},{"location":"subagent/builtin_subagents/#configuration_3","title":"Configuration","text":""},{"location":"subagent/builtin_subagents/#agent-configuration_2","title":"Agent Configuration","text":"<p>In <code>agent.yml</code>, configure the metrics generation node:</p> <pre><code>agentic_nodes:\n  gen_metrics:\n    model: claude                          # LLM model for metric generation\n    system_prompt: gen_metrics             # Prompt template name\n    prompt_version: \"1.0\"                  # Template version\n    tools: generation_tools.*, filesystem_tools.*\n    hooks: generation_hooks                # Enable user confirmation workflow\n    mcp: metricflow_mcp                    # MetricFlow validation server\n    max_turns: 40                          # Max conversation turns\n    workspace_root: /path/to/semantic_models\n    agent_description: \"Metric definition generation assistant\"\n    rules:\n      - Analyze user-provided SQL queries to generate MetricFlow metrics\n      - Use list_allowed_directories to find existing semantic model files\n      - Use read_file to read semantic model and understand measures\n      - Use check_metric_exists tool to avoid duplicate generation\n      - Use edit_file to append metrics (DO NOT use write_file)\n      - Use mf validate-configs to validate configurations\n      - After validation, call end_generation to trigger confirmation\n</code></pre>"},{"location":"subagent/builtin_subagents/#key-configuration-options_2","title":"Key Configuration Options","text":"Parameter Description Example <code>model</code> LLM model for generation <code>claude</code>, <code>openai</code>, <code>deepseek</code> (claude is recommended) <code>workspace_root</code> Directory containing semantic model YAML files <code>/Users/you/.datus/data/semantic_models</code> <code>tools</code> Available tools (generation + filesystem) <code>generation_tools.*, filesystem_tools.*</code> <code>hooks</code> Enable interactive confirmation workflow <code>generation_hooks</code> <code>mcp</code> MetricFlow validation server <code>metricflow_mcp</code> <code>max_turns</code> Max conversation turns for complex queries <code>40</code>"},{"location":"subagent/builtin_subagents/#usage-examples","title":"Usage Examples","text":""},{"location":"subagent/builtin_subagents/#example-1-simple-aggregation","title":"Example 1: Simple Aggregation","text":"<p>User Input: <pre><code>/gen_metrics Generate a metric for total order count\n</code></pre></p> <p>Agent Actions: 1. Finds <code>orders.yml</code> semantic model 2. Reads file to discover <code>order_count</code> measure 3. Generates MEASURE_PROXY metric:</p> <pre><code>---\nmetric:\n  name: total_orders\n  description: Total number of orders\n  type: measure_proxy\n  type_params:\n    measure: order_count\n  locked_metadata:\n    display_name: \"Total Orders\"\n    increase_is_good: true\n</code></pre>"},{"location":"subagent/builtin_subagents/#example-2-conversion-rate","title":"Example 2: Conversion Rate","text":"<p>User Input: <pre><code>/gen_metrics Create a metric from this SQL:\nSELECT\n  COUNT(DISTINCT CASE WHEN status = 'completed' THEN order_id END) /\n  COUNT(DISTINCT order_id) AS completion_rate\nFROM orders\n</code></pre></p> <p>Agent Actions: 1. Analyzes SQL logic (ratio with conditional counting) 2. Finds <code>orders.yml</code> and reads measures 3. Generates RATIO metric with constraint:</p> <pre><code>---\nmetric:\n  name: order_completion_rate\n  description: Percentage of orders that reached completed status\n  type: ratio\n  type_params:\n    numerator:\n      name: order_count\n      constraint: status = 'completed'\n    denominator: order_count\n  locked_metadata:\n    display_name: \"Order Completion Rate\"\n    value_format: \".2%\"\n    increase_is_good: true\n</code></pre>"},{"location":"subagent/builtin_subagents/#example-3-complex-calculation","title":"Example 3: Complex Calculation","text":"<p>User Input: <pre><code>/gen_metrics Generate average basket size metric:\nSELECT SUM(total_amount) / COUNT(DISTINCT order_id)\nFROM order_items\n</code></pre></p> <p>Agent Actions: 1. Locates <code>order_items.yml</code> 2. Identifies this as a RATIO (average) 3. Generates metric:</p> <pre><code>---\nmetric:\n  name: avg_basket_size\n  description: Average order value (basket size)\n  type: ratio\n  type_params:\n    numerator: total_amount\n    denominator: order_count\n  locked_metadata:\n    display_name: \"Average Basket Size\"\n    value_format: \"$$,.2f\"\n    unit: \"dollars\"\n    increase_is_good: true\n</code></pre>"},{"location":"subagent/builtin_subagents/#how-metrics-are-stored","title":"How Metrics Are Stored","text":""},{"location":"subagent/builtin_subagents/#file-organization","title":"File Organization","text":"<p>Metrics are appended to existing semantic model files using the YAML document separator <code>---</code>:</p> <pre><code># Existing semantic model\ndata_source:\n  name: transactions\n  sql_table: transactions\n  measures:\n    - name: revenue\n      agg: SUM\n      expr: amount\n  dimensions:\n    - name: transaction_date\n      type: TIME\n\n---\n# First metric (appended)\nmetric:\n  name: total_revenue\n  type: measure_proxy\n  type_params:\n    measure: revenue\n\n---\n# Second metric (appended)\nmetric:\n  name: avg_transaction_value\n  type: ratio\n  type_params:\n    numerator: revenue\n    denominator: transaction_count\n</code></pre> <p>Why append instead of separate files? - Keeps related metrics close to their semantic model - Easier maintenance and validation - MetricFlow can validate all definitions together</p>"},{"location":"subagent/builtin_subagents/#knowledge-base-storage","title":"Knowledge Base Storage","text":"<p>When you choose \"1. Yes - Save to Knowledge Base\", the metric is stored in a Vector Database with:</p> <ol> <li>Metadata: Name, description, type, domain/layer classification</li> <li>LLM Text: Natural language representation for semantic search</li> <li>References: Associated semantic model name</li> <li>Timestamp: Creation date</li> </ol>"},{"location":"subagent/builtin_subagents/#summary_1","title":"Summary","text":"<p>The metrics generation feature provides:</p> <ul> <li>\u2705 SQL-to-Metric Conversion: Analyze SQL queries and generate MetricFlow metrics</li> <li>\u2705 Intelligent Type Detection: Automatically selects the right metric type</li> <li>\u2705 Duplicate Prevention: Checks for existing metrics before generation</li> <li>\u2705 Validation: MetricFlow validation ensures correctness</li> <li>\u2705 Interactive Workflow: Review and approve before syncing</li> <li>\u2705 Knowledge Base Integration: Semantic search for metric discovery</li> <li>\u2705 File Management: Appends to existing semantic model files safely</li> </ul>"},{"location":"subagent/builtin_subagents/#summary_2","title":"Summary","text":"Subagent Purpose Output Stored In Highlights <code>gen_sql_summary</code> Summarize and classify SQL queries YAML (SQL summary) <code>/data/reference_sql</code> Taxonomy-based classification <code>gen_semantic_model</code> Generate semantic model from tables YAML (semantic model) <code>/data/semantic_models</code> DDL \u2192 MetricFlow compatible model <code>gen_metrics</code> Generate metrics from SQL YAML (metric) <code>/data/semantic_models</code> SQL \u2192 MetricFlow metric <p>Together, these subagents automate the data engineering knowledge pipeline \u2014 from query understanding \u2192 model definition \u2192 metric generation \u2192 searchable Knowledge Base.</p>"},{"location":"subagent/customized_subagent/","title":"Introduction","text":"<p>The <code>.subagent</code> command is a core feature provided by Datus CLI for managing sub\u2011agents. This document focuses on how to use <code>.subagent</code> to create, view, update, or delete sub\u2011agents, and explains its subcommands in detail. The <code>SubAgentBootstrapper</code> is a functional module within <code>.subagent</code> that builds or simulates building a scoped knowledge base for a specific sub\u2011agent. And the <code>.subagent</code> command allows full lifecycle management of sub\u2011agents and can trigger knowledge base construction.</p>"},{"location":"subagent/customized_subagent/#command-overview","title":"Command Overview","text":"<p>The <code>.subagent</code> command supports the following subcommands:</p> <ul> <li>add \u2014 Launches an interactive wizard to add a new sub\u2011agent.</li> <li>list \u2014 Lists all configured sub\u2011agents.</li> <li>remove  \u2014 Removes a specified sub\u2011agent from configuration. <li>update  \u2014 Launches an interactive wizard to update an existing sub\u2011agent. <li>bootstrap  [--components ] [--plan] \u2014 Builds or simulates building a scoped knowledge base for a given sub\u2011agent. <p>If no parameters or incorrect ones are provided, the command will automatically display a help message.</p> <p>Note: After <code>add</code> or <code>update</code>, the system automatically builds the scoped knowledge base for the sub\u2011agent.</p>"},{"location":"subagent/customized_subagent/#subcommand-details","title":"Subcommand Details","text":""},{"location":"subagent/customized_subagent/#add-create-a-new-subagent","title":"add \u2014 Create a New Sub\u2011Agent","text":"<p>Run:</p> <pre><code>.subagent add\n</code></pre> <p>This launches an interactive wizard prompting for basic information such as the sub\u2011agent\u2019s name (system_prompt), description, tools, rules, and whether it requires a scoped context. Once completed, the configuration file is saved to the project, and optionally, a corresponding prompt template file is generated.</p> <p>If the creation is canceled mid\u2011process, a cancellation message appears, and no configuration is saved.</p> <p></p> <p>\ud83d\udca1 Tip: During step three (ScopedContext configuration), you can use Tab for hierarchical completion but preview is unavailable. Press F2 to preview.</p>"},{"location":"subagent/customized_subagent/#list-list-all-subagents","title":"list \u2014 List All Sub\u2011Agents","text":"<p>Run:</p> <pre><code>.subagent list\n</code></pre> <p>The CLI displays all configured sub\u2011agents in a table containing:</p> <ul> <li>Name (system_prompt)</li> <li>Scoped Context: e.g., tables, metrics, SQL lists (empty if none)</li> <li>Scoped KB Path: shows the path to the scoped knowledge base directory (\"\u2014\" if not available)</li> <li>Tools: list of tools used by the sub\u2011agent</li> <li>MCP: multi\u2011component process configuration</li> <li>Rules: listed in Markdown format</li> </ul> <p></p> <p>If no sub\u2011agents exist in current namespace, the CLI displays <code>No configured sub\u2011agents</code>.</p>"},{"location":"subagent/customized_subagent/#remove-delete-a-subagent","title":"remove \u2014 Delete a Sub\u2011Agent","text":"<p>Format:</p> <pre><code>.subagent remove &lt;agent_name&gt;\n</code></pre> <p>Removes the configuration for the specified sub\u2011agent. If not found, an error message is shown. Upon successful removal, a confirmation message appears.</p>"},{"location":"subagent/customized_subagent/#update-update-an-existing-subagent","title":"update \u2014 Update an Existing Sub\u2011Agent","text":"<p>Format:</p> <pre><code>.subagent update &lt;agent_name&gt;\n</code></pre> <p></p> <p>The system first checks if the target sub\u2011agent exists. If it does, the wizard launches with existing configuration pre\u2011filled. After updates are confirmed, the configuration is saved. If the changes affect the scoped context, the CLI automatically triggers <code>bootstrap</code> to rebuild the knowledge base.</p>"},{"location":"subagent/customized_subagent/#bootstrap-build-a-scoped-knowledge-base","title":"bootstrap \u2014 Build a Scoped Knowledge Base","text":"<p>This command builds or updates a sub\u2011agent\u2019s scoped knowledge base (Scoped KB). It supports component selection and plan simulation.</p>"},{"location":"subagent/customized_subagent/#basic-usage","title":"Basic Usage","text":"<pre><code>.subagent bootstrap &lt;agent_name&gt;\n</code></pre> <p>The command uses <code>argparse.ArgumentParser</code> with <code>prog</code> and <code>description</code> parameters to define program name and description. Running <code>.subagent bootstrap -h</code> displays detailed help information.</p>"},{"location":"subagent/customized_subagent/#parameters","title":"Parameters","text":"<ul> <li><code>&lt;agent_name&gt;</code> \u2014 Required. Specifies which sub\u2011agent to build the KB for.</li> <li><code>--components &lt;list&gt;</code> \u2014 Optional. Comma\u2011separated list of components to build (case\u2011insensitive). Example:</li> </ul> <pre><code>--components metadata,metrics\n</code></pre> <p>If omitted, all supported components are built. Invalid components trigger an \u201cunsupported component\u201d message. * <code>--plan</code> \u2014 Optional flag. Runs in plan mode, which calculates and displays import plans but does not write or modify files.</p>"},{"location":"subagent/customized_subagent/#workflow","title":"Workflow","text":"<ol> <li>Validate and locate sub\u2011agent \u2014 Parses parameters and checks if the specified sub\u2011agent exists.</li> <li>Normalize component list \u2014 Converts to lowercase and validates against supported components (e.g., <code>metadata</code>, <code>metrics</code>, <code>reference_sql</code>). Invalid components are rejected with a supported list displayed.</li> <li> <p>Execute or simulate build</p> </li> <li> <p>Without <code>--plan</code>: Executes an overwrite strategy, importing database metadata, metrics, or reference SQL, generating a new scoped KB directory, and updating the config.</p> </li> <li>With <code>--plan</code>: Runs simulation only, calculating the data to be imported without writing files.</li> <li> <p>Display results \u2014 Outputs a summary table (<code>Scoped KB Bootstrap Summary</code>) with columns:</p> </li> <li> <p>Component | Status | Message</p> </li> <li>Status options: <code>SUCCESS</code>, <code>ERROR</code>, <code>SKIPPED</code>, <code>PLAN</code></li> <li>Shows scoped KB path \u2014 \u201cSimulated scoped directory\u201d (plan mode) or \u201cScoped directory\u201d (execution mode).</li> <li>Show details \u2014 For missing or invalid records, displays JSON details under <code>missing</code> and <code>invalid</code> fields.</li> <li>Save configuration \u2014 On success (non\u2011plan mode), updates the scoped KB path in the sub\u2011agent\u2019s config. Errors during save will be reported; successful saves refresh in\u2011memory configurations.</li> </ol>"},{"location":"subagent/customized_subagent/#examples","title":"Examples","text":"<p>Build all components:</p> <pre><code>.subagent bootstrap my_agent\n</code></pre> <p>Simulate metadata and metrics only:</p> <pre><code>.subagent bootstrap my_agent --components metadata,metrics --plan\n</code></pre> <p>Build reference SQL only:</p> <pre><code>.subagent bootstrap my_agent --components reference_sql\n</code></pre>"},{"location":"subagent/customized_subagent/#notes","title":"Notes","text":"<ul> <li>Name consistency: The sub\u2011agent name (<code>system_prompt</code>) uniquely identifies its configuration. Ensure consistent naming for <code>add</code>, <code>update</code>, <code>remove</code>, and <code>bootstrap</code> commands.</li> <li>Supported components: Must be within predefined components (<code>metadata</code>, <code>metrics</code>, <code>reference_sql</code>). Check available options with <code>.subagent bootstrap -h</code>.</li> <li>Simulation mode (<code>--plan</code>): Used for risk evaluation; it performs no disk write. Omit this flag to perform actual construction.</li> <li>Automatic rebuild: Updating a sub\u2011agent that changes scoped context triggers an automatic rebuild to keep configurations and KBs consistent.</li> </ul>"},{"location":"subagent/customized_subagent/#rebuilding-subagent-knowledge-bases-in-agent","title":"Rebuilding Sub\u2011Agent Knowledge Bases in Agent","text":"<p>When running:</p> <pre><code>python -m datus.main bootstrap-kb\n</code></pre> <p>All sub\u2011agents under the current namespace with scoped context configuration will rebuild their knowledge bases. The content built depends on the <code>--component</code> parameter.</p>"},{"location":"subagent/gen_metrics/","title":"Metrics Generation Guide","text":""},{"location":"subagent/gen_metrics/#overview","title":"Overview","text":"<p>The metrics generation feature helps you convert SQL queries into reusable MetricFlow metric definitions. Using an AI assistant, you can analyze SQL business logic and automatically generate standardized YAML metric configurations that can be queried consistently across your organization.</p>"},{"location":"subagent/gen_metrics/#what-is-a-metric","title":"What is a Metric?","text":"<p>A metric is a reusable business calculation built on top of semantic models. Metrics provide: - Consistent Business Logic: One definition, used everywhere - Type Safety: Validated structure and measure references - Metadata: Display names, formats, business context - Composability: Build complex metrics from simpler ones</p> <p>Example: Instead of writing <code>SELECT SUM(revenue) / COUNT(DISTINCT customer_id)</code> repeatedly, define an <code>avg_customer_revenue</code> metric once.</p>"},{"location":"subagent/gen_metrics/#important-limitations","title":"Important Limitations","text":"<p>\u26a0\ufe0f Single Table Queries Only</p> <p>The current version only supports generating metrics from single-table SQL queries. Multi-table JOINs are not supported.</p> <p>Supported: <pre><code>SELECT SUM(revenue) FROM transactions WHERE status = 'completed'\nSELECT COUNT(DISTINCT customer_id) / COUNT(*) FROM orders\n</code></pre></p> <p>Not Supported: <pre><code>SELECT SUM(o.amount)\nFROM orders o\nJOIN customers c ON o.customer_id = c.id  -- \u274c JOIN not supported\n</code></pre></p>"},{"location":"subagent/gen_metrics/#how-it-works","title":"How It Works","text":"<p>Start Datus CLI with <code>datus --namespace &lt;namespace&gt;</code>, and use the metrics generation subagent:</p> <pre><code>/gen_metrics Generate a metric from this SQL: SELECT SUM(amount) FROM transactions, the coresponding question is total amount of all transactions\n</code></pre>"},{"location":"subagent/gen_metrics/#generation-workflow","title":"Generation Workflow","text":"<pre><code>User provides SQL and question \u2192 Agent analyzes logic \u2192 Finds semantic model \u2192 Reads measures \u2192\nChecks for duplicates \u2192 Generates metric YAML \u2192 Appends to file \u2192 Validates \u2192\nUser confirms \u2192 Syncs to Knowledge Base\n</code></pre>"},{"location":"subagent/gen_metrics/#interactive-confirmation","title":"Interactive Confirmation","text":"<p>After generation, you'll see:</p> <pre><code>==========================================================\nGenerated YAML: transactions.yml\nPath: /Users/you/.datus/data/semantic_models/transactions.yml\n==========================================================\n[YAML content with syntax highlighting showing the new metric]\n\n  SYNC TO KNOWLEDGE BASE?\n\n  1. Yes - Save to Knowledge Base\n  2. No - Keep file only\n\nPlease enter your choice: [1/2]\n</code></pre> <p>Options: - Option 1: Syncs the metric to your Knowledge Base for AI-powered semantic search - Option 2: Keeps the YAML file only without syncing to the Knowledge Base</p>"},{"location":"subagent/gen_metrics/#configuration","title":"Configuration","text":""},{"location":"subagent/gen_metrics/#agent-configuration","title":"Agent Configuration","text":"<p>In <code>agent.yml</code>, configure the metrics generation node:</p> <pre><code>agentic_nodes:\n  gen_metrics:\n    model: claude                          # LLM model for metric generation\n    system_prompt: gen_metrics             # Prompt template name\n    prompt_version: \"1.0\"                  # Template version\n    tools: generation_tools.*, filesystem_tools.*\n    hooks: generation_hooks                # Enable user confirmation workflow\n    mcp: metricflow_mcp                    # MetricFlow validation server\n    max_turns: 40                          # Max conversation turns\n    workspace_root: /path/to/semantic_models\n    agent_description: \"Metric definition generation assistant\"\n    rules:\n      - Analyze user-provided SQL queries to generate MetricFlow metrics\n      - Use list_allowed_directories to find existing semantic model files\n      - Use read_file to read semantic model and understand measures\n      - Use check_metric_exists tool to avoid duplicate generation\n      - Use edit_file to append metrics (DO NOT use write_file)\n      - Use mf validate-configs to validate configurations\n      - After validation, call end_generation to trigger confirmation\n</code></pre>"},{"location":"subagent/gen_metrics/#key-configuration-options","title":"Key Configuration Options","text":"Parameter Description Example <code>model</code> LLM model for generation <code>claude</code>, <code>openai</code>, <code>deepseek</code>, claude is recommended <code>workspace_root</code> Directory containing semantic model YAML files <code>/Users/you/.datus/data/semantic_models</code> <code>tools</code> Available tools (generation + filesystem) <code>generation_tools.*, filesystem_tools.*</code> <code>hooks</code> Enable interactive confirmation workflow <code>generation_hooks</code> <code>mcp</code> MetricFlow validation server <code>metricflow_mcp</code> <code>max_turns</code> Max conversation turns for complex queries <code>40</code>"},{"location":"subagent/gen_metrics/#usage-examples","title":"Usage Examples","text":""},{"location":"subagent/gen_metrics/#example-1-simple-aggregation","title":"Example 1: Simple Aggregation","text":"<p>User Input: <pre><code>/gen_metrics Generate a metric for total order count\n</code></pre></p> <p>Agent Actions: 1. Finds <code>orders.yml</code> semantic model 2. Reads file to discover <code>order_count</code> measure 3. Generates MEASURE_PROXY metric:</p> <pre><code>---\nmetric:\n  name: total_orders\n  description: Total number of orders\n  type: measure_proxy\n  type_params:\n    measure: order_count\n  locked_metadata:\n    display_name: \"Total Orders\"\n    increase_is_good: true\n</code></pre>"},{"location":"subagent/gen_metrics/#example-2-conversion-rate","title":"Example 2: Conversion Rate","text":"<p>User Input: <pre><code>/gen_metrics Create a metric from this SQL:\nSELECT\n  COUNT(DISTINCT CASE WHEN status = 'completed' THEN order_id END) /\n  COUNT(DISTINCT order_id) AS completion_rate\nFROM orders\n</code></pre></p> <p>Agent Actions: 1. Analyzes SQL logic (ratio with conditional counting) 2. Finds <code>orders.yml</code> and reads measures 3. Generates RATIO metric with constraint:</p> <pre><code>---\nmetric:\n  name: order_completion_rate\n  description: Percentage of orders that reached completed status\n  type: ratio\n  type_params:\n    numerator:\n      name: order_count\n      constraint: status = 'completed'\n    denominator: order_count\n  locked_metadata:\n    display_name: \"Order Completion Rate\"\n    value_format: \".2%\"\n    increase_is_good: true\n</code></pre>"},{"location":"subagent/gen_metrics/#example-3-complex-calculation","title":"Example 3: Complex Calculation","text":"<p>User Input: <pre><code>/gen_metrics Generate average basket size metric:\nSELECT SUM(total_amount) / COUNT(DISTINCT order_id)\nFROM order_items\n</code></pre></p> <p>Agent Actions: 1. Locates <code>order_items.yml</code> 2. Identifies this as a RATIO (average) 3. Generates metric:</p> <pre><code>---\nmetric:\n  name: avg_basket_size\n  description: Average order value (basket size)\n  type: ratio\n  type_params:\n    numerator: total_amount\n    denominator: order_count\n  locked_metadata:\n    display_name: \"Average Basket Size\"\n    value_format: \"$$,.2f\"\n    unit: \"dollars\"\n    increase_is_good: true\n</code></pre>"},{"location":"subagent/gen_metrics/#how-metrics-are-stored","title":"How Metrics Are Stored","text":""},{"location":"subagent/gen_metrics/#file-organization","title":"File Organization","text":"<p>Metrics are appended to existing semantic model files using the YAML document separator <code>---</code>:</p> <pre><code># Existing semantic model\ndata_source:\n  name: transactions\n  sql_table: transactions\n  measures:\n    - name: revenue\n      agg: SUM\n      expr: amount\n  dimensions:\n    - name: transaction_date\n      type: TIME\n\n---\n# First metric (appended)\nmetric:\n  name: total_revenue\n  type: measure_proxy\n  type_params:\n    measure: revenue\n\n---\n# Second metric (appended)\nmetric:\n  name: avg_transaction_value\n  type: ratio\n  type_params:\n    numerator: revenue\n    denominator: transaction_count\n</code></pre> <p>Why append instead of separate files? - Keeps related metrics close to their semantic model - Easier maintenance and validation - MetricFlow can validate all definitions together</p>"},{"location":"subagent/gen_metrics/#knowledge-base-storage","title":"Knowledge Base Storage","text":"<p>When you choose \"1. Yes - Save to Knowledge Base\", the metric is stored in a Vector Database with:</p> <ol> <li>Metadata: Name, description, type, domain/layer classification</li> <li>LLM Text: Natural language representation for semantic search</li> <li>References: Associated semantic model name</li> <li>Timestamp: Creation date</li> </ol>"},{"location":"subagent/gen_metrics/#summary","title":"Summary","text":"<p>The metrics generation feature provides:</p> <p>\u2705 SQL-to-Metric Conversion: Analyze SQL queries and generate MetricFlow metrics \u2705 Intelligent Type Detection: Automatically selects the right metric type \u2705 Duplicate Prevention: Checks for existing metrics before generation \u2705 Validation: MetricFlow validation ensures correctness \u2705 Interactive Workflow: Review and approve before syncing \u2705 Knowledge Base Integration: Semantic search for metric discovery \u2705 File Management: Appends to existing semantic model files safely</p>"},{"location":"subagent/gen_semantic_model/","title":"Semantic Model Generation Guide","text":""},{"location":"subagent/gen_semantic_model/#overview","title":"Overview","text":"<p>The semantic model generation feature helps you create MetricFlow semantic models from database tables through an AI-powered assistant. The assistant analyzes your table structure and generates comprehensive YAML configuration files that define metrics, dimensions, and relationships.</p>"},{"location":"subagent/gen_semantic_model/#what-is-a-semantic-model","title":"What is a Semantic Model?","text":"<p>A semantic model is a YAML configuration that defines: - Measures: Metrics and aggregations (SUM, COUNT, AVERAGE, etc.) - Dimensions: Categorical and time-based attributes - Identifiers: Primary and foreign keys for relationships - Data Source: Connection to your database table</p>"},{"location":"subagent/gen_semantic_model/#how-it-works","title":"How It Works","text":"<p>Start Datus CLI with <code>datus --namespace &lt;namespace&gt;</code>, and begin with a subagent command:</p> <pre><code>  /gen_semantic_model generate a semantic model for table &lt;table_name&gt;\n</code></pre>"},{"location":"subagent/gen_semantic_model/#interactive-generation","title":"Interactive Generation","text":"<p>When you request a semantic model, the AI assistant: 1. Retrieves your table's DDL (structure) 2. Checks if a semantic model already exists 3. Generates a comprehensive YAML file 4. Validates the configuration using MetricFlow 5. Prompts you to save it to the Knowledge Base</p>"},{"location":"subagent/gen_semantic_model/#generation-workflow","title":"Generation Workflow","text":"<pre><code>User Request \u2192 DDL Analysis \u2192 YAML Generation \u2192 Validation \u2192 User Confirmation \u2192 Storage\n</code></pre>"},{"location":"subagent/gen_semantic_model/#user-confirmation","title":"User Confirmation","text":"<p>After generating the semantic model, you'll see:</p> <pre><code>=============================================================\nGenerated YAML: table_name.yml\nPath: /path/to/file.yml\n=============================================================\n[YAML content with syntax highlighting]\n\nSYNC TO KNOWLEDGE BASE?\n\n1. Yes - Save to Knowledge Base\n2. No - Keep file only\n\nPlease enter your choice: [1/2]\n</code></pre> <p>Options: - Option 1: Saves the semantic model to your Knowledge Base (RAG storage) for AI-powered queries - Option 2: Keeps the YAML file only without syncing to the Knowledge Base</p>"},{"location":"subagent/gen_semantic_model/#configuration","title":"Configuration","text":""},{"location":"subagent/gen_semantic_model/#agent-configuration","title":"Agent Configuration","text":"<p>In <code>agent.yml</code>, configure the semantic model generation node:</p> <pre><code>agentic_nodes:\n  gen_semantic_model:\n    model: claude                    # LLM model to use\n    system_prompt: gen_semantic_model\n    prompt_version: \"1.0\"\n    tools: db_tools.*, generation_tools.*, filesystem_tools.*\n    hooks: generation_hooks          # Enables user confirmation workflow\n    mcp: metricflow_mcp             # MetricFlow validation server\n    workspace_root: /path/to/semantic_models\n    agent_description: \"Semantic model generation assistant\"\n    rules:\n      - Use get_table_ddl tool to get complete table DDL\n      - Generate comprehensive semantic models\n      - Validate using metricflow_mcp\n</code></pre>"},{"location":"subagent/gen_semantic_model/#key-configuration-options","title":"Key Configuration Options","text":"Parameter Description Example <code>model</code> LLM model for generation <code>claude</code>, <code>deepseek</code>, claude is recommended <code>workspace_root</code> Directory to save YAML files <code>/Users/you/.datus/data/semantic_models</code> <code>tools</code> Available tools for the assistant <code>db_tools.*</code>, <code>filesystem_tools.*</code> <code>hooks</code> Enable user confirmation <code>generation_hooks</code> <code>mcp</code> MetricFlow validation server <code>metricflow_mcp</code>"},{"location":"subagent/gen_semantic_model/#semantic-model-structure","title":"Semantic Model Structure","text":""},{"location":"subagent/gen_semantic_model/#basic-template","title":"Basic Template","text":"<pre><code>data_source:\n  name: table_name                    # Required: lowercase with underscores\n  description: \"Table description\"\n\n  sql_table: schema.table_name        # For databases with schemas\n  # OR\n  sql_query: |                        # For custom queries\n    SELECT * FROM table_name\n\n  measures:\n    - name: total_amount              # Required\n      agg: SUM                        # Required: SUM|COUNT|AVERAGE|etc.\n      expr: amount_column             # Column or SQL expression\n      create_metric: true             # Auto-create queryable metric\n      description: \"Total transaction amount\"\n\n  dimensions:\n    - name: created_date\n      type: TIME                      # Required: TIME|CATEGORICAL\n      type_params:\n        is_primary: true              # One primary time dimension required\n        time_granularity: DAY         # Required for TIME: DAY|WEEK|MONTH|etc.\n\n    - name: status\n      type: CATEGORICAL\n      description: \"Order status\"\n\n  identifiers:\n    - name: order_id\n      type: PRIMARY                   # PRIMARY|FOREIGN|UNIQUE|NATURAL\n      expr: order_id\n\n    - name: customer\n      type: FOREIGN\n      expr: customer_id\n</code></pre>"},{"location":"subagent/gen_semantic_model/#summary","title":"Summary","text":"<p>The semantic model generation feature provides: - \u2713 Automated YAML generation from table DDL - \u2713 Interactive validation and error fixing - \u2713 User confirmation before storage - \u2713 Knowledge Base integration - \u2713 Duplicate prevention - \u2713 MetricFlow compatibility</p>"},{"location":"subagent/gen_sql_summary/","title":"SQL Summary Generation Guide","text":""},{"location":"subagent/gen_sql_summary/#overview","title":"Overview","text":"<p>The SQL Summary feature helps you analyze, classify, and catalog SQL queries for knowledge reuse. It automatically generates structured YAML summaries that are stored in a searchable Knowledge Base, making it easy to find and reuse similar queries in the future.</p>"},{"location":"subagent/gen_sql_summary/#what-is-a-sql-summary","title":"What is a SQL Summary?","text":"<p>A SQL summary is a structured YAML document that captures: - Query Text: The complete SQL query - Business Context: Domain, categories, and tags - Semantic Summary: Detailed explanation for vector search - Metadata: Name, comment, file path</p> <p>Use Cases: - Build a searchable SQL query library - Share and reuse proven queries across teams - Document complex query patterns - Enable semantic search: \"Find queries related to revenue analysis\"</p>"},{"location":"subagent/gen_sql_summary/#quick-start","title":"Quick Start","text":"<p>Launch the SQL summary generation subagent:</p> <pre><code>/gen_sql_summary Analyze this SQL: SELECT SUM(revenue) FROM sales GROUP BY region.(You can also add some description on this SQL)\n</code></pre>"},{"location":"subagent/gen_sql_summary/#how-it-works","title":"How It Works","text":""},{"location":"subagent/gen_sql_summary/#generation-workflow","title":"Generation Workflow","text":"<pre><code>User provides SQL + description \u2192 Agent analyzes query \u2192 Retrieves context (taxonomy + similar queries) \u2192\nGenerates unique ID \u2192 Creates YAML \u2192 Saves file \u2192 User confirms \u2192 Syncs to Knowledge Base\n</code></pre>"},{"location":"subagent/gen_sql_summary/#step-by-step-process","title":"Step-by-Step Process","text":"<ol> <li>Understand SQL: The AI analyzes your query structure and business logic</li> <li>Get Context: Calls <code>prepare_sql_summary_context()</code> to retrieve:</li> <li>Existing taxonomy (domains, categories, tags)</li> <li>Similar SQL summaries for classification reference</li> <li>Generate Unique ID: Uses <code>generate_sql_summary_id()</code> based on SQL + comment</li> <li>Create Unique Name: Generates a descriptive name (max 20 characters)</li> <li>Classify Query: Assigns domain, layer1, layer2, and tags following existing patterns</li> <li>Generate YAML: Creates structured summary document</li> <li>Save File: Writes YAML to workspace using <code>write_file()</code></li> <li>User Confirmation: Shows the generated YAML and prompts for approval</li> <li>Sync to Knowledge Base: Stores in LanceDB for semantic search</li> </ol>"},{"location":"subagent/gen_sql_summary/#interactive-confirmation","title":"Interactive Confirmation","text":"<p>After generation, you'll see:</p> <pre><code>==========================================================\nGenerated Reference SQL YAML\nFile: /path/to/sql_summary.yml\n==========================================================\n[YAML content with syntax highlighting]\n\n  SYNC TO KNOWLEDGE BASE?\n\n  1. Yes - Save to Knowledge Base\n  2. No - Keep file only\n\nPlease enter your choice: [1/2]\n</code></pre>"},{"location":"subagent/gen_sql_summary/#configuration","title":"Configuration","text":""},{"location":"subagent/gen_sql_summary/#agent-configuration","title":"Agent Configuration","text":"<p>In <code>agent.yml</code>:</p> <pre><code>agentic_nodes:\n  gen_sql_summary:\n    model: deepseek                        # LLM model for analysis\n    system_prompt: gen_sql_summary         # Prompt template\n    prompt_version: \"1.0\"\n    tools: generation_tools.prepare_sql_summary_context, generation_tools.generate_sql_summary_id, filesystem_tools.write_file\n    hooks: generation_hooks                # Enable confirmation workflow\n    workspace_root: /path/to/reference_sql   # Directory to save YAML files\n    agent_description: \"reference SQL analysis assistant\"\n</code></pre>"},{"location":"subagent/gen_sql_summary/#key-configuration-options","title":"Key Configuration Options","text":"Parameter Description Example <code>model</code> LLM model for SQL analysis <code>deepseek</code>, <code>claude</code>, <code>openai</code>, <code>kimi</code> <code>workspace_root</code> Directory for SQL summary YAML files <code>/Users/you/.datus/data/reference_sql</code> <code>tools</code> Required tools for the workflow See tools section below <code>hooks</code> Enable interactive confirmation <code>generation_hooks</code>"},{"location":"subagent/gen_sql_summary/#yaml-structure","title":"YAML Structure","text":"<p>The generated SQL summary follows this structure:</p> <pre><code>id: \"abc123def456...\"                      # Auto-generated MD5 hash\nname: \"Revenue by Region\"                  # Descriptive name (max 20 chars)\nsql: |                                     # Complete SQL query\n  SELECT\n    region,\n    SUM(revenue) as total_revenue\n  FROM sales\n  GROUP BY region\ncomment: \"Calculate total revenue grouped by region\"\nsummary: \"This query aggregates total revenue from the sales table, grouping results by geographic region. It uses SUM aggregation to calculate revenue totals for each region.\"\nfilepath: \"/Users/you/.datus/data/reference_sql/revenue_by_region.yml\"\ndomain: \"Sales\"                            # Business domain\nlayer1: \"Reporting\"                        # Primary category\nlayer2: \"Revenue Analysis\"                 # Secondary category\ntags: \"revenue, region, aggregation\"       # Comma-separated tags\n</code></pre>"},{"location":"subagent/gen_sql_summary/#field-descriptions","title":"Field Descriptions","text":"Field Required Description Example <code>id</code> Yes Unique hash (auto-generated) <code>abc123def456...</code> <code>name</code> Yes Short descriptive name (max 20 chars) <code>Revenue by Region</code> <code>sql</code> Yes Complete SQL query <code>SELECT ...</code> <code>comment</code> Yes Brief one-line description User's message or generated summary <code>summary</code> Yes Detailed explanation (for search) Comprehensive query description <code>filepath</code> Yes Actual file path <code>/path/to/file.yml</code> <code>domain</code> Yes Business domain <code>Sales</code>, <code>Marketing</code>, <code>Finance</code> <code>layer1</code> Yes Primary category <code>Reporting</code>, <code>Analytics</code>, <code>ETL</code> <code>layer2</code> Yes Secondary category <code>Revenue Analysis</code>, <code>Customer Insights</code> <code>tags</code> Optional Comma-separated keywords <code>revenue, region, aggregation</code>"},{"location":"subagent/gen_sql_summary/#summary","title":"Summary","text":"<p>The SQL Summary feature provides:</p> <p>\u2705 Automated Analysis: AI understands query structure and purpose \u2705 Smart Classification: Taxonomy-based categorization with consistency \u2705 Deduplication: Automatic hash-based duplicate detection \u2705 Semantic Search: Vector embeddings enable intelligent query discovery \u2705 Language Preservation: Maintains Chinese/English consistency \u2705 Interactive Workflow: Review and approve before syncing \u2705 Knowledge Reuse: Build searchable SQL query library</p>"},{"location":"subagent/introduction/","title":"Subagent Guide","text":""},{"location":"subagent/introduction/#overview","title":"Overview","text":"<p>Subagents are specialized AI assistants in Datus that focus on specific tasks. Unlike the default chat assistant that handles general SQL queries, subagents are optimized for particular workflows like generating semantic models, creating metrics, or analyzing SQL queries.</p>"},{"location":"subagent/introduction/#what-is-a-subagent","title":"What is a Subagent?","text":"<p>A subagent is a task-specific AI assistant with:</p> <ul> <li>Specialized System Prompts: Optimized instructions for specific tasks</li> <li>Custom Tools: Tailored toolset for the task (e.g., file operations, validation)</li> <li>Scoped Context: Optional dedicated context (tables, metrics,reference SQL) specific to this subagent</li> <li>Independent Sessions: Separate conversation history from main chat</li> <li>Task-Focused Workflow: Guided steps for completing specific objectives</li> </ul>"},{"location":"subagent/introduction/#available-subagents","title":"Available Subagents","text":""},{"location":"subagent/introduction/#1-gen_semantic_model","title":"1. <code>gen_semantic_model</code>","text":"<p>Purpose: Generate MetricFlow semantic models from database tables.</p> <p>Use Case: Convert a database table structure into a YAML semantic model definition.</p> <p>Prerequisites: This subagent relies on datus-metricflow, install it first.</p> <p>Launch Command: <pre><code>/gen_semantic_model Generate a semantic model for the transactions table\n</code></pre></p> <p>Key Features:</p> <ul> <li>Automatically fetches table DDL</li> <li>Identifies measures, dimensions, and identifiers</li> <li>Validates using MetricFlow</li> <li>Syncs to Knowledge Base</li> </ul> <p>See Also: Semantic Model Generation Guide</p>"},{"location":"subagent/introduction/#2-gen_metrics","title":"2. <code>gen_metrics</code>","text":"<p>Purpose: Convert SQL queries into reusable MetricFlow metric definitions.</p> <p>Use Case: Transform ad-hoc SQL calculations into standardized metrics.</p> <p>Prerequisites: This subagent relies on datus-metricflow, install it first.</p> <p>Launch Command: <pre><code>/gen_metrics Generate a metric from this SQL: SELECT SUM(revenue) / COUNT(DISTINCT customer_id) FROM transactions\n</code></pre></p> <p>Key Features:</p> <ul> <li>Analyzes SQL business logic</li> <li>Determines appropriate metric type (ratio, measure_proxy, etc.)</li> <li>Appends to existing semantic model files</li> <li>Checks for duplicates</li> </ul> <p>See Also: Metrics Generation Guide</p>"},{"location":"subagent/introduction/#3-gen_sql_summary","title":"3. <code>gen_sql_summary</code>","text":"<p>Purpose: Analyze and catalog SQL queries for knowledge reuse.</p> <p>Use Case: Build a searchable library of SQL queries with semantic classification.</p> <p>Launch Command: <pre><code>/gen_sql_summary Analyze this SQL: SELECT region, SUM(revenue) FROM sales GROUP BY region\n</code></pre></p> <p>Key Features:</p> <ul> <li>Generates unique ID for SQL queries</li> <li>Classifies by domain/layer/tags</li> <li>Creates detailed summaries for vector search</li> <li>Supports Chinese and English</li> </ul> <p>See Also: SQL Summary Guide</p>"},{"location":"subagent/introduction/#4-custom-subagents","title":"4. Custom Subagents","text":"<p>You can define custom subagents in <code>agent.yml</code> for organization-specific workflows.</p> <p>Example Configuration: <pre><code>agentic_nodes:\n  my_custom_agent:\n    model: claude\n    system_prompt: my_custom_prompt\n    prompt_version: \"1.0\"\n    tools: db_tools.*, context_search_tools.*\n    max_turns: 30\n    agent_description: \"Custom workflow assistant\"\n</code></pre></p>"},{"location":"subagent/introduction/#how-to-use-subagents","title":"How to Use Subagents","text":""},{"location":"subagent/introduction/#method-1-cli-command-recommended","title":"Method 1: CLI Command (Recommended)","text":"<p>Use the slash command to launch a subagent:</p> <pre><code>datus --namespace production\n\n# Launch subagent with specific task\n/gen_metrics Generate a revenue metric\n</code></pre> <p>Workflow:</p> <ol> <li>Type <code>/[subagent_name]</code> followed by your request</li> <li>Subagent processes the task using specialized tools</li> <li>Review generated output (YAML, SQL, etc.)</li> <li>Confirm whether to sync to Knowledge Base</li> </ol>"},{"location":"subagent/introduction/#method-2-web-interface","title":"Method 2: Web Interface","text":"<p>Access subagents through the web chatbot:</p> <pre><code>datus web --namespace production\n</code></pre> <p>Steps:</p> <ol> <li>Click \"\ud83d\udd27 Access Specialized Subagents\" on the main page</li> <li>Select the subagent you need (e.g., \"gen_metrics\")</li> <li>Click \"\ud83d\ude80 Use [subagent_name]\"</li> <li>Chat with the specialized assistant</li> </ol> <p>Direct URL Access: <pre><code>http://localhost:8501/?subagent=gen_metrics\nhttp://localhost:8501/?subagent=gen_semantic_model\nhttp://localhost:8501/?subagent=gen_sql_summary\n</code></pre></p>"},{"location":"subagent/introduction/#subagent-vs-default-chat","title":"Subagent vs Default Chat","text":"Aspect Default Chat Subagent Purpose General SQL queries Specific task workflows Tools DB tools, search tools Task-specific tools (file ops, validation) Session Single conversation Independent per subagent Prompts General SQL assistance Task-optimized instructions Output SQL queries + explanations Structured artifacts (YAML, files) Validation Optional Built-in (e.g., MetricFlow validation) <p>When to Use Default Chat:</p> <ul> <li>Ad-hoc SQL queries</li> <li>Data exploration</li> <li>Quick questions about your database</li> </ul> <p>When to Use Subagent:</p> <ul> <li>Generate standardized artifacts (semantic models, metrics)</li> <li>Follow specific workflows (classification, validation)</li> <li>Build knowledge repositories</li> </ul>"},{"location":"subagent/introduction/#configuration","title":"Configuration","text":""},{"location":"subagent/introduction/#basic-configuration","title":"Basic Configuration","text":"<p>Define subagents in <code>conf/agent.yml</code>:</p> <pre><code>agentic_nodes:\n  gen_metrics:\n    model: claude                          # LLM model\n    system_prompt: gen_metrics             # Prompt template name\n    prompt_version: \"1.0\"                  # Template version\n    tools: generation_tools.*, filesystem_tools.*  # Available tools\n    hooks: generation_hooks                # User confirmation\n    mcp: metricflow_mcp                    # MCP servers\n    max_turns: 40                          # Max conversation turns\n    workspace_root: /path/to/workspace     # File workspace\n    agent_description: \"Metric generation assistant\"\n    rules:                                 # Custom rules\n      - Use check_metric_exists to avoid duplicates\n      - Validate with mf validate-configs\n</code></pre>"},{"location":"subagent/introduction/#key-parameters","title":"Key Parameters","text":"Parameter Required Description Example <code>model</code> Yes LLM model name <code>claude</code>, <code>deepseek</code>, <code>openai</code> <code>system_prompt</code> Yes Prompt template identifier <code>gen_metrics</code>, <code>gen_semantic_model</code> <code>prompt_version</code> No Template version <code>\"1.0\"</code>, <code>\"2.0\"</code> <code>tools</code> Yes Comma-separated tool patterns <code>db_tools.*, generation_tools.*</code> <code>hooks</code> No Enable confirmation workflow <code>generation_hooks</code> <code>mcp</code> No MCP server names <code>metricflow_mcp, filesystem_mcp</code> <code>max_turns</code> No Max conversation turns <code>30</code>, <code>40</code> <code>workspace_root</code> No File operation directory <code>/path/to/workspace</code> <code>agent_description</code> No Assistant description <code>\"SQL analysis assistant\"</code> <code>rules</code> No Custom behavior rules List of strings"},{"location":"subagent/introduction/#tool-patterns","title":"Tool Patterns","text":"<p>Wildcard Pattern (all methods): <pre><code>tools: db_tools.*, generation_tools.*, filesystem_tools.*\n</code></pre></p> <p>Specific Methods: <pre><code>tools: db_tools.list_tables, db_tools.get_table_ddl, generation_tools.check_metric_exists\n</code></pre></p> <p>Available Tool Types:</p> <ul> <li><code>db_tools.*</code>: Database operations (list tables, get DDL, execute queries)</li> <li><code>generation_tools.*</code>: Generation helpers (check duplicates, context preparation)</li> <li><code>filesystem_tools.*</code>: File operations (read, write, edit files)</li> <li><code>context_search_tools.*</code>: Knowledge Base search (find metrics, semantic models)</li> <li><code>date_parsing_tools.*</code>: Date/time parsing and normalization</li> </ul>"},{"location":"subagent/introduction/#mcp-servers","title":"MCP Servers","text":"<p>MCP (Model Context Protocol) servers provide additional tools:</p> <p>Built-in MCP Servers:</p> <ul> <li><code>filesystem_mcp</code>: File system operations within workspace</li> <li><code>metricflow_mcp</code>: MetricFlow CLI integration (validate, query, list)</li> </ul> <p>Configuration: <pre><code>mcp: metricflow_mcp, filesystem_mcp\n</code></pre></p>"},{"location":"subagent/introduction/#summary","title":"Summary","text":"<p>Subagents provide specialized, workflow-optimized AI assistants for specific tasks:</p> <ul> <li>Task-Focused: Optimized prompts and tools for specific workflows</li> <li>Independent Sessions: Separate conversation history per subagent</li> <li>Artifact Generation: Create standardized files (YAML, documentation)</li> <li>Built-in Validation: Automatic checks and validation (e.g., MetricFlow)</li> <li>Knowledge Base Integration: Sync generated artifacts for reuse</li> <li>Flexible Configuration: Customize tools, prompts, and behavior</li> </ul>"},{"location":"training/llm_trace_usage/","title":"LLM Trace Usage Guide","text":""},{"location":"training/llm_trace_usage/#overview","title":"Overview","text":"<p>The <code>--save_llm_trace</code> parameter allows you to save LLM input and output to YAML files for debugging, analysis, and auditing purposes.</p>"},{"location":"training/llm_trace_usage/#how-to-enable","title":"How to Enable","text":""},{"location":"training/llm_trace_usage/#1-command-line-parameters","title":"1. Command Line Parameters","text":"<p>Add the <code>--save_llm_trace</code> parameter to any Datus command:</p> <pre><code># CLI mode\ndatus-cli --namespace spidersnow --save_llm_trace\n\n# Main program mode\npython datus/main.py run --namespace bird_sqlite --task \"Query all users\" --task_db_name test.db --save_llm_trace\n\n# Benchmark mode\npython datus/main.py benchmark --namespace bird_sqlite --benchmark bird_dev --save_llm_trace\n</code></pre>"},{"location":"training/llm_trace_usage/#2-configuration-file","title":"2. Configuration File","text":"<p>You can also enable tracing for specific models in the <code>agent.yml</code> configuration file:</p> <pre><code>agent:\n  models:\n    deepseek-v3:\n      type: deepseek\n      base_url: https://api.deepseek.com\n      api_key: ${DEEPSEEK_API_KEY}\n      model: deepseek-chat\n      save_llm_trace: true  # Enable tracing for this model\n</code></pre>"},{"location":"training/llm_trace_usage/#output-format","title":"Output Format","text":"<p>Trace files are saved in the <code>trajectory_dir/{task_id}/</code> directory, with each node generating a <code>{node_id}.yml</code> file.</p>"},{"location":"training/llm_trace_usage/#yaml-file-structure","title":"YAML File Structure","text":"<pre><code>system_prompt: \"You are a helpful SQL assistant.\"\nuser_prompt: \"Generate a SQL query to select all users\"\nreason_content: \"This query selects all columns from the users table...\"\noutput_content: \"SELECT * FROM users;\"\n</code></pre>"},{"location":"training/llm_trace_usage/#field-descriptions","title":"Field Descriptions","text":"<ul> <li>system_prompt: System prompt (if using message format)</li> <li>user_prompt: User input prompt</li> <li>reason_content: Reasoning content (only applicable to reasoning models like deepseek-reasoner)</li> <li>output_content: Model output content</li> </ul>"},{"location":"training/llm_trace_usage/#supported-models","title":"Supported Models","text":"<p>Currently, LLM trace functionality is primarily implemented in DeepSeek models:</p> <ul> <li>\u2705 DeepSeek Chat (deepseek-chat)</li> <li>\u2705 DeepSeek Reasoner (deepseek-reasoner) - includes reasoning content</li> <li>\ud83d\udd04 Other models (OpenAI, Claude, Qwen) have basic interfaces and can be extended</li> </ul>"},{"location":"training/llm_trace_usage/#file-organization","title":"File Organization","text":"<pre><code>trajectory_dir/\n\u2514\u2500\u2500 task_123_20240101/\n    \u251c\u2500\u2500 node_1.yml          # Schema Linking node\n    \u251c\u2500\u2500 node_2.yml          # Generate SQL node\n    \u251c\u2500\u2500 node_3.yml          # Execute SQL node\n    \u2514\u2500\u2500 node_4.yml          # Output node\n</code></pre>"},{"location":"training/llm_trace_usage/#use-cases","title":"Use Cases","text":""},{"location":"training/llm_trace_usage/#1-debugging-and-development","title":"1. Debugging and Development","text":"<pre><code># Enable tracing during development to debug prompts\ndatus-cli --namespace local_duckdb --save_llm_trace\n</code></pre>"},{"location":"training/llm_trace_usage/#2-performance-analysis","title":"2. Performance Analysis","text":"<pre><code># Analyze LLM input/output for different nodes\npython datus/main.py benchmark --namespace bird_sqlite --benchmark bird_dev --save_llm_trace\n</code></pre>"},{"location":"training/llm_trace_usage/#3-auditing-and-compliance","title":"3. Auditing and Compliance","text":"<pre><code># Record all LLM interactions for auditing\npython datus/main.py run --namespace prod --task \"sensitive query\" --save_llm_trace\n</code></pre>"},{"location":"training/llm_trace_usage/#4-mcp-call-tracing","title":"4. MCP Call Tracing","text":"<pre><code># Enable detailed tracing of MCP calls, including the entire function call process\npython datus/main.py run --namespace bird_sqlite --task \"Complex query\" --save_llm_trace\n</code></pre>"},{"location":"training/llm_trace_usage/#important-notes","title":"Important Notes","text":"<ol> <li>Storage Space: Enabling tracing will increase storage usage, especially for long conversations</li> <li>Sensitive Information: Trace files may contain sensitive data, please handle with care</li> <li>Performance Impact: File writing operations may slightly affect performance</li> <li>Directory Permissions: Ensure the <code>trajectory_dir</code> directory has write permissions</li> </ol>"},{"location":"training/llm_trace_usage/#example-outputs","title":"Example Outputs","text":""},{"location":"training/llm_trace_usage/#simple-prompt","title":"Simple Prompt","text":"<pre><code>system_prompt: \"\"\nuser_prompt: \"Create a query to find all active users\"\nreason_content: \"\"\noutput_content: \"SELECT * FROM users WHERE status = 'active';\"\n</code></pre>"},{"location":"training/llm_trace_usage/#output-with-reasoning-deepseek-reasoner","title":"Output with Reasoning (DeepSeek Reasoner)","text":"<pre><code>system_prompt: \"You are an expert SQL developer.\"\nuser_prompt: \"Find the top 5 customers by revenue\"\nreason_content: \"I need to join the customers and orders tables, sum the order amounts, group by customer, and limit to top 5...\"\noutput_content: \"SELECT c.name, SUM(o.amount) as total_revenue FROM customers c JOIN orders o ON c.id = o.customer_id GROUP BY c.id ORDER BY total_revenue DESC LIMIT 5;\"\n</code></pre>"},{"location":"training/llm_trace_usage/#mcp-call-tracing-deepseek-model","title":"MCP Call Tracing (DeepSeek Model)","text":"<pre><code>system_prompt: \"You are a snowflake expert.\"\nuser_prompt: \"Instruction: Generate SQL for data analysis\\n\\nUser Prompt: Find recent transactions\"\nreason_content: |\n  === MCP Conversation Started ===\n  Instruction: You are a snowflake expert. Generate SQL queries and execute them.\n  User Prompt: Find recent transactions\n  Max Turns: 10\n\n  === MCP Server Started ===\n  Agent created: MCP_Agent\n  Output type: &lt;class 'str'&gt;\n\n  === Agent Execution Started ===\n\n  === Result Analysis ===\n  Result type: &lt;class 'agents.runner.Result'&gt;\n  Result attributes: ['final_output', 'messages', 'run_id', 'iteration_count', 'total_cost']\n\n  === Conversation Messages ===\n  Message 1 (user):\n    Content: Find recent transactions from the database\n\n  Message 2 (assistant):\n    Content: I'll help you find recent transactions. Let me query the database.\n    Tool Calls:\n      1. read_query({\"query\": \"SELECT * FROM transactions WHERE created_at &gt;= CURRENT_DATE - INTERVAL '7 days' ORDER BY created_at DESC LIMIT 100\"})\n\n  Message 3 (user):\n    Content: Tool result: [transaction data...]\n\n  === Tool Execution Results ===\n  Tool Output 1:\n    Content: SELECT * FROM transactions WHERE created_at &gt;= CURRENT_DATE - INTERVAL '7 days' ORDER BY created_at DESC LIMIT 100\n    Results: [{\"id\": 1, \"amount\": 100.00, \"created_at\": \"2024-01-15\"}...]\n\n  === Agent Execution Completed ===\n  Final Output: Here are the recent transactions from the last 7 days: [results summary]\n\n  Run ID: run_123456\n  Iteration count: 3\n  Total cost: 0.025\noutput_content: \"Here are the recent transactions from the last 7 days: [results summary]\"\n</code></pre>"},{"location":"web_chatbot/introduction/","title":"Web Chatbot User Guide","text":""},{"location":"web_chatbot/introduction/#overview","title":"Overview","text":"<p>The Datus Web Chatbot provides a user-friendly web interface for interacting with the Datus AI assistant. Built on Streamlit, it offers an intuitive chat experience for natural language to SQL conversion without requiring command-line knowledge.</p>"},{"location":"web_chatbot/introduction/#quick-start","title":"Quick Start","text":""},{"location":"web_chatbot/introduction/#launch-the-web-interface","title":"Launch the Web Interface","text":"<p>With Namespace: <pre><code>datus --web --namespace &lt;your_namespace&gt;\n</code></pre></p> <p>With Custom Configuration: <pre><code>datus --web --config path/to/agent.yml --namespace snowflake\n</code></pre></p> <p>Custom Port and Host: <pre><code>datus --web --port 8080 --host 0.0.0.0\n</code></pre></p> <p>The web interface will automatically open in your browser at <code>http://localhost:8501</code> (or your specified port).</p> <p></p>"},{"location":"web_chatbot/introduction/#main-features","title":"Main Features","text":""},{"location":"web_chatbot/introduction/#1-interactive-chat-interface","title":"1. Interactive Chat Interface","text":"<p>Natural Language Queries:</p> <p>Simply type your question in plain language, and the AI will generate SQL and execute it.</p> <p>Example:</p> <pre><code>Show me total revenue by product category for the last month\n</code></pre> <p>The assistant will:</p> <ol> <li>Understand your question</li> <li>Generate the appropriate SQL query</li> <li>Display the SQL with syntax highlighting</li> <li>Show the AI's explanation</li> </ol>"},{"location":"web_chatbot/introduction/#2-subagent-support","title":"2. Subagent Support","text":"<p>Access specialized subagents for different tasks directly from the web interface.</p> <p>Available Subagents (shown in expandable section):</p> <ul> <li><code>gen_semantic_model</code>: Generate semantic models from database tables</li> <li><code>gen_metrics</code>: Convert SQL queries to MetricFlow metrics</li> <li><code>gen_sql_summary</code>: Analyze and classify SQL queries</li> </ul> <p>How to Use:</p> <ol> <li>Click \"\ud83d\udd27 Access Specialized Subagents\" on the main page</li> <li>Select the subagent you need</li> <li>Click \"\ud83d\ude80 Use [subagent_name]\"</li> <li>Chat with the specialized assistant</li> </ol> <p>Direct URL Access:</p> <p>You can bookmark subagent URLs for quick access:</p> <pre><code>http://localhost:8501/?subagent=gen_metrics\nhttp://localhost:8501/?subagent=gen_semantic_model\n</code></pre>"},{"location":"web_chatbot/introduction/#3-session-management","title":"3. Session Management","text":"<p>View Session History:</p> <p>The sidebar shows your recent chat sessions with:</p> <ul> <li>Session ID (shortened)</li> <li>Creation time</li> <li>Message count</li> <li>Latest user message preview</li> </ul> <p>Load Previous Sessions:</p> <ol> <li>Find the session in the sidebar</li> <li>Click \"\ud83d\udd17 Load Session\"</li> <li>View the conversation in read-only mode</li> </ol> <p>Session Sharing:</p> <p>Each session has a unique URL that can be shared:</p> <pre><code>http://localhost:8501?session=abc123def456...\n</code></pre>"},{"location":"web_chatbot/introduction/#4-success-story-tracking","title":"4. Success Story Tracking","text":"<p>Mark Successful Queries:</p> <p>When the AI generates a SQL query that works well:</p> <ol> <li>Review the generated SQL</li> <li>Click the \"\ud83d\udc4d Success\" button</li> <li>The query is saved to <code>~/.datus/benchmark/[subagent]/success_story.csv</code></li> </ol> <p></p> <p>CSV Format:</p> <pre><code>session_link,session_id,subagent_name,user_message,sql,timestamp\nhttp://localhost:8501?session=...,abc123...,chatbot,\"Show revenue by category\",SELECT ...,2025-01-15 10:30:00\n</code></pre> <p>This helps track effective queries for benchmarking and improvement.</p>"},{"location":"web_chatbot/introduction/#5-report-issues","title":"5. Report Issues","text":"<p>Share Problems Easily:</p> <ol> <li>Click \"\ud83d\udc1b Report Issue\" in the sidebar</li> <li>Session link is automatically copied to clipboard</li> <li>Paste the link when reporting issues to developers</li> </ol> <p>The session link includes full conversation context, making debugging easier.</p> <p></p>"},{"location":"web_chatbot/introduction/#summary","title":"Summary","text":"<p>The Datus Web Chatbot provides:</p> <ul> <li>User-Friendly Interface: No command-line knowledge needed</li> <li>Subagent Access: Specialized assistants for different tasks</li> <li>Session Management: Save, load, and share conversations</li> <li>Success Tracking: Mark and collect effective queries</li> <li>Easy Sharing: One-click session link copying</li> <li>Visual Execution: See step-by-step query generation</li> <li>Multi-Namespace Support: Switch between databases easily</li> </ul>"},{"location":"workflow/api/","title":"Workflow API","text":""},{"location":"workflow/api/#introduction","title":"Introduction","text":"<p>The Datus Agent Workflow API Service is a RESTful API that exposes the power of Datus Agent's natural language to SQL capabilities through HTTP endpoints. This service enables applications to integrate intelligent SQL generation, execution, and workflow management into their systems.</p>"},{"location":"workflow/api/#quick-start","title":"Quick Start","text":""},{"location":"workflow/api/#starting-the-service","title":"Starting the Service","text":"<pre><code># Start the API service\npython -m datus.api.server --host 0.0.0.0 --port 8000\n\n# Start with multiple workers\npython -m datus.api.server --workers 4 --port 8000\n\n# Start in daemon mode (background)\npython -m datus.api.server --daemon --port 8000\n</code></pre>"},{"location":"workflow/api/#authentication","title":"Authentication","text":""},{"location":"workflow/api/#oauth2-client-credentials-flow","title":"OAuth2 Client Credentials Flow","text":"<p>The API uses OAuth2 client credentials authentication:</p>"},{"location":"workflow/api/#1-get-authentication-token","title":"1. Get Authentication Token","text":"<pre><code>curl -X POST \"http://localhost:8000/auth/token\" \\\n  -H \"Content-Type: application/x-www-form-urlencoded\" \\\n  -d \"client_id=your_client_id&amp;client_secret=your_client_secret&amp;grant_type=client_credentials\"\n</code></pre>"},{"location":"workflow/api/#2-use-token-in-requests","title":"2. Use Token in Requests","text":"<pre><code>curl -X POST \"http://localhost:8000/workflows/run\" \\\n  -H \"Authorization: Bearer your_jwt_token\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"workflow\": \"fixed\", \"namespace\": \"your_db\", \"task\": \"Show me users\"}'\n</code></pre>"},{"location":"workflow/api/#configuration","title":"Configuration","text":"<p>Create <code>auth_clients.yml</code> to configure clients:</p> <pre><code>clients:\n  your_client_id: your_client_secret\n  another_client: another_secret\n\njwt:\n  secret_key: your-jwt-secret-key-change-in-production\n  algorithm: HS256\n  expiration_hours: 2\n</code></pre>"},{"location":"workflow/api/#api-endpoints","title":"API Endpoints","text":""},{"location":"workflow/api/#authentication_1","title":"Authentication","text":""},{"location":"workflow/api/#post-authtoken","title":"POST /auth/token","text":"<p>Obtain JWT access token.</p> <p>Request: <pre><code>POST /auth/token\nContent-Type: application/x-www-form-urlencoded\n\nclient_id=your_client_id&amp;client_secret=your_client_secret&amp;grant_type=client_credentials\n</code></pre></p> <p>Response: <pre><code>{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 7200\n}\n</code></pre></p>"},{"location":"workflow/api/#workflow-execution","title":"Workflow Execution","text":""},{"location":"workflow/api/#post-workflowsrun","title":"POST /workflows/run","text":"<p>Execute a workflow to convert natural language to SQL.</p> <p>Common Request Parameters:</p> Parameter Type Required Description <code>workflow</code> string \u2705 Workflow name (nl2sql, reflection, fixed, metric_to_sql) <code>namespace</code> string \u2705 Database namespace <code>task</code> string \u2705 Natural language task description <code>mode</code> string \u2705 Execution mode (sync or async) <code>task_id</code> string \u274c Custom task ID for idempotency <code>catalog_name</code> string \u274c Database catalog <code>database_name</code> string \u274c Database name <code>schema_name</code> string \u274c Schema name <code>current_date</code> string \u274c Reference date for time expressions <code>domain</code> string \u274c Business domain <code>layer1</code> string \u274c Business layer 1 <code>layer2</code> string \u274c Business layer 2 <code>ext_knowledge</code> string \u274c Additional business context"},{"location":"workflow/api/#synchronous-mode-mode-sync","title":"Synchronous Mode (mode: \"sync\")","text":"<p>Request Headers: <pre><code>Authorization: Bearer your_jwt_token\nContent-Type: application/json\n</code></pre></p> <p>Request Body: <pre><code>{\n  \"workflow\": \"nl2sql\",\n  \"namespace\": \"your_database_namespace\",\n  \"task\": \"Show me monthly revenue by product category\",\n  \"mode\": \"sync\",\n  \"catalog_name\": \"your_catalog\",\n  \"database_name\": \"your_database\"\n}\n</code></pre></p> <p>Response: <pre><code>{\n  \"task_id\": \"client_20240115143000\",\n  \"status\": \"completed\",\n  \"workflow\": \"nl2sql\",\n  \"sql\": \"SELECT DATE_TRUNC('month', order_date) as month, product_category, SUM(amount) as revenue FROM orders WHERE order_date &gt;= '2023-01-01' GROUP BY month, product_category ORDER BY month, revenue DESC\",\n  \"result\": [\n    {\n      \"month\": \"2023-01-01\",\n      \"product_category\": \"Electronics\",\n      \"revenue\": 150000.00\n    },\n    {\n      \"month\": \"2023-01-01\",\n      \"product_category\": \"Clothing\",\n      \"revenue\": 85000.00\n    }\n  ],\n  \"metadata\": {\n    \"execution_time\": 12.5,\n    \"nodes_executed\": 5,\n    \"reflection_rounds\": 0\n  },\n  \"error\": null,\n  \"execution_time\": 12.5\n}\n</code></pre></p>"},{"location":"workflow/api/#asynchronous-mode-mode-async","title":"Asynchronous Mode (mode: \"async\")","text":"<p>Request Headers: <pre><code>Authorization: Bearer your_jwt_token\nContent-Type: application/json\nAccept: text/event-stream\nCache-Control: no-cache\n</code></pre></p> <p>Request Body: <pre><code>{\n  \"workflow\": \"nl2sql\",\n  \"namespace\": \"your_database_namespace\",\n  \"task\": \"Show me monthly revenue by product category\",\n  \"mode\": \"async\",\n  \"catalog_name\": \"your_catalog\",\n  \"database_name\": \"your_database\"\n}\n</code></pre></p> <p>Response (Server-Sent Events stream): <pre><code>Content-Type: text/event-stream\n\nevent: started\ndata: {\"task_id\": \"client_20240115143000\", \"workflow\": \"nl2sql\"}\n\nevent: progress\ndata: {\"message\": \"Initializing workflow\", \"progress\": 10}\n\nevent: node_progress\ndata: {\"node\": \"schema_linking\", \"status\": \"processing\", \"progress\": 25}\n\nevent: node_detail\ndata: {\"node\": \"schema_linking\", \"description\": \"Analyzing user query and finding relevant tables\", \"details\": {\"tables_found\": [\"orders\", \"products\"]}}\n\nevent: sql_generated\ndata: {\"sql\": \"SELECT DATE_TRUNC('month', order_date) as month, product_category, SUM(amount) as revenue FROM orders GROUP BY month, product_category\"}\n\nevent: execution_complete\ndata: {\"status\": \"success\", \"rows_affected\": 24, \"execution_time\": 2.1}\n\nevent: output_ready\ndata: {\"result\": [...], \"metadata\": {...}}\n\nevent: done\ndata: {\"task_id\": \"client_20240115143000\", \"status\": \"completed\", \"total_time\": 15.2}\n</code></pre></p>"},{"location":"workflow/api/#feedback-submission","title":"Feedback Submission","text":""},{"location":"workflow/api/#post-workflowsfeedback","title":"POST /workflows/feedback","text":"<p>Submit feedback on workflow execution quality.</p> <p>Request: <pre><code>{\n  \"task_id\": \"client_20240115143000\",\n  \"status\": \"success\"\n}\n</code></pre></p> <p>Response: <pre><code>{\n  \"task_id\": \"client_20240115143000\",\n  \"acknowledged\": true,\n  \"recorded_at\": \"2024-01-15T14:30:15Z\"\n}\n</code></pre></p>"},{"location":"workflow/api/#workflow-types","title":"Workflow Types","text":""},{"location":"workflow/api/#reflection","title":"reflection","text":"<p>Intelligent, self-improving SQL generation:</p> <ul> <li>Includes reflection for error correction</li> <li>Can adapt and retry queries</li> <li>Best for complex or uncertain queries</li> </ul>"},{"location":"workflow/api/#fixed","title":"fixed","text":"<p>Deterministic SQL generation:</p> <ul> <li>Predictable execution path</li> <li>No adaptive behavior</li> <li>Best for well-understood queries</li> </ul>"},{"location":"workflow/api/#metric_to_sql","title":"metric_to_sql","text":"<p>Generate SQL from business metrics:</p> <ul> <li>Leverages predefined business metrics</li> <li>Includes date parsing for temporal queries</li> <li>Best for standardized business intelligence</li> </ul>"},{"location":"workflow/api/#configuration_1","title":"Configuration","text":""},{"location":"workflow/api/#server-configuration","title":"Server Configuration","text":"<pre><code>python -m datus.api.server \\\n  --host 0.0.0.0 \\\n  --port 8000 \\\n  --workers 4 \\\n  --reload \\\n  --debug\n</code></pre>"},{"location":"workflow/api/#server-parameters","title":"Server Parameters","text":"Parameter Description Default <code>--host</code> Server host address <code>127.0.0.1</code> <code>--port</code> Server port <code>8000</code> <code>--workers</code> Number of worker processes <code>1</code> <code>--reload</code> Auto-reload on code changes <code>False</code> <code>--debug</code> Enable debug mode <code>False</code> <code>--daemon</code> Run in background <code>False</code>"},{"location":"workflow/api/#best-practices","title":"Best Practices","text":""},{"location":"workflow/api/#security","title":"Security","text":"<ul> <li>Use strong, unique JWT secret keys in production</li> <li>Rotate client credentials regularly</li> <li>Implement rate limiting for production deployments</li> <li>Use HTTPS in production environments</li> </ul>"},{"location":"workflow/api/#performance","title":"Performance","text":"<ul> <li>Use async mode for long-running queries</li> <li>Configure appropriate worker count based on expected load</li> <li>Monitor memory usage with multiple workers</li> <li>Implement client-side timeouts for sync requests</li> </ul>"},{"location":"workflow/api/#error-handling","title":"Error Handling","text":"<ul> <li>Always check response status codes</li> <li>Implement retry logic for transient failures</li> <li>Handle streaming disconnections in async mode</li> <li>Log detailed error information for debugging</li> </ul>"},{"location":"workflow/api/#conclusion","title":"Conclusion","text":"<p>The Datus Agent Workflow API Service provides a powerful, flexible interface for integrating natural language to SQL capabilities into your applications. With support for multiple execution modes, real-time progress streaming, and comprehensive authentication, it enables developers to build intelligent data analysis applications.</p>"},{"location":"workflow/introduction/","title":"Workflow Introduction","text":"<p>Datus Agent Workflow is an intelligent system that transforms natural language questions into SQL queries and executes them against your databases. Think of it as having a data analyst that understands your business needs and can automatically generate the right SQL queries to get you the answers you need.</p>"},{"location":"workflow/introduction/#embedded-workflows","title":"Embedded Workflows","text":"<p>Datus Agent offers different embedded workflows for different needs:</p>"},{"location":"workflow/introduction/#1-fixed-workflow","title":"1. Fixed Workflow","text":"<p>Best for: Simple, straightforward questions</p> <ul> <li>Performance: Fast and predictable</li> <li>Perfect for: \"List all customers from California\" or \"Show me total sales for 2023\"</li> <li>Use cases: Direct data retrieval, simple aggregations, basic filtering</li> </ul>"},{"location":"workflow/introduction/#2-reflection-workflow","title":"2. Reflection Workflow","text":"<p>Best for: Complex business questions</p> <ul> <li>Intelligence: Automatically checks and improves its own work</li> <li>Reliability: Can fix errors without human intervention</li> <li>Perfect for: \"Show me quarterly revenue trends by product category, excluding returns and considering seasonal adjustments\"</li> <li>Use cases: Multi-step analysis, error correction, complex business logic</li> </ul>"},{"location":"workflow/introduction/#3-metric-to-sql-workflow","title":"3. Metric-to-SQL Workflow","text":"<p>Best for: Standardized business reports</p> <ul> <li>Consistency: Uses predefined business metrics</li> <li>Perfect for: \"Show monthly active users for the last quarter\" or \"Calculate customer churn rate\"</li> <li>Use cases: KPI reporting, standardized metrics, business intelligence</li> </ul>"},{"location":"workflow/introduction/#nodes-the-building-blocks","title":"Nodes: The Building Blocks","text":"<p>Workflows are made up of specialized components called \"nodes.\" Each node does one job really well:</p> <ul> <li>Schema Linking: Finds the right database tables for your question</li> <li>Generate SQL: Creates the SQL query</li> <li>Execute SQL: Runs the query against your database</li> <li>Reflect: Checks results and decides if improvements are needed</li> <li>Output: Presents the final results to you</li> </ul>"},{"location":"workflow/introduction/#getting-started","title":"Getting Started","text":""},{"location":"workflow/introduction/#basic-usage","title":"Basic Usage","text":"<pre><code># Ask a simple question\ndatus run --namespace your_db --task \"Show me monthly sales\"\n\n# Use a specific workflow type\ndatus run --namespace your_db --task \"Show me complex revenue trends\" --plan reflection\n\n# Use business metrics\ndatus run --namespace your_db --task \"Calculate customer lifetime value\" --plan metric_to_sql\n</code></pre>"},{"location":"workflow/introduction/#via-api","title":"Via API","text":"<p>You can also use workflows through a REST API:</p> <pre><code>import requests\n\nresponse = requests.post(\n    \"http://localhost:8000/workflows/run\",\n    headers={\"Authorization\": \"Bearer your_token\"},\n    json={\n        \"workflow\": \"reflection\",\n        \"namespace\": \"your_db\",\n        \"task\": \"Show me quarterly revenue trends\",\n        \"mode\": \"sync\"\n    }\n)\n\nresult = response.json()\nprint(result[\"sql\"])    # The generated SQL query\nprint(result[\"result\"]) # The query results\n</code></pre>"},{"location":"workflow/introduction/#next-steps","title":"Next Steps","text":"<ul> <li>Learn about workflow orchestration to understand how workflows are executed</li> <li>Explore the API documentation for programmatic access</li> <li>Deep dive into individual nodes to understand each component</li> </ul>"},{"location":"workflow/nodes/","title":"Workflow Nodes","text":"<p>Nodes are the fundamental building blocks of Datus Agent's workflow system. Each node performs a specific task in the process of understanding user requests, generating SQL queries, executing them, and providing results. This document explains the different types of nodes, their purposes, and how they work together in workflows.</p>"},{"location":"workflow/nodes/#node-categories","title":"Node Categories","text":""},{"location":"workflow/nodes/#1-control-nodes","title":"1. Control Nodes","text":"<p>Control nodes manage workflow execution flow and decision-making.</p>"},{"location":"workflow/nodes/#reflect-node","title":"Reflect Node","text":"<ul> <li>Purpose: Evaluate results and decide next steps</li> <li>Key Feature: Core intelligence that enables adaptive SQL generation</li> <li>Common Strategies:</li> <li>Simple regeneration (retry SQL generation)</li> <li>Document search (find relevant documentation)</li> <li>Schema re-analysis (re-examine database structure)</li> <li>Deep reasoning analysis</li> </ul>"},{"location":"workflow/nodes/#parallel-node","title":"Parallel Node","text":"<ul> <li>Purpose: Execute multiple child nodes simultaneously</li> <li>Use Case: Testing multiple SQL generation strategies for comparison</li> </ul>"},{"location":"workflow/nodes/#selection-node","title":"Selection Node","text":"<ul> <li>Purpose: Choose the best result from multiple candidates</li> <li>Use Case: Selecting the best SQL query from multiple generated options</li> </ul>"},{"location":"workflow/nodes/#subworkflow-node","title":"Subworkflow Node","text":"<ul> <li>Purpose: Execute nested workflows</li> <li>Use Case: Reusing complex workflow patterns and modular composition</li> </ul>"},{"location":"workflow/nodes/#2-action-nodes","title":"2. Action Nodes","text":"<p>Action nodes perform specific data processing and SQL-related tasks.</p>"},{"location":"workflow/nodes/#schema-linking-node","title":"Schema Linking Node","text":"<ul> <li>Purpose: Understand user queries and find relevant database schemas</li> <li>Key Activities:</li> <li>Parse user intent from natural language</li> <li>Search knowledge base for relevant tables</li> <li>Extract table schemas and sample data</li> <li>Update workflow context with schema information</li> <li>Output: List of relevant table schemas with sample data</li> </ul>"},{"location":"workflow/nodes/#generate-sql-node","title":"Generate SQL Node","text":"<ul> <li>Purpose: Generate SQL queries based on user requirements</li> <li>Key Features:</li> <li>Uses LLM to understand business requirements</li> <li>Leverages historical SQL patterns</li> <li>Incorporates business metrics when available</li> <li>Handles complex query logic</li> <li>Output: Generated SQL query with execution plan</li> </ul>"},{"location":"workflow/nodes/#execute-sql-node","title":"Execute SQL Node","text":"<ul> <li>Purpose: Execute SQL queries against databases</li> <li>Key Activities:</li> <li>Connect to target database</li> <li>Execute SQL safely with error handling</li> <li>Return query results or error messages</li> <li>Update execution context</li> <li>Output: Query results, execution time, error information</li> </ul>"},{"location":"workflow/nodes/#output-node","title":"Output Node","text":"<ul> <li>Purpose: Present final results to users</li> <li>Features:</li> <li>Result formatting and presentation</li> <li>Error message clarity</li> <li>Performance metrics display</li> <li>Output: User-friendly result presentation</li> </ul>"},{"location":"workflow/nodes/#reasoning-node","title":"Reasoning Node","text":"<ul> <li>Purpose: Provide deep analysis and reasoning</li> <li>Use Case: Complex business logic explanation and validation</li> </ul>"},{"location":"workflow/nodes/#fix-node","title":"Fix Node","text":"<ul> <li>Purpose: Repair problematic SQL queries</li> <li>Key Features:</li> <li>Error pattern recognition</li> <li>Automated SQL correction</li> <li>Validation of fixed queries</li> <li>Use Case: Automatically correcting failed SQL executions</li> </ul>"},{"location":"workflow/nodes/#generate-metrics-node","title":"Generate Metrics Node","text":"<ul> <li>Purpose: Create business metrics from SQL queries</li> <li>Key Activities:</li> <li>Analyze SQL query patterns</li> <li>Identify business metrics</li> <li>Generate metric definitions</li> <li>Store metrics in knowledge base</li> <li>Output: Business metric definitions and calculations</li> </ul>"},{"location":"workflow/nodes/#generate-semantic-model-node","title":"Generate Semantic Model Node","text":"<ul> <li>Purpose: Create semantic models for database tables</li> <li>Key Features:</li> <li>Identifies business dimensions and measures</li> <li>Defines table semantics</li> <li>Creates reusable data models</li> <li>Output: Semantic model definitions for business intelligence</li> </ul>"},{"location":"workflow/nodes/#search-metrics-node","title":"Search Metrics Node","text":"<ul> <li>Purpose: Find relevant business metrics</li> <li>Use Case: Reusing existing business calculations and ensuring consistency</li> </ul>"},{"location":"workflow/nodes/#compare-node","title":"Compare Node","text":"<ul> <li>Purpose: Compare SQL results with expected outcomes</li> <li>Use Case: Testing, validation, and quality assurance scenarios</li> </ul>"},{"location":"workflow/nodes/#date-parser-node","title":"Date Parser Node","text":"<ul> <li>Purpose: Parse temporal expressions in user queries</li> <li>Examples:</li> <li>\"last month\" \u2192 specific date range</li> <li>\"Q3 2023\" \u2192 quarter date boundaries</li> <li>\"past 7 days\" \u2192 rolling date window</li> </ul>"},{"location":"workflow/nodes/#document-search-node","title":"Document Search Node","text":"<ul> <li>Purpose: Find relevant documentation and context</li> <li>Use Case: Providing additional context for complex queries and domain knowledge</li> </ul>"},{"location":"workflow/nodes/#3-agentic-nodes","title":"3. Agentic Nodes","text":"<p>Advanced AI-powered nodes with conversational and adaptive capabilities.</p>"},{"location":"workflow/nodes/#chat-agentic-node","title":"Chat Agentic Node","text":"<ul> <li>Purpose: Conversational AI interactions with tool calling</li> <li>Key Features:</li> <li>Multi-turn conversations</li> <li>Tool calling capabilities</li> <li>Context maintenance</li> <li>Adaptive responses</li> <li>Use Case: Interactive SQL generation and refinement</li> </ul>"},{"location":"workflow/nodes/#node-implementation-details","title":"Node Implementation Details","text":""},{"location":"workflow/nodes/#inputoutput-structure","title":"Input/Output Structure","text":"<p>Each node follows a consistent interface pattern:</p> <pre><code>class BaseNode:\n    def setup_input(self, context: Context) -&gt; NodeInput\n    def run(self, input: NodeInput) -&gt; NodeOutput\n    def update_context(self, context: Context, output: NodeOutput) -&gt; Context\n</code></pre>"},{"location":"workflow/nodes/#context-management","title":"Context Management","text":"<p>Nodes share information through a unified context object:</p> <pre><code>class Context:\n    sql_contexts: List[SQLContext]      # Generated SQL and results\n    table_schemas: List[TableSchema]    # Database schema information\n    metrics: List[BusinessMetric]       # Available business metrics\n    reflections: List[Reflection]       # Reflection results\n    documents: List[Document]           # Retrieved documentation\n</code></pre>"},{"location":"workflow/nodes/#error-handling","title":"Error Handling","text":"<p>Nodes implement comprehensive error handling:</p> <ul> <li>Input Validation: Check required parameters and context</li> <li>Execution Safety: Handle database errors and timeouts</li> <li>Output Validation: Ensure output format compliance</li> <li>Recovery Mechanisms: Automatic retry and fallback strategies</li> </ul>"},{"location":"workflow/nodes/#node-configuration","title":"Node Configuration","text":""},{"location":"workflow/nodes/#model-assignment","title":"Model Assignment","text":"<p>Different nodes can use different LLM models:</p> <pre><code>nodes:\n  schema_linking:\n    model: \"claude-3-sonnet\"\n    temperature: 0.1\n\n  generate_sql:\n    model: \"gpt-4\"\n    temperature: 0.2\n\n  reasoning:\n    model: \"claude-3-opus\"\n    temperature: 0.3\n</code></pre>"},{"location":"workflow/nodes/#prompt-templates","title":"Prompt Templates","text":"<p>Nodes use configurable prompt templates:</p> <pre><code>nodes:\n  generate_sql:\n    prompt_template: \"generate_sql_system.j2\"\n    user_template: \"generate_sql_user.j2\"\n</code></pre>"},{"location":"workflow/nodes/#resource-limits","title":"Resource Limits","text":"<p>Configure execution constraints:</p> <pre><code>nodes:\n  execute_sql:\n    timeout: 30\n    max_rows: 10000\n    memory_limit: \"1GB\"\n</code></pre>"},{"location":"workflow/nodes/#best-practices","title":"Best Practices","text":""},{"location":"workflow/nodes/#node-selection","title":"Node Selection","text":"<ol> <li>Use Schema Linking First: Always start workflows with schema linking for context</li> <li>Combine Complementary Nodes: Use reasoning and generate_sql together for complex queries</li> <li>Add Reflection for Robustness: Include reflection nodes for adaptive behavior</li> <li>Use Parallel for Experimentation: Run multiple strategies in parallel for comparison</li> </ol>"},{"location":"workflow/nodes/#performance-optimization","title":"Performance Optimization","text":"<ul> <li>Cache Schema Information: Reuse schema linking results across workflows</li> <li>Optimize SQL Generation: Use appropriate model sizes for different complexity levels</li> <li>Limit Result Sets: Configure reasonable limits for SQL execution</li> <li>Monitor Resource Usage: Track memory and CPU usage for long-running workflows</li> </ul>"},{"location":"workflow/nodes/#error-recovery","title":"Error Recovery","text":"<ul> <li>Graceful Degradation: Provide useful partial results when possible</li> <li>Automatic Retry: Implement retry logic for transient failures</li> <li>User Feedback: Surface actionable error messages to users</li> <li>Logging: Maintain detailed logs for debugging and improvement</li> </ul>"},{"location":"workflow/nodes/#advanced-usage","title":"Advanced Usage","text":""},{"location":"workflow/nodes/#custom-nodes","title":"Custom Nodes","text":"<p>Create custom nodes for specific business logic:</p> <pre><code>class CustomValidationNode(BaseNode):\n    def run(self, input: ValidationInput) -&gt; ValidationOutput:\n        # Custom validation logic\n        return ValidationOutput(is_valid=True, message=\"Validation passed\")\n</code></pre>"},{"location":"workflow/nodes/#dynamic-workflows","title":"Dynamic Workflows","text":"<p>Nodes can modify workflow execution dynamically:</p> <pre><code># In reflection node\nif complexity_score &gt; threshold:\n    workflow.add_node(\"reasoning\", after=\"current\")\n\nif needs_validation:\n    workflow.add_node(\"compare\", before=\"output\")\n</code></pre>"},{"location":"workflow/nodes/#node-composition","title":"Node Composition","text":"<p>Combine multiple nodes for complex operations:</p> <pre><code># Parallel SQL generation strategies\nparallel_node = ParallelNode([\n    GenerateSQLNode(strategy=\"conservative\"),\n    GenerateSQLNode(strategy=\"aggressive\"),\n    GenerateSQLNode(strategy=\"metric_based\")\n])\n\n# Select best result\nselection_node = SelectionNode(criteria=\"accuracy\")\n</code></pre>"},{"location":"workflow/nodes/#conclusion","title":"Conclusion","text":"<p>Nodes are the powerful, modular components that make Datus Agent's workflow system efficient and intelligent. By understanding each node's purpose and how they work together, users can create sophisticated SQL generation workflows that adapt to complex requirements and deliver accurate results.</p> <p>The modular design allows for flexible composition, enabling both simple linear workflows and complex adaptive systems that can handle the full spectrum of data analysis challenges.</p>"},{"location":"workflow/orchestration/","title":"Workflow Orchestration","text":"<p>Workflow orchestration in Datus Agent is the process of defining, managing, and executing sequences of nodes to accomplish data analysis tasks. This guide explains how workflows are structured, configured, and executed to transform natural language requests into SQL queries and results.</p>"},{"location":"workflow/orchestration/#core-concepts","title":"Core Concepts","text":""},{"location":"workflow/orchestration/#1-workflow-definition","title":"1. Workflow Definition","text":"<p>A workflow is a sequence of nodes that:</p> <ul> <li>Has a clear purpose: Each workflow solves specific types of problems</li> <li>Follows a logical order: Nodes execute in a predefined sequence</li> <li>Shares data: Information flows between nodes through a shared context</li> <li>Can be adaptive: Some workflows can modify themselves during execution</li> </ul>"},{"location":"workflow/orchestration/#2-workflow-configuration","title":"2. Workflow Configuration","text":"<p>Datus provides several built-in workflow templates optimized for different use cases:</p> <pre><code>workflow:\n  reflection:\n    - schema_linking\n    - generate_sql\n    - execute_sql\n    - reflect\n    - output\n\n  fixed:\n    - schema_linking\n    - generate_sql\n    - execute_sql\n    - output\n\n  metric_to_sql:\n    - schema_linking\n    - search_metrics\n    - date_parser\n    - generate_sql\n    - execute_sql\n    - output\n</code></pre> <p>Note: These are built-in workflow templates. To customize workflows or create your own, you need to configure them in <code>agent.yml</code> (see Customizing Workflows section below).</p>"},{"location":"workflow/orchestration/#built-in-workflow-types","title":"Built-in Workflow Types","text":""},{"location":"workflow/orchestration/#1-reflection-workflow","title":"1. Reflection Workflow","text":"<p>Purpose: Intelligent, self-improving SQL generation with adaptive behavior</p> <p>Node Sequence: <pre><code>Schema Linking \u2192 Generate SQL \u2192 Execute SQL \u2192 Reflect \u2192 Output\n</code></pre></p> <p>Key Features:</p> <ul> <li>Self-assessment: Reflect node evaluates results and decides next steps</li> <li>Adaptive: Can add new nodes dynamically based on execution results</li> <li>Robust: Handles complex queries that may require multiple attempts</li> </ul> <p>Best For:</p> <ul> <li>Complex business queries</li> <li>Situations where perfect SQL isn't generated on first try</li> <li>Queries requiring domain knowledge</li> </ul> <p>Real-world Example:</p> <pre><code>User: \"Show me quarterly revenue trends by product category,\n       excluding returns and considering seasonal adjustments\"\n\nProcess:\n1. Schema Linking: Finds orders, products, categories tables\n2. Generate SQL: Creates initial quarterly revenue query\n3. Execute SQL: Runs the query\n4. Reflect: Notices missing seasonal adjustment logic\n5. Add Fix Node: Corrects the query with seasonal calculations\n6. Output: Final results with proper seasonal adjustments\n</code></pre>"},{"location":"workflow/orchestration/#2-fixed-workflow","title":"2. Fixed Workflow","text":"<p>Purpose: Deterministic SQL generation with predictable execution path</p> <p>Node Sequence: <pre><code>Schema Linking \u2192 Generate SQL \u2192 Execute SQL \u2192 Output\n</code></pre></p> <p>Key Features:</p> <ul> <li>Predictable: Always follows the same execution path</li> <li>Fast: No reflection overhead</li> <li>Simple: Easy to understand and debug</li> <li>Reliable: Consistent behavior for well-understood problems</li> </ul> <p>Best For:</p> <ul> <li>Simple, straightforward queries</li> <li>Well-defined data requirements</li> <li>Situations where you know exactly what you need</li> <li>Performance-critical applications</li> </ul> <p>Real-world Example:</p> <pre><code>User: \"List all customers from California\"\n\nProcess:\n1. Schema Linking: Finds customers table with state column\n2. Generate SQL: Creates \"SELECT * FROM customers WHERE state = 'CA'\"\n3. Execute SQL: Returns California customers\n4. Output: Displays results\n</code></pre>"},{"location":"workflow/orchestration/#3-metric-to-sql-workflow","title":"3. Metric-to-SQL Workflow","text":"<p>Purpose: Generate SQL from predefined business metrics</p> <p>Node Sequence: <pre><code>Schema Linking \u2192 Search Metrics \u2192 Date Parser \u2192 Generate SQL \u2192 Execute SQL \u2192 Output\n</code></pre></p> <p>Key Features:</p> <ul> <li>Metric-driven: Starts with business metrics rather than raw SQL</li> <li>Time-aware: Includes date parsing for temporal queries</li> <li>Reusable: Leverages existing metric definitions</li> <li>Standardized: Ensures consistent business calculations</li> </ul> <p>Best For:</p> <ul> <li>Business intelligence and reporting</li> <li>Standardized KPI calculations</li> <li>Time-series analysis</li> <li>Dashboards and regular reports</li> </ul> <p>Real-world Example:</p> <pre><code>User: \"Show monthly active users for the last quarter\"\n\nProcess:\n1. Schema Linking: Finds user_activity table\n2. Search Metrics: Finds \"monthly_active_users\" metric definition\n3. Date Parser: Determines \"last quarter\" date range\n4. Generate SQL: Creates query using the metric definition\n5. Execute SQL: Runs the metric calculation\n6. Output: Displays monthly active users by month\n</code></pre>"},{"location":"workflow/orchestration/#workflow-configuration","title":"Workflow Configuration","text":""},{"location":"workflow/orchestration/#customizing-workflows","title":"Customizing Workflows","text":"<p>You can create custom workflow templates by adding them to your <code>agent.yml</code> configuration:</p> <pre><code>agent:\n  workflow:\n    plan: custom_analytics  # Set your custom plan as default\n\n    custom_analytics:\n      - schema_linking\n      - search_metrics\n      - generate_sql\n      - execute_sql\n      - compare\n      - output\n\n    data_exploration:\n      - schema_linking\n      - doc_search\n      - generate_sql\n      - execute_sql\n      - reflect\n      - output\n</code></pre>"},{"location":"workflow/orchestration/#advanced-workflow-features","title":"Advanced Workflow Features","text":""},{"location":"workflow/orchestration/#parallel-execution","title":"Parallel Execution","text":"<p>Workflows support parallel node execution for improved performance:</p> <pre><code>agent:\n  workflow:\n    plan: bird_para\n\n    bird_para:\n      - schema_linking\n      - parallel:\n        - generate_sql\n        - reasoning\n      - selection\n      - execute_sql\n      - output\n</code></pre>"},{"location":"workflow/orchestration/#sub-workflows","title":"Sub-workflows","text":"<p>You can define reusable sub-workflows:</p> <pre><code>agent:\n  workflow:\n    plan: main_workflow\n\n    main_workflow:\n      - schema_linking\n      - parallel:\n        - subworkflow1\n        - subworkflow2\n      - selection\n      - execute_sql\n      - output\n\n    subworkflow1:\n      - search_metrics\n      - generate_sql\n\n    subworkflow2:\n      - search_metrics\n      - reasoning\n</code></pre>"},{"location":"workflow/orchestration/#sub-workflows-with-custom-configuration","title":"Sub-workflows with Custom Configuration","text":"<p>Sub-workflows can reference separate configuration files:</p> <pre><code>agent:\n  workflow:\n    plan: multi_agent\n\n    multi_agent:\n      - schema_linking\n      - parallel:\n        - agent1_workflow\n        - agent2_workflow\n      - selection\n      - output\n\n    agent1_workflow:\n      steps:\n        - search_metrics\n        - generate_sql\n      config: multi/agent1.yaml\n\n    agent2_workflow:\n      steps:\n        - reasoning\n        - reflect\n      config: multi/agent2.yaml\n</code></pre>"},{"location":"workflow/orchestration/#workflow-parameters","title":"Workflow Parameters","text":"<p>Workflows can be configured with parameters:</p> <pre><code># Use specific workflow\ndatus run --namespace &lt;your_namespace&gt; --task \"your query\" --plan reflection\n\n# Use custom workflow\ndatus run --namespace &lt;your_namespace&gt; --task \"your query\" --plan custom_analytics\n</code></pre>"},{"location":"workflow/orchestration/#available-parameters","title":"Available Parameters","text":"Parameter Description Default Options <code>--plan</code> Workflow type to execute <code>reflection</code> <code>reflection</code>, <code>fixed</code>, <code>metric_to_sql</code>, custom <code>--namespace</code> Database namespace Required Any configured namespace <code>--task</code> Natural language query Required Any string <code>--max_iterations</code> Maximum reflection rounds <code>3</code> Integer <code>--save_dir</code> Directory to save workflow state <code>./save</code> Any valid path"},{"location":"workflow/orchestration/#best-practices","title":"Best Practices","text":""},{"location":"workflow/orchestration/#workflow-selection","title":"Workflow Selection","text":"<p>Use Fixed for Simple Queries</p> <ul> <li>Direct data retrieval</li> <li>Well-understood requirements</li> <li>Performance-critical scenarios</li> </ul> <p>Use Reflection for Complex Analysis</p> <ul> <li>Multi-table joins</li> <li>Business logic implementation</li> <li>Uncertain or exploratory queries</li> </ul> <p>Use Metric-to-SQL for Standardized Reports</p> <ul> <li>KPI calculations</li> <li>Regular business reports</li> <li>Time-series analysis</li> </ul>"},{"location":"workflow/orchestration/#debugging-and-monitoring","title":"Debugging and Monitoring","text":"<pre><code># Enable debug mode for detailed logging\ndatus run --namespace &lt;your_namespace&gt; --task \"your query\" --debug\n\n# Save workflow state for inspection\ndatus run --namespace &lt;your_namespace&gt; --task \"your query\" --save_dir ./debug_session\n\n# Resume from saved state\ndatus resume --save_dir ./debug_session\n</code></pre>"},{"location":"workflow/orchestration/#conclusion","title":"Conclusion","text":"<p>Workflow orchestration is the backbone of Datus Agent's intelligent SQL generation capabilities. By understanding the different workflow types and their appropriate use cases, you can leverage the full power of the system to solve complex data analysis problems efficiently and reliably.</p>"},{"location":"zh/","title":"\u4ecb\u7ecd","text":"<p>Datus \u662f\u4e00\u4e2a\u5f00\u6e90\u6570\u636e\u5de5\u7a0b\u667a\u80fd\u4f53\uff0c\u7528\u4e8e\u4e3a\u4f60\u7684\u6570\u636e\u7cfb\u7edf\u6784\u5efa \u53ef\u6f14\u5316\u7684\u4e0a\u4e0b\u6587\u3002\u4e0e\u53ea\u8d1f\u8d23\u642c\u8fd0\u6570\u636e\u7684\u4f20\u7edf\u5de5\u5177\u4e0d\u540c\uff0cDatus \u4f1a\u6355\u83b7\u3001\u5b66\u4e60\u5e76\u8fdb\u5316\u56f4\u7ed5\u6570\u636e\u7684\u77e5\u8bc6\uff0c\u5c06\u5143\u6570\u636e\u3001\u53c2\u8003 SQL\u3001\u8bed\u4e49\u6a21\u578b\u548c\u6307\u6807\u8f6c\u5316\u4e3a\u4e00\u4e2a\u4e0d\u65ad\u751f\u957f\u7684\u77e5\u8bc6\u5e93\uff0c\u4e3a AI \u67e5\u8be2\u63d0\u4f9b\u4f9d\u636e\u5e76\u6d88\u9664\u5e7b\u89c9\u3002</p> <p>\u501f\u52a9 Datus\uff0c\u6570\u636e\u5de5\u7a0b\u5e08\u80fd\u591f\u628a\u7cbe\u529b\u4ece\u7f16\u5199\u91cd\u590d\u7684 SQL \u8f6c\u5411\u6784\u5efa\u53ef\u590d\u7528\u3001\u9762\u5411 AI \u7684\u4e0a\u4e0b\u6587\u3002\u6bcf\u4e00\u6b21\u67e5\u8be2\u3001\u7ea0\u9519\u548c\u9886\u57df\u89c4\u5219\u90fd\u4f1a\u6210\u4e3a\u957f\u671f\u8bb0\u5fc6\u5e2e\u52a9\u4e13\u7528\u5b50\u4ee3\u7406\u4e3a\u6574\u4e2a\u7ec4\u7ec7\u63d0\u4f9b\u51c6\u786e\u3001\u5177\u5907\u9886\u57df\u8ba4\u77e5\u7684\u5206\u6790\u3002</p> <p></p> <p>\u9762\u5411\u4e0d\u540c\u7528\u6237\u7684\u4e09\u4e2a\u5165\u53e3</p> <ul> <li>Datus-CLI\uff1a\u9762\u5411\u6570\u636e\u5de5\u7a0b\u5e08\u7684 AI \u9a71\u52a8\u547d\u4ee4\u884c\u754c\u9762\u2014\u2014\u5c31\u50cf\u201c\u4e13\u4e3a\u6570\u636e\u5de5\u7a0b\u6253\u9020\u7684 Claude Code\u201d\u3002\u4f60\u53ef\u4ee5\u4ea4\u4e92\u5f0f\u5730\u7f16\u5199 SQL\u3001\u6784\u5efa\u5b50\u4ee3\u7406\u5e76\u7ef4\u62a4\u4e0a\u4e0b\u6587\u3002</li> <li>Datus-Chat\uff1a\u9762\u5411\u6570\u636e\u5206\u6790\u5e08\u7684\u7f51\u9875\u804a\u5929\u673a\u5668\u4eba\uff0c\u652f\u6301\u591a\u8f6e\u5bf9\u8bdd\u4ee5\u53ca\u5185\u7f6e\u53cd\u9988\u673a\u5236\uff08\u70b9\u8d5e\u3001\u95ee\u9898\u53cd\u9988\u3001\u6210\u529f\u6848\u4f8b\uff09\u3002</li> <li>Datus-API\uff1a\u4e3a\u5176\u4ed6\u667a\u80fd\u4f53\u6216\u5e94\u7528\u63d0\u4f9b\u7a33\u5b9a\u3001\u51c6\u786e\u7684\u6570\u636e\u670d\u52a1\u7684 RESTful API\u3002</li> </ul> <p>\u4e24\u79cd\u6267\u884c\u6a21\u5f0f</p> <ul> <li>Agentic \u6a21\u5f0f\uff1a\u9002\u5408\u4e34\u65f6\u5f00\u53d1\u548c\u63a2\u7d22\u6027\u6d41\u7a0b\u3002\u7075\u6d3b\u3001\u5bf9\u8bdd\u5f0f\uff0c\u5e76\u901a\u8fc7\u4e13\u4e1a\u5316\u7684\u5b50\u4ee3\u7406\u611f\u77e5\u4e0a\u4e0b\u6587\u3002</li> <li>Workflow \u6a21\u5f0f\uff1a\u4e3a\u9700\u8981\u9ad8\u7a33\u5b9a\u6027\u548c\u7f16\u6392\u80fd\u529b\u7684\u751f\u4ea7\u573a\u666f\u800c\u8bbe\u3002\u5de5\u4f5c\u6d41\u53ef\u4ee5\u628a\u5b50\u4ee3\u7406\u4f5c\u4e3a\u8282\u70b9\u6765\u6784\u5efa\u590d\u6742\u7684\u7ba1\u9053\u3002</li> </ul> <p>\u6838\u5fc3\u5728\u4e8e\u4e0a\u4e0b\u6587\u5f15\u64ce</p> <p>Datus \u7684\u6838\u5fc3\u662f\u5176 \u4e0a\u4e0b\u6587\u5f15\u64ce\uff0c\u878d\u5408\u4e86\u4eba\u5de5\u4e13\u4e1a\u77e5\u8bc6\u4e0e AI \u80fd\u529b\uff1a</p> <ul> <li>\u81ea\u52a8\u6355\u83b7\u5143\u6570\u636e\u3001\u6307\u6807\u3001\u53c2\u8003 SQL\u3001\u6587\u6863\u548c\u6210\u529f\u6848\u4f8b</li> <li>\u652f\u6301\u4eba\u5728\u56de\u8def\u7684\u7b56\u5212\u4e0e\u8fed\u4ee3</li> <li>\u4e3a\u5b50\u4ee3\u7406\u548c\u5de5\u4f5c\u6d41\u63d0\u4f9b\u4e30\u5bcc\u3001\u5177\u9886\u57df\u7279\u5f02\u6027\u7684\u4e0a\u4e0b\u6587</li> </ul> <p>\u7075\u6d3b\u7684\u96c6\u6210\u5c42</p> <p>Datus \u53ef\u4ee5\u65e0\u7f1d\u5bf9\u63a5\u4f60\u73b0\u6709\u7684\u6280\u672f\u6808\uff1a</p> <ul> <li>\u5927\u6a21\u578b\uff1a\u652f\u6301 OpenAI\u3001Claude\u3001DeepSeek\u3001Qwen\u3001Kimi \u7b49\uff08\u53c2\u89c1\u914d\u7f6e\uff09</li> <li>\u6570\u636e\u4ed3\u5e93\uff1a\u652f\u6301 StarRocks\u3001Snowflake\u3001DuckDB\u3001SQLite\u3001PostgreSQL \u7b49\uff08\u53c2\u89c1\u547d\u540d\u7a7a\u95f4\u914d\u7f6e\uff09</li> <li>\u8bed\u4e49\u5c42\uff1a\u517c\u5bb9 MetricFlow \u7684\u6307\u6807\u5b9a\u4e49\u4e0e\u67e5\u8be2</li> <li>\u53ef\u6269\u5c55\u6027\uff1a\u901a\u8fc7 MCP\uff08Model Context Protocol\uff09\u96c6\u6210\u81ea\u5b9a\u4e49\u6269\u5c55</li> </ul>"},{"location":"zh/#_2","title":"\u5feb\u901f\u5165\u95e8","text":"<p>\u51e0\u5206\u949f\u5185\u5373\u53ef\u542f\u52a8\u4f60\u7684 Datus Agent\u3002</p> <p>\u4ece\u8fd9\u91cc\u5f00\u59cb</p> <p> \u5feb\u901f\u5165\u95e8\u6307\u5357</p> <p>\u4e86\u89e3 Datus \u5982\u4f55\u5229\u7528\u6570\u636e\u8d44\u4ea7\u4e2d\u7684\u4e0a\u4e0b\u6587\u6570\u636e\u5de5\u7a0b\u4e0d\u65ad\u5b66\u4e60\u548c\u6539\u8fdb\u3002</p> <p>\u638c\u63e1\u5173\u952e\u6982\u5ff5</p> <p> \u4e0a\u4e0b\u6587\u6570\u636e\u5de5\u7a0b</p>"},{"location":"zh/#_3","title":"\u91cd\u70b9\u4e3b\u9898","text":"<ul> <li> <p> Datus CLI</p> <p>\u9762\u5411\u672c\u5730\u5f00\u53d1\u548c\u5b9e\u65f6\u9884\u89c8\u6570\u636e\u5de5\u4f5c\u6d41\u7684\u547d\u4ee4\u884c\u754c\u9762\u3002</p> <p> \u4e86\u89e3\u66f4\u591a</p> </li> <li> <p> \u77e5\u8bc6\u5e93</p> <p>\u7528\u4e8e\u7ec4\u7ec7\u548c\u7ba1\u7406\u6570\u636e\u8d44\u4ea7\u4e0e\u6587\u6863\u7684\u96c6\u4e2d\u5f0f\u5b58\u50a8\u5e93\u3002</p> <p> \u6d4f\u89c8\u77e5\u8bc6\u5e93</p> </li> <li> <p> \u5b50\u4ee3\u7406\u7cfb\u7edf</p> <p>\u901a\u8fc7\u4e13\u7528\u5b50\u4ee3\u7406\u6269\u5c55 Datus\uff0c\u4ee5\u5904\u7406\u4e0d\u540c\u7684\u6570\u636e\u5de5\u7a0b\u4efb\u52a1\u548c\u6d41\u7a0b\u3002</p> <p> \u63a2\u7d22\u5b50\u4ee3\u7406</p> </li> <li> <p> \u5de5\u4f5c\u6d41\u7ba1\u7406</p> <p>\u901a\u8fc7\u53ef\u914d\u7f6e\u7684\u5de5\u4f5c\u6d41\u6784\u5efa\u5668\u8bbe\u8ba1\u548c\u7f16\u6392\u590d\u6742\u7684\u6570\u636e\u7ba1\u9053\u3002</p> <p> \u63a2\u7d22\u5de5\u4f5c\u6d41</p> </li> </ul>"},{"location":"zh/benchmark/benchmark_manual/","title":"\u57fa\u51c6\u6d4b\u8bd5\uff08Benchmark\uff09","text":"<p>\u4f7f\u7528\u884c\u4e1a\u6807\u51c6\u6570\u636e\u96c6\u8bc4\u4f30 Datus Agent \u7684\u8868\u73b0\u4e0e\u80fd\u529b\u3002\u9488\u5bf9 BIRD \u4e0e Spider 2.0-Snow \u7b49\u6570\u636e\u96c6\u8fd0\u884c\u5168\u9762\u6d4b\u8bd5\uff0c\u8861\u91cf\u6b63\u786e\u7387\u3001\u6267\u884c\u6210\u529f\u7387\u4e0e\u67e5\u8be2\u751f\u6210\u8d28\u91cf\u3002</p>"},{"location":"zh/benchmark/benchmark_manual/#_1","title":"\u6982\u89c8","text":"<p>\u57fa\u51c6\u6d4b\u8bd5\u6a21\u5f0f\u53ef\u5e2e\u52a9\u4f60\uff1a</p> <ul> <li>\u8861\u91cf\u51c6\u786e\u6027\uff1a\u8bc4\u4f30\u4ece\u81ea\u7136\u8bed\u8a00\u5230 SQL \u7684\u6b63\u786e\u7387</li> <li>\u8ddf\u8e2a\u6210\u529f\u7387\uff1a\u89c2\u5bdf\u5728\u4e0d\u540c\u6570\u636e\u5e93\u4e0a\u7684\u6267\u884c\u6210\u529f\u60c5\u51b5</li> <li>\u5bf9\u6bd4\u7ed3\u679c\uff1a\u5c06\u751f\u6210\u7684\u7ed3\u679c\u4e0e\u671f\u671b\u8f93\u51fa\u8fdb\u884c\u6bd4\u5bf9</li> <li>\u53d1\u73b0\u6539\u8fdb\u70b9\uff1a\u5b9a\u4f4d\u53ef\u4f18\u5316\u4e0e\u9700\u8981\u8fed\u4ee3\u7684\u73af\u8282</li> </ul>"},{"location":"zh/benchmark/benchmark_manual/#docker","title":"Docker \u5feb\u901f\u5f00\u59cb","text":"<p>\u4f7f\u7528\u9884\u914d\u7f6e Docker \u955c\u50cf\uff0c\u5185\u7f6e\u57fa\u51c6\u6570\u636e\u96c6\uff0c\u5feb\u901f\u4e0a\u624b\u3002</p>"},{"location":"zh/benchmark/benchmark_manual/#_2","title":"\u7b2c\u4e00\u6b65\uff1a\u62c9\u53d6\u955c\u50cf","text":"<p>Tip</p> <p>\u5f00\u59cb\u524d\u8bf7\u786e\u4fdd\u5df2\u5b89\u88c5\u5e76\u542f\u52a8 Docker\u3002</p> Terminal<pre><code>docker pull datusai/datus-agent:0.2.0-rc1\n</code></pre>"},{"location":"zh/benchmark/benchmark_manual/#_3","title":"\u7b2c\u4e8c\u6b65\uff1a\u542f\u52a8\u5bb9\u5668","text":"<p>Tip</p> <p>Demo \u6570\u636e\u96c6\u5df2\u9884\u7f6e\uff0c\u4fbf\u4e8e\u5feb\u901f\u4f53\u9a8c\u3002</p> BIRD Terminal<pre><code>docker run --name datus \\\n  --env DEEPSEEK_API_KEY=&lt;your_api_key&gt;  \\\n  -d datusai/datus-agent:0.2.0\n</code></pre> Spider 2.0-Snow Terminal<pre><code>docker run --name datus \\\n  --env DEEPSEEK_API_KEY=&lt;your_api_key&gt;  \\\n  --env SNOWFLAKE_ACCOUNT=&lt;your_snowflake_acount&gt;  \\\n  --env SNOWFLAKE_USERNAME=&lt;your_snowflake_username&gt;  \\\n  --env SNOWFLAKE_PASSWORD=&lt;your_snowflake_password&gt;  \\\n  -d datusai/datus-agent:0.2.0\n</code></pre>"},{"location":"zh/benchmark/benchmark_manual/#_4","title":"\u7b2c\u4e09\u6b65\uff1a\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5","text":"<p>Warning</p> <p>\u5355\u4e2a\u4efb\u52a1\u53ef\u80fd\u9700\u8981\u6570\u5206\u949f\uff1b\u5168\u91cf\u8fd0\u884c\u53ef\u80fd\u8017\u65f6\u6570\u5c0f\u65f6\u5230\u6570\u5929\uff0c\u53d6\u51b3\u4e8e\u73af\u5883\u3002</p> <p>BIRD \u6570\u636e\u96c6</p> <p>Info</p> <p>\u4efb\u52a1 ID \u8303\u56f4\uff1a0-1533</p> \u6309\u4efb\u52a1 ID \u8fd0\u884c Terminal<pre><code>docker exec -it datus python -m datus.main benchmark  \\\n  --namespace bird_sqlite \\\n  --benchmark bird_dev \\\n  --benchmark_task_ids &lt;task_id&gt;\n</code></pre> \u8fd0\u884c\u5168\u90e8\u4efb\u52a1 Terminal<pre><code>docker exec -it datus python -m datus.main benchmark  \\\n  --namespace bird_sqlite \\\n  --benchmark bird_dev\n</code></pre> <p>Spider 2.0-Snow \u6570\u636e\u96c6</p> <p>Info</p> <p>\u4efb\u52a1 ID\uff08instance ID\uff09\u53ef\u5728 spider2-snow.jsonl \u4e2d\u67e5\u8be2\u3002</p> <p>Note</p> <p>\u542f\u52a8\u5bb9\u5668\u65f6\u9700\u914d\u7f6e Snowflake \u76f8\u5173\u73af\u5883\u53c2\u6570\u3002</p> \u6309\u4efb\u52a1 ID \u8fd0\u884c Terminal<pre><code>docker exec -it datus python -m datus.main benchmark  \\\n  --namespace snowflake \\\n  --benchmark spider2 \\\n  --benchmark_task_ids &lt;task_id&gt;\n</code></pre> \u8fd0\u884c\u5168\u90e8\u4efb\u52a1 Terminal<pre><code>docker exec -it datus python -m datus.main benchmark  \\\n  --namespace snowflake \\\n  --benchmark spider2\n</code></pre>"},{"location":"zh/benchmark/benchmark_manual/#_5","title":"\u7b2c\u56db\u6b65\uff1a\u67e5\u770b\u7ed3\u679c","text":"<p>Tip</p> <p>\u6bcf\u6b21\u57fa\u51c6\u8fd0\u884c\u90fd\u4f1a\u751f\u6210\u8be6\u7ec6\u7684\u6027\u80fd\u6982\u89c8\u4e0e\u4efb\u52a1\u660e\u7ec6\u3002</p> Benchmark Result<pre><code>================================================================================\nBENCHMARK ACCURACY EVALUATION REPORT\n================================================================================\nGenerated Time: 2025-09-18 12:07:30\n\nEXECUTIVE SUMMARY\n----------------------------------------\nTotal tasks analyzed: 1\nExecution success rate: 100.0%\nResult comparison match rate: 100.0%\n\nDETAILED STATISTICS\n----------------------------------------\nTotal comparisons performed: 1\nSuccessful matches: 1\nMismatches: 0\nComparison errors: 0\nEmpty result errors: 0\nMismatch rate: 0.0%\nError rate: 0.0%\n\nTASK BREAKDOWN BY CATEGORY\n----------------------------------------\nMatched tasks (1):\n14\n\nMismatched tasks (0):\nNone\n\nFailed tasks (0):\nNone\n\nADDITIONAL STATISTICS\n----------------------------------------\nOverall success rate: 100.0%\nSuccessful tasks: 1\nFailed tasks: 0\nMismatched tasks: 0\n\n================================================================================ [datus.utils.benchmark_utils]\n2025-09-18 12:07:30 [info     ]\nFinal Result: {...}\n</code></pre>"},{"location":"zh/cli/chat_command/","title":"\u804a\u5929\u547d\u4ee4 <code>/</code>","text":""},{"location":"zh/cli/chat_command/#1","title":"1. \u6982\u89c8","text":"<p>\u804a\u5929\u547d\u4ee4 <code>/</code> \u662f Datus-CLI \u7684\u6838\u5fc3\u3002\u5b83\u8ba9\u4f60\u53ef\u4ee5\u5728\u591a\u8f6e\u4f1a\u8bdd\u4e2d\u4e0e AI \u667a\u80fd\u4f53\u5bf9\u8bdd\uff0c\u7528\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u4efb\u52a1\uff0c\u5e76\u83b7\u5f97\u63a8\u7406\u6b65\u9aa4\u4e0e SQL \u5efa\u8bae\u3002\u628a\u5b83\u5f53\u6210\u4e00\u8d77\u63a2\u7d22\u6570\u636e\u3001\u8d77\u8349 SQL\u3001\u89c4\u5212\u5de5\u4f5c\u6d41\u7684\u526f\u9a7e\u9a76\u2014\u2014\u5168\u90e8\u90fd\u5728\u7ec8\u7aef\u4e2d\u5b8c\u6210\u3002</p> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u683c\u5f0f\u4e0e Datus \u5bf9\u8bdd\uff1a\u7eaf\u6587\u672c\u3001\u8981\u70b9\u5217\u8868\u3001\u903b\u8f91\u8349\u7a3f\u7b49\uff1b\u4e5f\u53ef\u4ee5\u81ea\u7531\u4fee\u6539\u6216\u8ffd\u95ee\u56de\u590d\u3002\u667a\u80fd\u4f53\u4f1a\u8bb0\u4f4f\u4f60\u7684\u6307\u4ee4\u548c\u5386\u53f2\u8f93\u51fa\uff0c\u8ba9\u4f60\u65e0\u9700\u91cd\u5934\u5f00\u59cb\u5c31\u80fd\u9010\u6b65\u4f18\u5316\u7ed3\u679c\u3002</p>"},{"location":"zh/cli/chat_command/#2","title":"2. \u57fa\u7840\u7528\u6cd5","text":"<p>\u8f93\u5165 <code>/</code> \u52a0\u6d88\u606f\u5373\u53ef\u5f00\u542f\u65b0\u4f1a\u8bdd\uff1a</p> <pre><code>/ How many orders were placed last week?\n</code></pre> <p>\u667a\u80fd\u4f53\u4f1a\u8fd4\u56de\u63a8\u7406\u8fc7\u7a0b\u4e0e\u5efa\u8bae\u7684 SQL\u3002\u968f\u540e\u53ef\u4ee5\u81ea\u7136\u8ddf\u8fdb\uff1a</p> <pre><code>/ Filter only for VIP customers\n</code></pre> <p>Datus \u4f1a\u5728\u601d\u8003\u65f6\u5b9e\u65f6\u6d41\u5f0f\u8f93\u51fa\uff0c\u5c55\u793a\u6bcf\u4e00\u6b65\u7684\u6267\u884c\u7ed3\u679c\u3002\u5982\u679c\u7ed3\u679c\u5305\u542b SQL\uff0c\u5c06\u4f1a\uff1a</p> <ul> <li>\u81ea\u52a8\u5728\u8f93\u51fa\u4e2d\u9ad8\u4eae SQL</li> <li>\u5c06 SQL \u590d\u5236\u5230\u526a\u8d34\u677f\uff0c\u65b9\u4fbf\u7acb\u5373\u590d\u7528</li> <li>\u6700\u7ec8\u8f93\u51fa\u4e00\u6bb5 Markdown \u683c\u5f0f\u7684\u7ed3\u679c\u6458\u8981</li> </ul> <p></p> <p></p> <p></p>"},{"location":"zh/cli/chat_command/#3","title":"3. \u9ad8\u7ea7\u80fd\u529b","text":""},{"location":"zh/cli/chat_command/#_2","title":"\u4e0a\u4e0b\u6587\u6ce8\u5165","text":"<p>\u4e0a\u4e0b\u6587\u6ce8\u5165\u53ef\u4ee5\u628a\u5df2\u6709\u7684\u6570\u636e\u8868\u3001\u6307\u6807\u6216\u6587\u4ef6\u76f4\u63a5\u62c9\u5165\u5bf9\u8bdd\u3002\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a</p>"},{"location":"zh/cli/chat_command/#_3","title":"\u6d4f\u89c8\u6a21\u5f0f","text":"<p>\u8f93\u5165 <code>@</code> \u540e\u6309 Tab\uff0c\u9010\u7ea7\u6d4f\u89c8\u4e0a\u4e0b\u6587\u6811\u3002\u6309\u7c7b\u522b\uff08\u6570\u636e\u8868 / \u6587\u4ef6 / \u6307\u6807\uff09\u5bfc\u822a\uff0c\u50cf\u76ee\u5f55\u4e00\u6837\u6df1\u5165\uff0c\u9009\u62e9\u9700\u8981\u7684\u6761\u76ee\u3002</p>"},{"location":"zh/cli/chat_command/#_4","title":"\u6a21\u7cca\u641c\u7d22\u6a21\u5f0f","text":"<p>\u8f93\u5165 <code>@</code> \u52a0\u5173\u952e\u8bcd\uff0c\u518d\u6309 Tab \u89e6\u53d1\u6a21\u7cca\u641c\u7d22\u3002Datus \u4f1a\u6309\u6587\u672c\u76f8\u4f3c\u5ea6\u63a8\u8350\u4e0a\u4e0b\u6587\u9879\uff0c\u8ba9\u4f60\u5728\u4e0d\u77e5\u9053\u7cbe\u786e\u8def\u5f84\u65f6\u4e5f\u80fd\u5feb\u901f\u5b9a\u4f4d\u3002</p> <p>\u8fd9\u662f\u4e3a\u63d0\u793a\u8bed\u6ce8\u5165\u7cbe\u786e\u4e0a\u4e0b\u6587\u6700\u5feb\u7684\u65b9\u5f0f\u3002</p> <p></p> <p></p>"},{"location":"zh/cli/chat_command/#_5","title":"\u4f1a\u8bdd\u547d\u4ee4","text":"<ul> <li><code>.clear</code>\uff1a\u6e05\u7a7a\u5f53\u524d\u4f1a\u8bdd\u4e0a\u4e0b\u6587\uff0c\u4ece\u5934\u5f00\u59cb</li> <li><code>.compact</code>\uff1a\u538b\u7f29\u5386\u53f2\u5bf9\u8bdd\uff0c\u51cf\u5c11\u4e0a\u4e0b\u6587\u5360\u7528\u540c\u65f6\u4fdd\u7559\u5173\u952e\u4fe1\u606f</li> <li>\u81ea\u52a8\u89e6\u53d1\uff1a\u5f53\u6a21\u578b\u4e0a\u4e0b\u6587\u4f7f\u7528\u7387\u8d85\u8fc7 90% \u65f6\uff0c\u4f1a\u81ea\u52a8\u6267\u884c <code>.compact</code>\uff0c\u786e\u4fdd\u804a\u5929\u4e0d\u4e2d\u65ad</li> <li><code>.chat_info</code>\uff1a\u67e5\u770b\u5f53\u524d\u6fc0\u6d3b\u7684\u4e0a\u4e0b\u6587\uff08\u6d88\u606f\u3001\u6570\u636e\u8868\u3001\u6307\u6807\uff09</li> </ul>"},{"location":"zh/cli/context_command/","title":"\u4e0a\u4e0b\u6587\u547d\u4ee4 <code>@</code>","text":""},{"location":"zh/cli/context_command/#1","title":"1. \u6982\u89c8","text":"<p>\u4e0a\u4e0b\u6587\u547d\u4ee4 <code>@</code> \u5141\u8bb8\u4f60\u5c06\u4e30\u5bcc\u7684\u4e0a\u4e0b\u6587\u77e5\u8bc6\u76f4\u63a5\u6ce8\u5165\u5bf9\u8bdd\u4f1a\u8bdd\u3002\u65e0\u9700\u8ba9\u6a21\u578b\u731c\u6d4b\u6570\u636e\u7ed3\u6784\uff0c\u4f60\u53ef\u4ee5\u660e\u786e\u6307\u51fa\u9700\u8981\u4f7f\u7528\u7684\u6570\u636e\u8868\u3001\u6307\u6807\u6216 SQL \u7247\u6bb5\uff0c\u4ece\u800c\u663e\u8457\u63d0\u9ad8\u751f\u6210 SQL \u7684\u51c6\u786e\u5ea6\u3002</p> <p>\u4e0a\u4e0b\u6587\u6761\u76ee\u88ab\u7ec4\u7ec7\u6210\u4e09\u68f5\u72ec\u7acb\u7684\u6811\uff1a</p> <ul> <li><code>@catalog</code> \u2014\u2014 \u7269\u7406\u6570\u636e\u7ed3\u6784\uff08\u6570\u636e\u5e93\u3001Schema\u3001\u6570\u636e\u8868\uff09</li> <li><code>@subject</code> \u2014\u2014 \u8bed\u4e49/\u4e1a\u52a1\u5c42\uff08\u57df\u3001\u5c42\u7ea7\u3001\u8bed\u4e49\u6a21\u578b\u3001\u6307\u6807\uff09</li> </ul> <p>\u901a\u8fc7\u7ec4\u5408\u8fd9\u4e9b\u7ed3\u6784\uff0c\u4f60\u5411 Datus \u63d0\u4f9b\u4e0e\u4f60\u4e00\u81f4\u7684\u5fc3\u667a\u6a21\u578b\uff0c\u8ba9\u5b83\u4ee5\u4f60\u7684\u89c6\u89d2\u7406\u89e3\u6570\u636e\uff0c\u800c\u4e0d\u662f\u51ed\u731c\u6d4b\u63a8\u65ad\u3002</p>"},{"location":"zh/cli/context_command/#2","title":"2. \u57fa\u7840\u7528\u6cd5","text":"<p>\u8f93\u5165 <code>@</code> \u5e76\u6309 Tab \u53ef\u4ee5\u5524\u8d77\u4e0a\u4e0b\u6587\u6d4f\u89c8\u5668\u3002\u6839\u636e\u4e0d\u540c\u547d\u4ee4\uff0c\u4f1a\u663e\u793a\u53ef\u9010\u7ea7\u5c55\u5f00\u7684\u6811\u72b6\u89c6\u56fe\uff1a</p>"},{"location":"zh/cli/context_command/#catalog","title":"@catalog","text":"<pre><code>catalog\n  \u2514\u2500\u2500 database\n      \u2514\u2500\u2500 schema\n          \u2514\u2500\u2500 table\n</code></pre> <p>\u5f53\u7126\u70b9\u4f4d\u4e8e\u5305\u542b \u8bed\u4e49\u6a21\u578b \u7684\u9762\u677f\u65f6\uff0c\u53ef\u901a\u8fc7 <code>Ctrl+e</code> \u8fdb\u884c\u7f16\u8f91\u3002</p> <p></p>"},{"location":"zh/cli/context_command/#_2","title":"\u7f16\u8f91\u57df\u5c42\u7ea7\u4e0e\u540d\u79f0","text":"<p>\u5f53\u7126\u70b9\u4f4d\u4e8e\u5de6\u4fa7\u7684 \u6811 \u65f6\uff0c\u53ef\u901a\u8fc7 <code>Ctrl+e</code> \u4fee\u6539\u3002</p> <p></p>"},{"location":"zh/cli/context_command/#_3","title":"\u7f16\u8f91\u6307\u6807\u8be6\u60c5","text":"<p>\u5f53\u7126\u70b9\u4f4d\u4e8e\u53f3\u4fa7\u5305\u542b \u6307\u6807\u8be6\u60c5 \u7684\u9762\u677f\u65f6\uff0c\u53ef\u901a\u8fc7 <code>Ctrl+e</code> \u4fee\u6539\u3002</p> <p></p>"},{"location":"zh/cli/context_command/#sql","title":"\u7f16\u8f91\u5386\u53f2 SQL","text":"<p>\u5f53\u7126\u70b9\u4f4d\u4e8e\u53f3\u4fa7\u663e\u793a \u5386\u53f2 SQL \u8be6\u60c5 \u7684\u9762\u677f\u65f6\uff0c\u53ef\u901a\u8fc7 <code>Ctrl+e</code> \u4fee\u6539\u3002</p> <p></p> <p>\u5173\u4e8e\u4e0a\u4e0b\u6587\u6811\u7684\u521d\u59cb\u5316\uff0c\u53ef\u53c2\u8003\u77e5\u8bc6\u5e93\u6587\u6863\u3002</p>"},{"location":"zh/cli/context_command/#3","title":"3. \u9ad8\u7ea7\u80fd\u529b","text":""},{"location":"zh/cli/context_command/#_4","title":"\u4e0a\u4e0b\u6587\u6ce8\u5165\u6a21\u5f0f","text":"<p>\u5728\u804a\u5929\u547d\u4ee4\u4e2d\u6709\u4e24\u79cd\u65b9\u5f0f\u6ce8\u5165\u4e0a\u4e0b\u6587\uff1a</p>"},{"location":"zh/cli/context_command/#_5","title":"\u6d4f\u89c8\u6a21\u5f0f","text":"<p>\u8f93\u5165 <code>@</code>\uff08\u6216 <code>@catalog</code>\u3001<code>@subject</code>\u3001<code>@sql</code>\uff09\u5e76\u6309 Tab\uff0c\u9010\u7ea7\u6d4f\u89c8\u6811\u72b6\u7ed3\u6784\uff0c\u76f4\u5230\u627e\u5230\u9700\u8981\u7684\u6570\u636e\u8868\u3001\u6307\u6807\u6216 SQL\u3002</p>"},{"location":"zh/cli/context_command/#_6","title":"\u6a21\u7cca\u641c\u7d22\u6a21\u5f0f","text":"<p>\u8f93\u5165 <code>@</code>\uff08\u6216 <code>@\u4efb\u610f\u6587\u672c</code>\uff09\u540e\u8ddf\u5173\u952e\u8bcd\uff0c\u518d\u6309 Tab\u3002Datus \u4f1a\u8de8\u6240\u6709\u4e0a\u4e0b\u6587\u6811\u8fdb\u884c\u6a21\u7cca\u641c\u7d22\u5e76\u63a8\u8350\u6700\u4f73\u5339\u914d\uff0c\u65e0\u9700\u8bb0\u4f4f\u7cbe\u786e\u8def\u5f84\u3002\u5728 !\u6267\u884c\u547d\u4ee4 \u4e2d\u6700\u8fd1\u641c\u7d22\u8fc7\u7684\u8868\u3001\u6307\u6807\u4e0e SQL \u4f1a\u4f18\u5148\u663e\u793a\u3002</p>"},{"location":"zh/cli/context_command/#_7","title":"\u793a\u4f8b","text":"<pre><code># \u6d4f\u89c8\u6a21\u5f0f \u2014\u2014 \u6309\u6b65\u9aa4\u9009\u62e9\n/ pay attention to @catalog &lt;Tab&gt;\n# \u4f9d\u6b21\u9009\u62e9 catalog &gt; my_database &gt; public &gt; customers\n\n# \u6a21\u7cca\u641c\u7d22\u6a21\u5f0f \u2014\u2014 \u5173\u952e\u5b57\u5feb\u901f\u67e5\u627e\n/ @revenue &lt;Tab&gt;\n# \u5c55\u793a\u6240\u6709\u4e0e revenue \u76f8\u5173\u7684\u6307\u6807\n</code></pre>"},{"location":"zh/cli/context_command/#_8","title":"\u4e0a\u4e0b\u6587\u7c7b\u578b","text":""},{"location":"zh/cli/context_command/#catalog_1","title":"\u7269\u7406\u6570\u636e\uff08<code>@catalog</code>\uff09","text":"<ul> <li>\u6570\u636e\u5e93\u4e0e Schema</li> <li>\u8868\u7ed3\u6784\u4e0e\u5b57\u6bb5\u5b9a\u4e49</li> <li>\u6570\u636e\u7c7b\u578b\u4e0e\u7ea6\u675f</li> <li>\u5916\u952e\u5173\u7cfb</li> </ul>"},{"location":"zh/cli/context_command/#subject_1","title":"\u4e1a\u52a1\u4e0a\u4e0b\u6587\uff08<code>@subject</code>\uff09","text":"<ul> <li>\u4e1a\u52a1\u57df\u4e0e\u5c42\u7ea7\u5212\u5206</li> <li>\u8bed\u4e49\u6a21\u578b\u4e0e\u4e1a\u52a1\u903b\u8f91</li> <li>\u8ba1\u7b97\u6307\u6807\u4e0e KPI</li> <li>\u4e1a\u52a1\u672f\u8bed\u8868\u4e0e\u5b9a\u4e49</li> </ul>"},{"location":"zh/cli/context_command/#sql_1","title":"\u5386\u53f2\u77e5\u8bc6\uff08<code>@sql</code>\uff09","text":"<ul> <li>\u5386\u53f2\u6267\u884c\u8fc7\u7684 SQL \u67e5\u8be2</li> <li>\u53ef\u590d\u7528\u7684 SQL \u7247\u6bb5\u4e0e\u6a21\u677f</li> <li>\u67e5\u8be2\u6a21\u5f0f\u4e0e\u6700\u4f73\u5b9e\u8df5</li> <li>\u4f18\u5316\u793a\u4f8b</li> </ul> <p>\u66f4\u591a\u5173\u4e8e\u5982\u4f55\u6784\u5efa\u8fd9\u4e9b\u4e0a\u4e0b\u6587\u6811\u7684\u5185\u5bb9\uff0c\u8bf7\u67e5\u9605 \u77e5\u8bc6\u5e93\u6587\u6863\u3002</p>"},{"location":"zh/cli/execution_command/","title":"\u5de5\u5177\u547d\u4ee4 <code>!</code>","text":""},{"location":"zh/cli/execution_command/#1","title":"1. \u6982\u89c8","text":"<p>\u4ee5 <code>!</code> \u4e3a\u524d\u7f00\u7684\u5de5\u5177\u547d\u4ee4\uff0c\u4e3a Datus-CLI \u4f1a\u8bdd\u63d0\u4f9b\u4e00\u7cfb\u5217 AI \u52a0\u6301\u7684\u80fd\u529b\u4e0e\u5b9e\u7528\u64cd\u4f5c\u3002\u4f60\u53ef\u4ee5\u5728\u4e0d\u79bb\u5f00\u4ea4\u4e92\u5f0f\u7ec8\u7aef\u7684\u524d\u63d0\u4e0b\uff0c\u5b8c\u6210\u6a21\u5f0f\u53d1\u73b0\u3001SQL \u751f\u6210\u3001\u67e5\u8be2\u4f18\u5316\u7b49\u667a\u80fd\u6570\u636e\u4efb\u52a1\u3002</p>"},{"location":"zh/cli/execution_command/#2","title":"2. \u547d\u4ee4\u5206\u7c7b","text":""},{"location":"zh/cli/execution_command/#21-ai","title":"2.1 AI \u5de5\u4f5c\u6d41\u547d\u4ee4","text":""},{"location":"zh/cli/execution_command/#run-query","title":"<code>!run &lt;query&gt;</code>","text":"<p>\u901a\u8fc7 AI \u667a\u80fd\u4f53\u8fd0\u884c\u81ea\u7136\u8bed\u8a00\u67e5\u8be2\uff0c\u5e76\u5b9e\u65f6\u5c55\u793a\u5de5\u4f5c\u6d41\u72b6\u6001\u3002</p> <pre><code>!run Find all users who made purchases in the last 30 days\n!run Calculate total revenue by product category\n</code></pre> <p>\u8be5\u547d\u4ee4\u4f1a\u521b\u5efa\u4ea4\u4e92\u5f0f\u5de5\u4f5c\u6d41\uff0c\u6d41\u7a0b\u5305\u62ec\uff1a</p> <ul> <li>\u81ea\u52a8\u6267\u884c\u6a21\u5f0f\u5339\u914d\uff08schema linking\uff09</li> <li>\u751f\u6210\u4f18\u5316\u540e\u7684 SQL \u67e5\u8be2</li> <li>\u6267\u884c\u67e5\u8be2\u5e76\u5c55\u793a\u7ed3\u679c</li> <li>\u5b9e\u65f6\u663e\u793a\u72b6\u6001\u8fdb\u5ea6</li> </ul>"},{"location":"zh/cli/execution_command/#22","title":"2.2 \u6a21\u5f0f\u53d1\u73b0\u547d\u4ee4","text":""},{"location":"zh/cli/execution_command/#sl-schema_linking","title":"<code>!sl</code> / <code>!schema_linking</code>","text":"<p>\u6267\u884c\u667a\u80fd\u6a21\u5f0f\u5339\u914d\uff0c\u4e3a\u4f60\u7684\u95ee\u9898\u67e5\u627e\u76f8\u5173\u7684\u6570\u636e\u8868\u4e0e\u5b57\u6bb5\u3002</p> <pre><code>!sl user purchase information\n!schema_linking sales data by region\n</code></pre> <p>\u7279\u6027\uff1a</p> <ul> <li>\u8bed\u4e49\u7ea7\u522b\u641c\u7d22\u76f8\u5173\u6570\u636e\u5e93\u8868</li> <li>\u5c55\u793a\u8868\u5b9a\u4e49\uff08DDL\uff09</li> <li>\u9884\u89c8\u6837\u4f8b\u6570\u636e</li> <li>\u53ef\u9009\u5339\u914d\u6a21\u5f0f\uff1afast\u3001medium\u3001slow\u3001from_llm</li> <li>\u53ef\u8bbe\u7f6e top_n \u8fd4\u56de\u6570\u91cf</li> </ul> <p>\u4ea4\u4e92\u5f0f\u63d0\u793a\u5c06\u5f15\u5bfc\u4f60\u5b8c\u6210\uff1a</p> <ul> <li>\u9009\u62e9 catalog / database / schema</li> <li>\u6307\u5b9a\u5339\u914d\u6570\u636e\u8868\u6570\u91cf</li> <li>\u9009\u62e9\u504f\u597d\u7684\u5339\u914d\u65b9\u5f0f</li> </ul>"},{"location":"zh/cli/execution_command/#23","title":"2.3 \u641c\u7d22\u53d1\u73b0\u547d\u4ee4","text":""},{"location":"zh/cli/execution_command/#sm-search_metrics","title":"<code>!sm</code> / <code>!search_metrics</code>","text":"<p>\u4f7f\u7528\u81ea\u7136\u8bed\u8a00\u5728\u6570\u636e\u76ee\u5f55\u4e2d\u641c\u7d22\u5bf9\u5e94\u7684\u6307\u6807\u3002</p> <pre><code>!sm monthly active users\n!search_metrics revenue growth rate\n</code></pre> <p>\u652f\u6301\u4ee5\u4e0b\u7b5b\u9009\u6761\u4ef6\uff1a</p> <ul> <li>Domain</li> <li>Layer1\uff08\u4e1a\u52a1\u5c42\uff09</li> <li>Layer2\uff08\u5b50\u5c42\uff09</li> <li>Top N \u7ed3\u679c</li> </ul>"},{"location":"zh/cli/execution_command/#ss-search_sql","title":"<code>!ss</code> / <code>!search_sql</code>","text":"<p>\u4f7f\u7528\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u641c\u7d22\u5386\u53f2 SQL\u3002</p> <pre><code>!ss queries about user retention\n!search_sql monthly sales reports\n</code></pre> <p>\u8fd4\u56de\u5185\u5bb9\u5305\u62ec\uff1a</p> <ul> <li>SQL \u6587\u672c\uff08\u8bed\u6cd5\u9ad8\u4eae\uff09</li> <li>\u67e5\u8be2\u6458\u8981\u4e0e\u5907\u6ce8</li> <li>\u6807\u7b7e\u4e0e\u5206\u7c7b</li> <li>\u57df/\u5c42\u7ea7\u5143\u6570\u636e</li> <li>\u6587\u4ef6\u8def\u5f84\u4e0e\u76f8\u5173\u5ea6\uff08\u8ddd\u79bb\u5206\u6570\uff09</li> </ul>"},{"location":"zh/cli/execution_command/#24-sql","title":"2.4 SQL \u751f\u6210\u4e0e\u4f18\u5316\u547d\u4ee4","text":""},{"location":"zh/cli/execution_command/#gen","title":"<code>!gen</code>","text":"<p>\u57fa\u4e8e\u81ea\u7136\u8bed\u8a00\u4efb\u52a1\u63cf\u8ff0\u751f\u6210 SQL\uff0c\u53ef\u9009\u6307\u5b9a\u8868\u7ea6\u675f\u3002</p> <pre><code>!gen Show me top 10 customers by revenue\n!gen Calculate year-over-year growth by product\n</code></pre> <p>\u547d\u4ee4\u884c\u4e3a\uff1a</p> <ul> <li>\u521b\u5efa\u65b0\u7684 SQL \u4efb\u52a1\u6216\u590d\u7528\u5f53\u524d\u4efb\u52a1</li> <li>\u5229\u7528\u4e0a\u4e0b\u6587\u4e2d\u7684\u6700\u65b0\u8868\u7ed3\u6784\u4e0e\u6307\u6807</li> <li>\u751f\u6210\u5e26\u89e3\u91ca\u7684\u4f18\u5316 SQL</li> <li>\u5c06\u7ed3\u679c\u4fdd\u5b58\u5230 CLI \u4e0a\u4e0b\u6587\u4ee5\u4fbf\u540e\u7eed\u64cd\u4f5c</li> </ul>"},{"location":"zh/cli/execution_command/#fix-description","title":"<code>!fix &lt;description&gt;</code>","text":"<p>\u6839\u636e\u63cf\u8ff0\u4fee\u590d\u4e0a\u4e00\u6b21\u6267\u884c\u7684 SQL\u3002</p> <pre><code>!fix The date filter should be for last quarter, not last month\n!fix Add grouping by region\n</code></pre> <p>\u524d\u63d0\u8981\u6c42\uff1a</p> <ul> <li>\u9700\u8981\u5df2\u6709\u7684 SQL \u67e5\u8be2\u8bb0\u5f55\u5728\u4e0a\u4e0b\u6587\u4e2d</li> <li>\u6267\u884c\u524d\u4f1a\u8fdb\u884c\u4ea4\u4e92\u5f0f\u786e\u8ba4</li> <li>\u4f1a\u4fdd\u7559\u539f\u67e5\u8be2\u4f9b\u5bf9\u6bd4\u53c2\u8003</li> </ul>"},{"location":"zh/cli/execution_command/#25-ai","title":"2.5 \u9ad8\u7ea7 AI \u547d\u4ee4","text":""},{"location":"zh/cli/execution_command/#gen_metrics","title":"<code>!gen_metrics</code>","text":"<p>\u6839\u636e SQL \u4e0e\u8868\u7ed3\u6784\u751f\u6210\u6307\u6807\u5b9a\u4e49\u3002</p> <pre><code>!gen_metrics\n</code></pre> <p>\u7279\u6027\uff1a</p> <ul> <li>\u4ece SQL \u4e2d\u62bd\u53d6\u6307\u6807\u5b9a\u4e49</li> <li>\u4ea4\u4e92\u5f0f\u914d\u7f6e\uff1a</li> <li>\u4efb\u52a1\u63cf\u8ff0</li> <li>\u6e90 SQL \u67e5\u8be2</li> <li>\u63d0\u793a\u7248\u672c</li> </ul>"},{"location":"zh/cli/execution_command/#gen_semantic_model","title":"<code>!gen_semantic_model</code>","text":"<p>\u751f\u6210\u7528\u4e8e\u6570\u636e\u5efa\u6a21\u4e0e\u6587\u6863\u7f16\u5199\u7684\u8bed\u4e49\u6a21\u578b\u3002</p> <pre><code>!gen_semantic_model\n</code></pre> <p>\u4ea4\u4e92\u5f0f\u63d0\u793a\u6db5\u76d6\uff1a</p> <ul> <li>\u6570\u636e\u8868\u9009\u62e9</li> <li>Catalog / database / schema \u5143\u6570\u636e</li> <li>\u4e1a\u52a1\u5c42\u7ea7\uff08layer1 / layer2\uff09</li> <li>\u57df\u5206\u7c7b</li> <li>\u63d0\u793a\u7248\u672c</li> </ul>"},{"location":"zh/cli/execution_command/#26","title":"2.6 \u5206\u6790\u547d\u4ee4","text":""},{"location":"zh/cli/execution_command/#reason","title":"<code>!reason</code>","text":"<p>\u6267\u884c SQL \u63a8\u7406\u4e0e\u8bf4\u660e\uff0c\u652f\u6301\u6d41\u5f0f\u8f93\u51fa\u3002</p> <pre><code>!reason\n</code></pre> <p>\u63d0\u4f9b\u5185\u5bb9\uff1a</p> <ul> <li>SQL \u67e5\u8be2\u5206\u6790</li> <li>\u67e5\u8be2\u903b\u8f91\u8bb2\u89e3</li> <li>\u6027\u80fd\u6ce8\u610f\u4e8b\u9879</li> <li>\u6f5c\u5728\u4f18\u5316\u5efa\u8bae</li> </ul>"},{"location":"zh/cli/execution_command/#compare","title":"<code>!compare</code>","text":"<p>\u5c06 SQL \u7ed3\u679c\u4e0e\u9884\u671f\u8fdb\u884c\u5bf9\u6bd4\u3002</p> <pre><code>!compare\n</code></pre> <p>\u7279\u6027\uff1a</p> <ul> <li>\u4ea4\u4e92\u5f0f\u8f93\u5165\u9884\u671f\u7ed3\u679c\uff08SQL \u6216\u6570\u636e\u683c\u5f0f\uff09</li> <li>\u8f93\u51fa\u8be6\u7ec6\u7684\u5bf9\u6bd4\u5206\u6790</li> <li>\u9ad8\u4eae\u5dee\u5f02\u70b9</li> </ul>"},{"location":"zh/cli/execution_command/#27","title":"2.7 \u5b9e\u7528\u547d\u4ee4","text":""},{"location":"zh/cli/execution_command/#save","title":"<code>!save</code>","text":"<p>\u5c06\u6700\u8fd1\u4e00\u6b21\u67e5\u8be2\u7ed3\u679c\u4fdd\u5b58\u5230\u6587\u4ef6\u3002</p> <pre><code>!save\n</code></pre> <p>\u4ea4\u4e92\u5f0f\u9009\u9879\uff1a</p> <ul> <li>\u6587\u4ef6\u7c7b\u578b\uff1ajson\u3001csv\u3001sql \u6216 all</li> <li>\u8f93\u51fa\u76ee\u5f55\uff08\u9ed8\u8ba4 <code>~/.datus/output</code>\uff09</li> <li>\u81ea\u5b9a\u4e49\u6587\u4ef6\u540d</li> </ul>"},{"location":"zh/cli/execution_command/#bash-command","title":"<code>!bash &lt;command&gt;</code>","text":"<p>\u6267\u884c\u5b89\u5168\u7684 Bash \u547d\u4ee4\uff08\u6709\u9650\u5236\uff09\u3002</p> <pre><code>!bash pwd\n!bash ls -la\n!bash cat config.yaml\n</code></pre> <p>\u5b89\u5168\u7b56\u7565\uff1a\u4ec5\u5141\u8bb8\u767d\u540d\u5355\u547d\u4ee4\uff1a</p> <ul> <li><code>pwd</code> \u2014\u2014 \u67e5\u770b\u5f53\u524d\u76ee\u5f55</li> <li><code>ls</code> \u2014\u2014 \u5217\u51fa\u76ee\u5f55\u5185\u5bb9</li> <li><code>cat</code> \u2014\u2014 \u5c55\u793a\u6587\u4ef6\u5185\u5bb9</li> <li><code>head</code> \u2014\u2014 \u67e5\u770b\u6587\u4ef6\u5f00\u5934</li> <li><code>tail</code> \u2014\u2014 \u67e5\u770b\u6587\u4ef6\u672b\u5c3e</li> <li><code>echo</code> \u2014\u2014 \u8f93\u51fa\u6587\u672c</li> </ul> <p>\u4e0d\u5728\u767d\u540d\u5355\u5185\u7684\u547d\u4ee4\u4f1a\u88ab\u62d2\u7edd\u5e76\u63d0\u793a\u5b89\u5168\u8b66\u544a\u3002</p>"},{"location":"zh/cli/execution_command/#3","title":"3. \u6700\u4f73\u5b9e\u8df5","text":"<ol> <li>\u5148\u505a\u6a21\u5f0f\u5339\u914d \u2014\u2014 \u4f7f\u7528 <code>!sl</code> \u5bfb\u627e\u76f8\u5173\u8868\uff0c\u518d\u751f\u6210\u67e5\u8be2</li> <li>\u5584\u7528\u641c\u7d22 \u2014\u2014 \u4f7f\u7528 <code>!sm</code>\u3001<code>!sh</code> \u4f18\u5148\u590d\u7528\u5df2\u6709\u6307\u6807\u4e0e\u67e5\u8be2</li> <li>\u8fed\u4ee3\u4f18\u5316 \u2014\u2014 \u7528 <code>!fix</code> \u5728\u73b0\u6709\u67e5\u8be2\u4e0a\u8fed\u4ee3\uff0c\u800c\u975e\u91cd\u65b0\u5f00\u59cb</li> <li>\u4fdd\u5b58\u6210\u679c \u2014\u2014 \u901a\u8fc7 <code>!save</code> \u4fdd\u5b58\u91cd\u8981\u7684\u67e5\u8be2\u7ed3\u679c</li> <li>\u5173\u6ce8\u5b89\u5168 \u2014\u2014 \u4f7f\u7528 <code>!bash</code> \u65f6\u6ce8\u610f\u767d\u540d\u5355\u9650\u5236</li> </ol>"},{"location":"zh/cli/execution_command/#4","title":"4. \u5b89\u5168\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u5de5\u5177\u547d\u4ee4\u4e0e Datus-CLI \u8fdb\u7a0b\u5171\u4eab\u6743\u9650</li> <li>Bash \u547d\u4ee4\u88ab\u9650\u5236\u5728\u5b89\u5168\u767d\u540d\u5355\u5185</li> <li><code>!bash</code> \u9ed8\u8ba4 10 \u79d2\u8d85\u65f6\uff0c\u9632\u6b62\u5361\u6b7b</li> <li>\u6240\u6709\u64cd\u4f5c\u90fd\u4f1a\u8bb0\u5f55\u65e5\u5fd7\u4ee5\u4f9b\u5ba1\u8ba1</li> <li>API \u51ed\u8bc1\u4e0e\u6570\u636e\u5e93\u8fde\u63a5\u5747\u7ecf\u8fc7\u5b89\u5168\u5904\u7406</li> </ul>"},{"location":"zh/cli/introduction/","title":"\u4ecb\u7ecd","text":"<p>Datus-CLI \u662f\u4e00\u6b3e\u9762\u5411\u6570\u636e\u5de5\u7a0b\u5e08\u8bbe\u8ba1\u7684 AI \u539f\u751f\u7ec8\u7aef SQL \u5ba2\u6237\u7aef\u3002\u5b83\u5c06\u667a\u80fd\u4f53\u5bf9\u8bdd\u4f53\u9a8c\u3001\u7cbe\u786e\u7684\u4e0a\u4e0b\u6587\u7ba1\u7406\u4e0e\u53ef\u590d\u73b0\u7684\u6267\u884c\u80fd\u529b\u6574\u5408\u8fdb\u4e00\u6761\u8f7b\u91cf\u7ea7\u5de5\u4f5c\u6d41\uff0c\u8ba9\u4f60\u80fd\u591f\u5728\u7ec8\u7aef\u4e2d\u5b8c\u6210\u6570\u636e\u601d\u8003\u3001SQL \u751f\u6210\u4e0e\u8fed\u4ee3\u3001\u4efb\u52a1\u6267\u884c\u7b49\u5168\u6d41\u7a0b\u64cd\u4f5c\u3002</p>"},{"location":"zh/cli/introduction/#_2","title":"\u6838\u5fc3\u547d\u4ee4","text":"<p>\u547d\u4ee4\u884c\u7684\u6838\u5fc3\u7531\u4e09\u4e2a\u201c\u547d\u4ee4\u201d\u7ec4\u6210\uff0c\u7b80\u5355\u9ad8\u6548\uff1a</p> <ul> <li><code>/</code> \u804a\u5929\u547d\u4ee4 \u2014\u2014 \u7528\u4e8e\u591a\u8f6e\u5bf9\u8bdd</li> <li><code>@</code> \u4e0a\u4e0b\u6587\u547d\u4ee4 \u2014\u2014 \u6309\u9700\u53ec\u56de\u5143\u6570\u636e\u4e0e\u6307\u6807</li> <li><code>!</code> \u6267\u884c\u547d\u4ee4 \u2014\u2014 \u7528\u4e8e\u786e\u5b9a\u6027\u3001\u53ef\u7f16\u6392\u7684\u64cd\u4f5c</li> </ul>"},{"location":"zh/cli/introduction/#_3","title":"\u989d\u5916\u7279\u6027","text":"<p>\u9664\u4e86\u4e09\u5927\u547d\u4ee4\uff0c\u4f60\u8fd8\u53ef\u4ee5\uff1a</p> <ul> <li>\u50cf\u4f20\u7edf SQL \u5ba2\u6237\u7aef\u4e00\u6837 \u76f4\u63a5\u8fd0\u884c SQL</li> <li>\u4f7f\u7528 \u4f1a\u8bdd\u547d\u4ee4\uff08\u5982 <code>.compact</code>\u3001<code>.clear</code>\uff09\u7ba1\u7406\u6216\u91cd\u7f6e\u4f1a\u8bdd</li> <li>\u901a\u8fc7 <code>.tables</code>\u3001<code>.databases</code> \u7b49\u547d\u4ee4 \u63a2\u7d22\u5143\u6570\u636e</li> <li>\u4f7f\u7528 <code>.mcp</code> \u6dfb\u52a0\u3001\u79fb\u9664\u6216\u6d4b\u8bd5 MCP \u670d\u52a1\u5668\uff0c\u6269\u5c55\u80fd\u529b\u8fb9\u754c</li> <li>\u501f\u52a9 \u8ba1\u5212\u6a21\u5f0f \u5728\u6267\u884c\u524d\u628a\u590d\u6742\u4efb\u52a1\u62c6\u89e3\u4e3a\u53ef\u5ba1\u9605\u7684\u6b65\u9aa4</li> </ul>"},{"location":"zh/cli/introduction/#vibe-sql","title":"\u4ec0\u4e48\u662f Vibe SQL\uff1f","text":"<p>Vibe SQL \u4ee3\u8868 Datus \u7684\u7406\u5ff5\uff1a\u4f60\u65e0\u9700\u4eb2\u81ea\u6572\u4e0b\u6bcf\u4e00\u884c SQL\u3002\u53ea\u8981\u7528\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u610f\u56fe\u4e0e\u6570\u636e\u201c\u6c1b\u56f4\u201d\uff0cDatus \u4f1a\uff1a</p> <ul> <li>\u5728\u5e55\u540e\u751f\u6210\u53ef\u8fd0\u884c\u7684 SQL</li> <li>\u81ea\u52a8\u6784\u5efa\u6240\u9700\u7684\u6570\u636e\u8868\u3001\u6307\u6807\u4e0e\u89c6\u56fe</li> <li>\u5c06\u7ed3\u679c\u8fde\u63a5\u5230\u53ef\u4ea4\u4ed8\u7ed9\u4e1a\u52a1\u65b9\u7684\u804a\u5929\u673a\u5668\u4eba\u6216\u5206\u6790\u754c\u9762</li> </ul>"},{"location":"zh/cli/introduction/#datus-cli","title":"Datus-CLI \u7684\u5dee\u5f02\u5316\u4f18\u52bf","text":"<ul> <li> <p>\u56f4\u7ed5\u4e0a\u4e0b\u6587\u800c\u975e\u63a7\u5236 \u2014\u2014 Datus \u5c06\u5de5\u4f5c\u6d41\u4e0a\u4e0b\u6587\u89c6\u4e3a\u77ed\u671f\u8bb0\u5fc6\uff08\u4efb\u52a1\u63cf\u8ff0\u3001\u6267\u884c\u8fc7\u7684 SQL \u4e0e\u7ed3\u679c/\u53cd\u601d\u3001\u9009\u4e2d\u7684\u8868\u548c\u6307\u6807\uff09\uff0c\u5e76\u4ece\u7528\u6237\u504f\u597d\u4e0e\u6570\u636e\u73af\u5883\uff08\u8840\u7f18\u3001\u6307\u6807\u3001\u6587\u6863\uff09\u4e2d\u6784\u5efa\u957f\u671f\u8bb0\u5fc6</p> </li> <li> <p>\u53ef\u89e3\u91ca\u4e14\u53ef\u9760\u7684\u6d41\u7a0b \u2014\u2014 \u5de5\u4f5c\u6d41\u53ef\u4ee5\u5728\u4efb\u610f\u8282\u70b9\u6682\u505c\u3001\u7f16\u8f91\u3001\u7ee7\u7eed\uff1b\u5f53\u4fe1\u5fc3\u4e0d\u8db3\u65f6\u5f15\u5165\u4eba\u5de5\u53c2\u4e0e\uff08HITL\uff09\uff0c\u517c\u987e\u63a2\u7d22\u6548\u7387\u4e0e\u7ed3\u679c\u53ef\u63a7</p> </li> <li> <p>\u53cc\u5411\u7684\u4e0a\u4e0b\u6587\u5de5\u7a0b \u2014\u2014 Datus \u901a\u8fc7\u6811\u7ed3\u6784 + \u5411\u91cf\u53ec\u56de\uff0c\u628a\u76ee\u5f55\u3001\u6307\u6807\u3001\u6210\u529f\u6848\u4f8b SQL \u4e0e\u5916\u90e8\u89c4\u5219\u6c89\u6dc0\u4e3a\u6301\u4e45\u8bb0\u5fc6\uff1b\u60f3\u8981\u7684\u4e0a\u4e0b\u6587\u4e00\u6b21 <code>@</code> \u5373\u53ef\u5230\u624b</p> </li> </ul>"},{"location":"zh/cli/introduction/#cli","title":"\u4e3a\u4ec0\u4e48\u9009\u62e9 CLI\uff1f","text":"<p>CLI \u63d0\u4f9b\u4e86\u5bf9\u4e0a\u4e0b\u6587\uff08\u4e0d\u4ec5\u662f\u4ee3\u7801\uff09\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\uff0c\u4f7f\u4f60\u5728\u4e0e AI \u534f\u4f5c\u65f6\u66f4\u5bb9\u6613\u4fdd\u6301\u6539\u52a8\u53ef\u63a7\u3001\u53ef\u590d\u73b0\u3002\u8fd9\u5bf9\u5e0c\u671b\u907f\u514d GUI \u5de5\u5177\u5e38\u89c1\u7684\u5927\u5e45\u5ea6\u3001\u4e0d\u900f\u660e\u7f16\u8f91\u7684\u56e2\u961f\u5c24\u4e3a\u91cd\u8981\u3002</p>"},{"location":"zh/cli/introduction/#_4","title":"\u5feb\u901f\u4e0a\u624b","text":"<p>\u5b8c\u6210\u5b89\u88c5\u4e0e\u521d\u59cb\u5316\u540e\uff0c\u53ef\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u542f\u52a8 Datus-CLI\uff1a</p> <pre><code>datus-cli --namespace duckdb-demo\n</code></pre>"},{"location":"zh/cli/mcp_extensions/","title":"MCP \u6269\u5c55","text":""},{"location":"zh/cli/mcp_extensions/#1","title":"1. \u6982\u89c8","text":"<p>MCP\uff08Model Context Protocol\uff09\u662f Datus-CLI \u8fde\u63a5\u5916\u90e8\u5de5\u5177\u670d\u52a1\u5668\u7684\u65b9\u5f0f\uff0c\u8ba9\u4f60\u7684\u667a\u80fd\u4f53\u80fd\u529b\u8d85\u8d8a\u5185\u7f6e\u529f\u80fd\u3002</p> <p>\u901a\u8fc7 <code>.mcp</code>\uff0c\u4f60\u53ef\u4ee5\uff1a</p> <ul> <li>\u6dfb\u52a0\u672c\u5730\u6216\u8fdc\u7a0b MCP \u670d\u52a1\u5668\uff08stdio\u3001HTTP\u3001SSE\uff09</li> <li>\u5217\u51fa\u6240\u6709\u53ef\u7528\u670d\u52a1\u5668\u53ca\u5176\u72b6\u6001</li> <li>\u68c0\u67e5\u670d\u52a1\u5668\u8fde\u63a5\u60c5\u51b5\u4e0e\u53ef\u7528\u5de5\u5177</li> <li>\u5728 CLI \u5185\u76f4\u63a5\u8c03\u7528\u4efb\u610f MCP \u670d\u52a1\u5668\u66b4\u9732\u7684\u5de5\u5177</li> </ul> <p>\u8fd9\u8ba9 Datus-CLI \u62e5\u6709\u65e0\u9650\u6269\u5c55\u6027\uff1a\u65e0\u9700\u6539\u52a8\u6838\u5fc3\u5373\u53ef\u63a5\u5165 SQLite\u3001Snowflake\u3001MetricFlow\u3001\u6587\u4ef6\u7cfb\u7edf\uff0c\u751a\u81f3\u81ea\u5efa\u7684 MCP \u670d\u52a1\u5668\u3002</p>"},{"location":"zh/cli/mcp_extensions/#2","title":"2. \u57fa\u7840\u7528\u6cd5","text":""},{"location":"zh/cli/mcp_extensions/#mcp_1","title":"\u6dfb\u52a0\u65b0\u7684 MCP \u670d\u52a1\u5668","text":"<pre><code>.mcp add &lt;name&gt; &lt;command&gt; [args...]\n</code></pre> <p>\u793a\u4f8b\uff1a</p> <pre><code># \u672c\u5730 stdio \u670d\u52a1\u5668\n.mcp add --transport stdio sqlite /Users/me/bin/uv -- -m mcp_sqlite_server\n\n# \u643a\u5e26\u8ba4\u8bc1\u5934\u7684 SSE \u670d\u52a1\u5668\n.mcp add --transport sse api-server https://api.example.com/mcp/sse \\\n  --header \"Authorization: Bearer token\" --timeout 30.0\n\n# HTTP \u6d41\u5f0f\u670d\u52a1\u5668\n.mcp add --transport http metricflow https://localhost:9000/mcp\n</code></pre>"},{"location":"zh/cli/mcp_extensions/#_1","title":"\u67e5\u770b\u5df2\u6709\u670d\u52a1\u5668","text":"<pre><code>.mcp list\n</code></pre> <p>\u5c55\u793a\u6240\u6709\u5df2\u914d\u7f6e\u7684 MCP \u670d\u52a1\u5668\u53ca\u5176\u72b6\u6001\uff1a</p> <pre><code>1. duckdb-mftutorial  \u2718 failed\n2. filesystem         \u2714 connected\n3. metricflow         \u2714 connected\n4. snowflake_local    \u2714 connected\n5. sqlite             \u2714 connected\n</code></pre> <p>\u6309 Enter \u53ef\u67e5\u770b\u8be6\u60c5\uff0c\u5305\u62ec\u547d\u4ee4\u3001\u53c2\u6570\u3001\u73af\u5883\u53d8\u91cf\u4e0e\u53ef\u7528\u5de5\u5177\u3002</p>"},{"location":"zh/cli/mcp_extensions/#_2","title":"\u68c0\u67e5\u6307\u5b9a\u670d\u52a1\u5668","text":"<pre><code>.mcp check &lt;mcp_name&gt;\n</code></pre> <p>\u9a8c\u8bc1\u8fde\u63a5\u72b6\u51b5\u5e76\u6253\u5370\u8be5\u670d\u52a1\u5668\u63d0\u4f9b\u7684\u5de5\u5177\u5217\u8868\u3002</p>"},{"location":"zh/cli/mcp_extensions/#_3","title":"\u8c03\u7528\u670d\u52a1\u5668\u5de5\u5177","text":"<pre><code>.mcp call &lt;mcp_name&gt;.&lt;tool_name&gt; &lt;args&gt;\n</code></pre> <p>\u793a\u4f8b\uff1a</p> <pre><code>.mcp call sqlite.list_tables\n.mcp call metricflow.list_metrics\n</code></pre>"},{"location":"zh/cli/mcp_extensions/#3","title":"3. \u9ad8\u7ea7\u7279\u6027","text":""},{"location":"zh/cli/mcp_extensions/#_4","title":"\u5b58\u50a8\u4e0e\u914d\u7f6e","text":"<ul> <li>\u6240\u6709 MCP \u670d\u52a1\u5668\u5b9a\u4e49\u5b58\u653e\u5728\u5355\u4e00 JSON \u6587\u4ef6\uff1a<code>~/.datus/conf/.mcp.json</code></li> <li>\u6bcf\u6761\u8bb0\u5f55\u5305\u542b\u547d\u4ee4\u3001\u53c2\u6570\u3001\u53ef\u9009\u7684\u73af\u5883\u53d8\u91cf\u4e0e Header</li> <li>\u53ef\u4ee5\u5728 command\u3001args\u3001env\u3001url\u3001headers \u4e2d\u4f7f\u7528 <code>${VAR}</code> \u6216 <code>${VAR:-default}</code> \u5c55\u5f00\u73af\u5883\u53d8\u91cf</li> </ul> <p>\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>{\n  \"mcpServers\": {\n    \"metricflow\": {\n      \"command\": \"/Users/me/miniconda3/bin/uv\",\n      \"args\": [\n        \"--directory\", \"/Users/me/src/mcp-metricflow-server\",\n        \"run\", \"mcp-metricflow-server\"\n      ],\n      \"env\": {\n        \"MF_PROJECT_DIR\": \"/Users/me/.metricflow/sample_models\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"zh/cli/mcp_extensions/#_5","title":"\u670d\u52a1\u5668\u7c7b\u578b","text":"<ul> <li>stdio \u2014\u2014 \u672c\u5730\u542f\u52a8\u5b50\u8fdb\u7a0b\uff0c\u901a\u8fc7 stdin/stdout \u901a\u4fe1</li> <li>http \u2014\u2014 \u8fde\u63a5\u5230\u53ef\u6d41\u5f0f\u54cd\u5e94\u7684 HTTP \u7aef\u70b9</li> <li>sse \u2014\u2014 \u8fde\u63a5\u5230 Server-Sent Events \u7aef\u70b9</li> </ul> <p>\u5f00\u53d1\u672c\u5730\u5de5\u5177\u4f18\u5148\u4f7f\u7528 stdio\uff08\u6700\u5feb\uff09\uff1bhttp \u9002\u5408\u5e38\u9a7b\u670d\u52a1\uff1bsse \u9002\u7528\u4e8e\u8fdc\u7aef\u4e91\u670d\u52a1\u3002</p>"},{"location":"zh/cli/mcp_extensions/#_6","title":"\u73af\u5883\u53d8\u91cf\u5c55\u5f00","text":"<p>MCP \u914d\u7f6e\u652f\u6301\u73af\u5883\u53d8\u91cf\u5c55\u5f00\uff1a</p> <pre><code>{\n  \"mcpServers\": {\n    \"snowflake\": {\n      \"command\": \"${PYTHON_PATH:-python}\",\n      \"args\": [\"-m\", \"mcp_snowflake_server\"],\n      \"env\": {\n        \"SNOWFLAKE_ACCOUNT\": \"${SNOWFLAKE_ACCOUNT}\",\n        \"SNOWFLAKE_USER\": \"${SNOWFLAKE_USER}\",\n        \"SNOWFLAKE_PASSWORD\": \"${SNOWFLAKE_PASSWORD:-}\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"zh/cli/mcp_extensions/#_7","title":"\u9519\u8bef\u5904\u7406\u4e0e\u8c03\u8bd5","text":"<ul> <li>\u6e05\u6670\u62a5\u544a\u670d\u52a1\u5668\u8fde\u63a5\u5931\u8d25\u539f\u56e0</li> <li>\u5de5\u5177\u8c03\u7528\u9519\u8bef\u4f1a\u9644\u5e26\u8be6\u7ec6\u4fe1\u606f</li> <li>\u63d0\u4f9b\u8c03\u8bd5\u6a21\u5f0f\u8bca\u65ad\u8fde\u63a5\u95ee\u9898</li> <li>\u9488\u5bf9\u77ac\u65f6\u5931\u8d25\u5177\u5907\u81ea\u52a8\u91cd\u8bd5\u903b\u8f91</li> </ul>"},{"location":"zh/cli/mcp_extensions/#_8","title":"\u5b89\u5168\u6027\u8003\u91cf","text":"<ul> <li>\u542b\u5bc6\u94a5\u7684\u73af\u5883\u53d8\u91cf\u4f1a\u5b89\u5168\u5904\u7406</li> <li>\u8ba4\u8bc1 Header \u4f1a\u52a0\u5bc6\u5b58\u50a8</li> <li>\u672c\u5730 stdio \u670d\u52a1\u5668\u4ee5\u7528\u6237\u6743\u9650\u8fd0\u884c</li> <li>\u8fdc\u7a0b\u8fde\u63a5\u91c7\u7528\u5b89\u5168\u534f\u8bae\uff08HTTPS/WSS\uff09</li> </ul>"},{"location":"zh/cli/mcp_extensions/#_9","title":"\u96c6\u6210\u793a\u4f8b","text":""},{"location":"zh/cli/mcp_extensions/#_10","title":"\u6570\u636e\u5e93\u96c6\u6210","text":"<pre><code># \u4e3a\u672c\u5730\u5f00\u53d1\u6dfb\u52a0 SQLite \u670d\u52a1\u5668\n.mcp add sqlite uvx mcp-server-sqlite --db-path ./data/sample.db\n\n# \u901a\u8fc7 MCP \u67e5\u8be2\u6570\u636e\u8868\n.mcp call sqlite.list_tables\n.mcp call sqlite.read_query \"SELECT * FROM customers LIMIT 5\"\n</code></pre>"},{"location":"zh/cli/mcp_extensions/#metricflow","title":"MetricFlow \u96c6\u6210","text":"<pre><code># \u6dfb\u52a0 MetricFlow \u670d\u52a1\u5668\u4ee5\u8bbf\u95ee\u8bed\u4e49\u5c42\n.mcp add metricflow python -m mcp_metricflow_server\n\n# \u8c03\u7528\u4e1a\u52a1\u6307\u6807\n.mcp call metricflow.list_metrics\n.mcp call metricflow.query_metrics --metrics revenue --dimensions customer_segment\n</code></pre>"},{"location":"zh/cli/mcp_extensions/#_11","title":"\u6587\u4ef6\u7cfb\u7edf\u96c6\u6210","text":"<pre><code># \u6dfb\u52a0\u6587\u4ef6\u7cfb\u7edf\u670d\u52a1\u5668\u4ee5\u6267\u884c\u6587\u4ef6\u64cd\u4f5c\n.mcp add filesystem python -m mcp_filesystem_server --base-path /project/data\n\n# \u901a\u8fc7 MCP \u6267\u884c\u6587\u4ef6\u64cd\u4f5c\n.mcp call filesystem.list_directory /reports\n.mcp call filesystem.read_file /reports/summary.md\n</code></pre>"},{"location":"zh/cli/plan_mode/","title":"\u8ba1\u5212\u6a21\u5f0f\u7528\u6237\u6307\u5357\uff08Beta\uff09","text":""},{"location":"zh/cli/plan_mode/#_1","title":"\u6982\u89c8","text":"<p>\u8ba1\u5212\u6a21\u5f0f\u662f\u4e00\u79cd\u4ea4\u4e92\u5f0f\u5de5\u4f5c\u6d41\u7279\u6027\uff0c\u5e2e\u52a9\u4f60\u5c06\u590d\u6742\u4efb\u52a1\u62c6\u89e3\u4e3a\u53ef\u7ba1\u7406\u7684\u6b65\u9aa4\u3002AI \u4f1a\u5148\u751f\u6210\u8be6\u7ec6\u6267\u884c\u8ba1\u5212\uff0c\u4f9b\u4f60\u5ba1\u9605\u3001\u4fee\u6539\u5e76\u63a7\u5236\u6267\u884c\u8282\u594f\uff0c\u800c\u4e0d\u662f\u7acb\u5373\u6267\u884c\u547d\u4ee4\u3002</p>"},{"location":"zh/cli/plan_mode/#_2","title":"\u5de5\u4f5c\u65b9\u5f0f","text":"<p>\u8ba1\u5212\u6a21\u5f0f\u5305\u542b\u4e09\u4e2a\u9636\u6bb5\uff1a</p> <ol> <li>\u8ba1\u5212\u751f\u6210 \u2014\u2014 AI \u5206\u6790\u8bf7\u6c42\u5e76\u751f\u6210\u9010\u6b65\u8ba1\u5212</li> <li>\u7528\u6237\u786e\u8ba4 \u2014\u2014 \u4f60\u5ba1\u9605\u8ba1\u5212\u5e76\u9009\u62e9\u6267\u884c\u65b9\u5f0f</li> <li>\u6267\u884c\u9636\u6bb5 \u2014\u2014 \u6839\u636e\u6240\u9009\u6a21\u5f0f\u9010\u6b65\u6267\u884c\u8ba1\u5212</li> </ol>"},{"location":"zh/cli/plan_mode/#_3","title":"\u5feb\u901f\u4e0a\u624b","text":"<p>\u63d0\u4ea4\u6d88\u606f\u524d\uff0c\u6309 Shift+Tab \u5207\u6362\u8ba1\u5212\u6a21\u5f0f\u5f00/\u5173\u3002\u542f\u7528\u540e\uff0c\u7cfb\u7edf\u4f1a\u8fdb\u5165\u89c4\u5212\u6d41\u7a0b\uff0c\u800c\u4e0d\u662f\u7acb\u523b\u6267\u884c\u3002</p>"},{"location":"zh/cli/plan_mode/#_4","title":"\u5de5\u4f5c\u6d41\u9636\u6bb5","text":""},{"location":"zh/cli/plan_mode/#_5","title":"\u9636\u6bb5\u4e00\uff1a\u8ba1\u5212\u751f\u6210","text":"<p>\u5728\u8ba1\u5212\u6a21\u5f0f\u4e0b\u63d0\u4ea4\u8bf7\u6c42\u540e\uff0cAI \u5c06\uff1a</p> <ul> <li>\u5206\u6790\u4f60\u7684\u9700\u6c42</li> <li>\u5c06\u4efb\u52a1\u62c6\u89e3\u4e3a\u6e05\u6670\u53ef\u6267\u884c\u7684\u6b65\u9aa4</li> <li>\u5c55\u793a\u5efa\u8bae\u7684\u6267\u884c\u8ba1\u5212</li> </ul> <p>\u793a\u4f8b\u8f93\u51fa\uff1a <pre><code>Plan Generated Successfully!\nExecution Plan:\n  1. Query the customer database for recent orders\n  2. Calculate total revenue by product category\n  3. Generate summary report with visualizations\n  4. Export results to CSV file\n</code></pre></p>"},{"location":"zh/cli/plan_mode/#_6","title":"\u9636\u6bb5\u4e8c\uff1a\u9009\u62e9\u6267\u884c\u6a21\u5f0f","text":"<p>\u751f\u6210\u8ba1\u5212\u540e\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u4f60\u9009\u62e9\u6267\u884c\u6a21\u5f0f\uff1a <pre><code>CHOOSE EXECUTION MODE:\n\n  1. Manual Confirm - Confirm each step\n  2. Auto Execute - Run all steps automatically\n  3. Revise - Provide feedback and regenerate plan\n  4. Cancel\n</code></pre></p>"},{"location":"zh/cli/plan_mode/#1","title":"\u9009\u9879 1\uff1a\u624b\u52a8\u786e\u8ba4\u6a21\u5f0f","text":"<ul> <li>\u9002\u7528\u573a\u666f\uff1a\u9700\u8981\u9010\u6b65\u5ba1\u67e5\u7684\u4efb\u52a1</li> <li>\u6267\u884c\u65b9\u5f0f\uff1a\u5728\u6bcf\u4e2a\u6b65\u9aa4\u6267\u884c\u524d\uff0c\u4f60\u4f1a\u770b\u5230\uff1a</li> <li>\u5e26\u8fdb\u5ea6\u6807\u8bb0\u7684\u5b8c\u6574\u8ba1\u5212\uff08\u2713 \u5b8c\u6210\u3001\u25b6 \u5f53\u524d\u3001\u25cb \u5f85\u6267\u884c\uff09</li> <li>\u5373\u5c06\u6267\u884c\u7684\u6b65\u9aa4\u8bf4\u660e</li> <li>\u7ee7\u7eed\u3001\u5207\u6362\u81ea\u52a8\u6a21\u5f0f\u3001\u91cd\u65b0\u89c4\u5212\u6216\u53d6\u6d88\u7684\u64cd\u4f5c\u9009\u9879</li> </ul> <p>\u4ea4\u4e92\u793a\u4f8b\uff1a <pre><code>Plan Progress:\n  \u2713 1. Query the customer database for recent orders\n  \u25b6 2. Calculate total revenue by product category\n  \u25cb 3. Generate summary report with visualizations\n  \u25cb 4. Export results to CSV file\n\nNext step: Calculate total revenue by product category\nOptions:\n  1. Execute this step\n  2. Execute this step and continue automatically\n  3. Revise remaining plan\n  4. Cancel\n\nYour choice (1-4) [1]:\n</code></pre></p>"},{"location":"zh/cli/plan_mode/#2","title":"\u9009\u9879 2\uff1a\u81ea\u52a8\u6267\u884c\u6a21\u5f0f","text":"<ul> <li>\u9002\u7528\u573a\u666f\uff1a\u5b9a\u4e49\u6e05\u6670\u3001\u65e0\u9700\u9010\u6b65\u5ba1\u9605\u7684\u4efb\u52a1</li> <li>\u6267\u884c\u65b9\u5f0f\uff1a\u6240\u6709\u6b65\u9aa4\u81ea\u52a8\u4e32\u884c\u6267\u884c\uff0c\u6700\u5c11\u6253\u65ad</li> <li>\u63d0\u793a\uff1a\u968f\u65f6\u53ef\u4ee5\u4e2d\u65ad\u6267\u884c</li> </ul> <p>\u4ea4\u4e92\u793a\u4f8b\uff1a <pre><code>Plan Progress:\n  \u2713 1. Query the customer database for recent orders\n  \u25b6 2. Calculate total revenue by product category\n  \u25cb 3. Generate summary report with visualizations\n  \u25cb 4. Export results to CSV file\n\nAuto Mode: Calculate total revenue by product category\nExecute? (y/n) [y]:\n</code></pre></p>"},{"location":"zh/cli/plan_mode/#3","title":"\u9009\u9879 3\uff1a\u91cd\u65b0\u89c4\u5212","text":"<ul> <li>\u9002\u7528\u573a\u666f\uff1a\u521d\u59cb\u8ba1\u5212\u4e0d\u7b26\u5408\u9884\u671f</li> <li>\u6267\u884c\u65b9\u5f0f\uff1a</li> <li>\u63d0\u4f9b\u9700\u8981\u8c03\u6574\u7684\u53cd\u9988</li> <li>AI \u6839\u636e\u53cd\u9988\u91cd\u65b0\u751f\u6210\u8ba1\u5212</li> <li>\u5df2\u5b8c\u6210\u7684\u6b65\u9aa4\u4f1a\u4fdd\u7559</li> <li>\u53ef\u591a\u6b21\u8fed\u4ee3\u76f4\u81f3\u6ee1\u610f</li> </ul> <p>\u793a\u4f8b\uff1a <pre><code>Feedback for replanning: Add data validation step before calculation\n\nReplanning with feedback: Add data validation step before calculation\n[New plan generated with validation step included]\n</code></pre></p>"},{"location":"zh/cli/plan_mode/#4","title":"\u9009\u9879 4\uff1a\u53d6\u6d88","text":"<ul> <li>\u505c\u6b62\u6574\u4e2a\u5de5\u4f5c\u6d41</li> <li>\u4e0d\u6267\u884c\u4efb\u4f55\u6b65\u9aa4</li> <li>\u5b89\u5168\u9000\u51fa\u8ba1\u5212\u6a21\u5f0f</li> </ul>"},{"location":"zh/cli/plan_mode/#_7","title":"\u8fdb\u5ea6\u8ffd\u8e2a","text":"<p>\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u7cfb\u7edf\u4f1a\u7528\u53ef\u89c6\u5316\u7b26\u53f7\u5b9e\u65f6\u5c55\u793a\u8fdb\u5ea6\uff1a</p> <ul> <li>\u2713\uff08\u7eff\u8272\u5bf9\u52fe\uff09\u2014\u2014 \u5df2\u5b8c\u6210\u6b65\u9aa4</li> <li>\u25b6\uff08\u9ec4\u8272\u7bad\u5934\uff09\u2014\u2014 \u6b63\u5728\u6267\u884c\u7684\u6b65\u9aa4</li> <li>\u25cb\uff08\u767d\u8272\u5706\u70b9\uff09\u2014\u2014 \u5f85\u6267\u884c\u6b65\u9aa4</li> </ul>"},{"location":"zh/cli/plan_mode/#_8","title":"\u6267\u884c\u4e2d\u7684\u9009\u9879","text":"<p>\u624b\u52a8\u6a21\u5f0f\u4e0b\u6267\u884c\u65f6\uff0c\u53ef\u4ee5\uff1a</p> <ol> <li>\u9010\u6b65\u7ee7\u7eed \u2014\u2014 \u4fdd\u6301\u5bf9\u6bcf\u4e2a\u6b65\u9aa4\u7684\u638c\u63a7</li> <li>\u5207\u6362\u5230\u81ea\u52a8\u6a21\u5f0f \u2014\u2014 \u52a0\u901f\u540e\u7eed\u6b65\u9aa4</li> <li>\u91cd\u65b0\u89c4\u5212\u5269\u4f59\u6b65\u9aa4 \u2014\u2014 \u6839\u636e\u5f53\u524d\u7ed3\u679c\u8c03\u6574\u540e\u7eed\u52a8\u4f5c</li> <li>\u53d6\u6d88\u6267\u884c \u2014\u2014 \u7ec8\u6b62\u5de5\u4f5c\u6d41</li> </ol>"},{"location":"zh/cli/plan_mode/#_9","title":"\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/cli/plan_mode/#_10","title":"\u4f55\u65f6\u9009\u62e9\u624b\u52a8\u6a21\u5f0f","text":"<ul> <li>\u590d\u6742\u7684\u6570\u636e\u5e93\u64cd\u4f5c</li> <li>\u53ef\u80fd\u4ea7\u751f\u526f\u4f5c\u7528\u7684\u4efb\u52a1</li> <li>\u5b66\u4e60\u65b0\u5de5\u4f5c\u6d41\u65f6</li> <li>\u9700\u8981\u9a8c\u8bc1\u7684\u5173\u952e\u64cd\u4f5c</li> </ul>"},{"location":"zh/cli/plan_mode/#_11","title":"\u4f55\u65f6\u9009\u62e9\u81ea\u52a8\u6a21\u5f0f","text":"<ul> <li>\u65e5\u5e38\u3001\u5df2\u9a8c\u8bc1\u7684\u4efb\u52a1</li> <li>\u62a5\u8868\u751f\u6210</li> <li>\u6570\u636e\u5bfc\u51fa</li> <li>\u81ea\u4fe1\u638c\u63e1\u7684\u591a\u6b65\u9aa4\u67e5\u8be2</li> </ul>"},{"location":"zh/cli/plan_mode/#_12","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u82e5\u6267\u884c\u8fc7\u7a0b\u4e2d\u67d0\u4e2a\u6b65\u9aa4\u5931\u8d25\uff1a</p> <ul> <li>\u7cfb\u7edf\u4f1a\u6807\u8bb0\u8be5\u6b65\u9aa4\u5931\u8d25</li> <li>\u624b\u52a8\u6a21\u5f0f\u4e0b\u6267\u884c\u4f1a\u6682\u505c</li> <li>\u4f60\u53ef\u4ee5\u91cd\u65b0\u89c4\u5212\u4ee5\u89e3\u51b3\u9519\u8bef</li> <li>\u5df2\u5b8c\u6210\u7684\u6b65\u9aa4\u4f1a\u88ab\u4fdd\u7559</li> </ul>"},{"location":"zh/cli/plan_mode/#_13","title":"\u603b\u7ed3","text":"<p>\u8ba1\u5212\u6a21\u5f0f\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5e2e\u52a9\u4f60\u638c\u63a7\u590d\u6742\u5de5\u4f5c\u6d41\uff1a</p> <ul> <li>\u5c06\u4efb\u52a1\u62c6\u89e3\u4e3a\u6e05\u6670\u6b65\u9aa4</li> <li>\u5728\u6267\u884c\u524d\u63d0\u4f9b\u5ba1\u9605\u673a\u4f1a</li> <li>\u6267\u884c\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u7075\u6d3b\u5ea6</li> <li>\u5728\u91cd\u65b0\u89c4\u5212\u65f6\u4fdd\u7559\u5df2\u5b8c\u6210\u8fdb\u5ea6</li> </ul> <p>\u5f53\u4f60\u9700\u8981\u7cbe\u7ec6\u638c\u63a7\u65f6\u9009\u62e9\u624b\u52a8\u6a21\u5f0f\uff0c\u786e\u4fe1\u7ed3\u679c\u53ef\u9760\u65f6\u4f7f\u7528\u81ea\u52a8\u6a21\u5f0f\uff1b\u82e5\u8ba1\u5212\u4e0d\u7406\u60f3\uff0c\u968f\u65f6\u91cd\u751f\u6210\u66f4\u5408\u9002\u7684\u7248\u672c\u3002</p>"},{"location":"zh/cli/reference/","title":"\u53c2\u8003","text":"<p>\u672c\u7ae0\u8282\u5185\u5bb9\u5c1a\u5728\u6574\u7406\uff0c\u5c06\u5728\u540e\u7eed\u7248\u672c\u8865\u5145\u5b8c\u6574\u7684\u547d\u4ee4\u53c2\u8003\u3002</p>"},{"location":"zh/cli/sql_execution/","title":"SQL \u6267\u884c","text":""},{"location":"zh/cli/sql_execution/#1","title":"1. \u6982\u89c8","text":"<p>\u9664\u4e86\u547d\u4ee4\uff08<code>/</code>\u3001<code>@</code>\u3001<code>!</code>\uff09\uff0cDatus-CLI \u4e5f\u80fd\u50cf\u4f20\u7edf SQL \u5ba2\u6237\u7aef\u4e00\u6837\u5de5\u4f5c\u3002\u4f60\u53ef\u4ee5\u76f4\u63a5\u6267\u884c SQL \u67e5\u8be2\uff0c\u5e76\u901a\u8fc7\u5185\u7f6e\u7684\u5143\u6570\u636e\u547d\u4ee4\uff08\u5982 <code>.tables</code>\u3001<code>.databases</code>\u3001<code>.schemas</code> \u7b49\uff09\u63a2\u7d22\u6570\u636e\u5e93\u7ed3\u6784\u3002</p> <p>\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u7ec4\u5185\u7f6e\u7684\u5143\u6570\u636e\u547d\u4ee4\uff0c\u4ee5\u7edf\u4e00\u65b9\u5f0f\u8bbf\u95ee\u4e0d\u540c\u6570\u636e\u5e93\u7684\u5143\u4fe1\u606f\uff1b\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u539f\u751f\u547d\u4ee4\uff0c\u5982 <code>SHOW DATABASES</code>\u3001<code>DESCRIBE TABLES</code> \u7b49\u3002</p>"},{"location":"zh/cli/sql_execution/#2","title":"2. \u57fa\u7840\u7528\u6cd5","text":""},{"location":"zh/cli/sql_execution/#sql_1","title":"\u6267\u884c SQL","text":"<p>\u5728 CLI \u4e2d\u76f4\u63a5\u8fd0\u884c SQL \u67e5\u8be2\uff1a</p> <pre><code>Datus-sql&gt; SELECT T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`District Name` = 'Fresno County Office of Education' AND T1.`Charter School (Y/N)` = 1\n</code></pre> <p>\u8f93\u51fa\uff1a <pre><code>\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n\u2503 Zip              \u2503\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n\u2502 93726-5309       \u2502\n\u2502 93628-9602       \u2502\n\u2502 93706-2611       \u2502\n\u2502 93726-5208       \u2502\n\u2502 93706-2819       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nReturned 5 rows in 0.01 seconds\n</code></pre></p>"},{"location":"zh/cli/sql_execution/#_1","title":"\u63a2\u7d22\u5143\u6570\u636e","text":"<p>\u4f7f\u7528\u5185\u7f6e\u5143\u6570\u636e\u547d\u4ee4\u67e5\u770b\u6570\u636e\u5e93\u7ed3\u6784\uff1a</p> <pre><code>.databases                       # \u5217\u51fa\u6240\u6709\u6570\u636e\u5e93\n.database &lt;database_name&gt;        # \u5207\u6362\u5f53\u524d\u6570\u636e\u5e93\n.schemas                         # \u5217\u51fa\u6240\u6709 Schema\uff08\u6216\u5c55\u793a\u8be6\u60c5\uff09\n.schema &lt;schema_name&gt;            # \u5207\u6362\u5f53\u524d Schema\n.tables                          # \u5217\u51fa\u5f53\u524d Schema \u7684\u6240\u6709\u8868\n.table_schema &lt;table_name&gt;       # \u67e5\u770b\u8868\u7684 DDL\n.indexes &lt;table_name&gt;            # \u67e5\u770b\u8868\u7d22\u5f15\n</code></pre> <p>\u7ed3\u5408\u804a\u5929\u6216\u8c03\u8bd5 SQL \u65f6\uff0c\u8fd9\u4e9b\u547d\u4ee4\u80fd\u5e2e\u52a9\u4f60\u5feb\u901f\u719f\u6089\u6570\u636e\u73af\u5883\u3002</p>"},{"location":"zh/cli/sql_execution/#3","title":"3. \u9ad8\u7ea7\u80fd\u529b","text":""},{"location":"zh/cli/sql_execution/#_2","title":"\u8de8\u6570\u636e\u5e93\u517c\u5bb9","text":"<p>\u5143\u6570\u636e\u547d\u4ee4\u5728\u4e0d\u540c\u6570\u636e\u5e93\u7c7b\u578b\u95f4\u4fdd\u6301\u4e00\u81f4\u4f53\u9a8c\uff1a</p> <ul> <li>SQLite\uff1a\u672c\u5730\u6587\u4ef6\u6570\u636e\u5e93</li> <li>DuckDB\uff1a\u5206\u6790\u578b\u5de5\u4f5c\u8d1f\u8f7d</li> <li>Snowflake\uff1a\u4e91\u6570\u4ed3</li> <li>MySQL/PostgreSQL\uff1a\u4f20\u7edf\u5173\u7cfb\u578b\u6570\u636e\u5e93</li> <li>StarRocks\uff1a\u5b9e\u65f6\u5206\u6790\u573a\u666f</li> </ul>"},{"location":"zh/cli/sql_execution/#_3","title":"\u4e30\u5bcc\u7684\u7ed3\u679c\u5c55\u793a","text":"<p>SQL \u7ed3\u679c\u4f1a\u5e26\u6765\uff1a</p> <ul> <li>\u8868\u683c\u5316\u8f93\u51fa\uff1a\u5217\u5bf9\u9f50\u3001\u5e26\u8fb9\u6846</li> <li>\u7c7b\u578b\u611f\u77e5\uff1a\u6570\u5b57\u3001\u65e5\u671f\u3001\u5b57\u7b26\u4e32\u5747\u6309\u7c7b\u578b\u4f18\u5316\u663e\u793a</li> <li>\u6027\u80fd\u6307\u6807\uff1a\u6267\u884c\u8017\u65f6\u4e0e\u8fd4\u56de\u884c\u6570</li> <li>\u9519\u8bef\u5904\u7406\uff1a\u6e05\u6670\u7684\u9519\u8bef\u63d0\u793a\u4e0e\u5efa\u8bae</li> </ul>"},{"location":"zh/cli/sql_execution/#_4","title":"\u67e5\u8be2\u5386\u53f2","text":"<ul> <li>\u6240\u6709\u6267\u884c\u8fc7\u7684\u67e5\u8be2\u90fd\u4f1a\u81ea\u52a8\u4fdd\u5b58</li> <li>\u53ef\u901a\u8fc7\u4e0a\u4e0b\u65b9\u5411\u952e\u8bbf\u95ee\u5386\u53f2\u8bb0\u5f55</li> <li>\u67e5\u8be2\u5386\u53f2\u5728\u4f1a\u8bdd\u4e4b\u95f4\u6301\u4e45\u5316</li> <li>\u4e0e <code>@sql</code> \u4e0a\u4e0b\u6587\u7cfb\u7edf\u6df1\u5ea6\u96c6\u6210</li> </ul>"},{"location":"zh/cli/sql_execution/#_5","title":"\u5bfc\u51fa\u9009\u9879","text":"<p>\u67e5\u8be2\u7ed3\u679c\u53ef\u5bfc\u51fa\u4e3a\u591a\u79cd\u683c\u5f0f\uff1a</p> <ul> <li>CSV\uff1a\u7528\u4e8e\u6570\u636e\u5206\u6790\u4e0e\u62a5\u8868</li> <li>JSON\uff1a\u7528\u4e8e API \u96c6\u6210\u4e0e\u6570\u636e\u4ea4\u6362</li> <li>Parquet\uff1a\u9002\u5408\u5206\u6790\u578b\u5de5\u4f5c\u8d1f\u8f7d</li> <li>Excel\uff1a\u6ee1\u8db3\u4e1a\u52a1\u62a5\u8868\u9700\u6c42</li> </ul>"},{"location":"zh/cli/sql_execution/#_6","title":"\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/cli/sql_execution/#_7","title":"\u67e5\u8be2\u4f18\u5316","text":"<ol> <li>\u5145\u5206\u5229\u7528 LIMIT\uff1a\u5bf9\u5927\u8868\u505a\u63a2\u7d22\u6027\u67e5\u8be2\u65f6\u5148\u9650\u5236\u8fd4\u56de\u884c\u6570</li> <li>\u5173\u6ce8\u7d22\u5f15\uff1a\u590d\u6742 JOIN \u524d\u5148\u7528 <code>.indexes</code> \u67e5\u770b\u7d22\u5f15</li> <li>\u7406\u89e3 Schema\uff1a\u901a\u8fc7 <code>.table_schema</code> \u660e\u786e\u5b57\u6bb5\u7c7b\u578b</li> <li>\u76d1\u63a7\u6027\u80fd\uff1a\u5173\u6ce8\u6267\u884c\u65f6\u95f4\u63d0\u793a</li> </ol>"},{"location":"zh/cli/sql_execution/#_8","title":"\u5143\u6570\u636e\u63a2\u7d22\u6d41\u7a0b","text":"<ol> <li>\u4f7f\u7528 <code>.databases</code> \u67e5\u770b\u53ef\u7528\u6570\u636e\u5e93</li> <li>\u901a\u8fc7 <code>.database &lt;name&gt;</code> \u5207\u6362\u76ee\u6807\u6570\u636e\u5e93</li> <li>\u4f7f\u7528 <code>.schemas</code> \u6d4f\u89c8 Schema</li> <li>\u7528 <code>.tables</code> \u5217\u51fa\u8868</li> <li>\u901a\u8fc7 <code>.table_schema &lt;table&gt;</code> \u67e5\u770b\u7279\u5b9a\u8868\u7ed3\u6784</li> <li>\u4f7f\u7528 <code>.indexes &lt;table&gt;</code> \u67e5\u770b\u6027\u80fd\u76f8\u5173\u7d22\u5f15</li> </ol>"},{"location":"zh/cli/sql_execution/#_9","title":"\u4e0e\u804a\u5929\u80fd\u529b\u7ed3\u5408","text":"<p>\u5c06 SQL \u6267\u884c\u4e0e\u804a\u5929\u547d\u4ee4\u7ed3\u5408\uff0c\u6548\u7387\u66f4\u9ad8\uff1a</p> <pre><code># \u5148\u7528\u804a\u5929\u751f\u6210 SQL\n/ Show me the top 10 customers by revenue\n\n# \u76f4\u63a5\u6267\u884c\u751f\u6210\u7684 SQL\nSELECT customer_name, SUM(order_total) as revenue\nFROM customers c JOIN orders o ON c.id = o.customer_id\nGROUP BY customer_name\nORDER BY revenue DESC\nLIMIT 10;\n\n# \u968f\u540e\u6ce8\u5165\u4e0a\u4e0b\u6587\n@catalog customers\n/ Now show me their contact information\n</code></pre>"},{"location":"zh/configuration/agent/","title":"Agent \u914d\u7f6e","text":"<p>Agent \u914d\u7f6e\u5b9a\u4e49 Datus Agent \u7684\u6838\u5fc3\u8bbe\u7f6e\uff0c\u5305\u62ec\u9ed8\u8ba4\u76ee\u6807\u6a21\u578b\u4e0e\u6574\u4e2a\u7cfb\u7edf\u53ef\u7528\u7684 LLM \u63d0\u4f9b\u65b9\u3002</p>"},{"location":"zh/configuration/agent/#_1","title":"\u7ed3\u6784","text":""},{"location":"zh/configuration/agent/#target","title":"\u76ee\u6807\u6a21\u578b\uff08target\uff09","text":"<p>\u5728\u672a\u5355\u72ec\u8986\u76d6\u65f6\uff0c\u6240\u6709\u8282\u70b9\u9ed8\u8ba4\u4f7f\u7528 <code>target</code> \u6307\u5411\u7684 LLM \u8bbe\u7f6e\uff1a <pre><code>agent:\n  target: openai\n</code></pre></p>"},{"location":"zh/configuration/agent/#models","title":"\u6a21\u578b\u63d0\u4f9b\u65b9\uff08models\uff09","text":"<p>\u4e3a\u667a\u80fd\u4f53\u914d\u7f6e\u53ef\u7528\u7684 LLM \u63d0\u4f9b\u65b9\uff1a</p> <p>\u5fc5\u586b\u53c2\u6570\uff1a</p> <ul> <li><code>provider</code>\uff1a\u63d0\u4f9b\u65b9\u540d\u79f0\uff08\u952e\u540d\u53ef\u81ea\u5b9a\u4e49\uff09</li> <li><code>type</code>\uff1a\u63a5\u53e3\u7c7b\u578b\uff08\u4e0e\u5382\u5546\u9002\u914d\uff09</li> <li><code>base_url</code>\uff1a\u63a5\u53e3\u57fa\u7840\u5730\u5740</li> <li><code>api_key</code>\uff1a\u8bbf\u95ee\u5bc6\u94a5\uff08\u652f\u6301\u73af\u5883\u53d8\u91cf\uff09</li> <li><code>model</code>\uff1a\u5177\u4f53\u6a21\u578b\u540d</li> </ul> <pre><code>models:\n  provider_name:\n    type: provider_type\n    base_url: https://api.example.com/v1\n    api_key: ${API_KEY_ENV_VAR}\n    model: model-name\n</code></pre> <p>\u73af\u5883\u53d8\u91cf</p> <p>\u5efa\u8bae\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u7ba1\u7406\u654f\u611f\u4fe1\u606f\uff1a <pre><code>api_key: ${YOUR_API_KEY}\n# \u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u4e2d\u660e\u6587\u5199\u5165\napi_key: \"sk-your-actual-key-here\"\n</code></pre></p>"},{"location":"zh/configuration/agent/#_2","title":"\u652f\u6301\u7684\u63d0\u4f9b\u65b9","text":"\u63d0\u4f9b\u65b9 \u6a21\u578b \u63a5\u53e3\u7c7b\u578b OpenAI GPT-4\u3001GPT-5 \u7b49 <code>openai</code> Anthropic Claude 4\uff08Sonnet\u3001Opus\uff09\u3001Claude 3 <code>claude</code> Google Gemini\uff08Pro\u3001Flash\u3001Ultra\uff09 <code>gemini</code> DeepSeek Chat / Reasoning <code>deepseek</code> Kimi Moonshot Kimi <code>openai</code> Qwen \u963f\u91cc\u901a\u4e49\u5343\u95ee <code>openai</code>"},{"location":"zh/configuration/agent/#_3","title":"\u914d\u7f6e\u793a\u4f8b","text":"OpenAI <pre><code>openai:\n  type: openai\n  base_url: https://api.openai.com/v1\n  api_key: ${OPENAI_API_KEY}\n  model: gpt-4-turbo\n</code></pre> Anthropic Claude <pre><code>anthropic:\n  type: claude\n  base_url: https://api.anthropic.com\n  api_key: ${ANTHROPIC_API_KEY}\n  model: claude-sonnet-4-20250514\n</code></pre> DeepSeek <pre><code>deepseek:\n  type: deepseek\n  base_url: https://api.deepseek.com\n  api_key: ${DEEPSEEK_API_KEY}\n  model: deepseek-chat\n</code></pre> Google Gemini <pre><code>google:\n  type: gemini\n  base_url: https://generativelanguage.googleapis.com/v1beta\n  api_key: ${GEMINI_API_KEY}\n  model: gemini-2.5-flash\n</code></pre> Kimi (Moonshot) <pre><code>kimi:\n  type: openai\n  base_url: https://api.moonshot.cn/v1\n  api_key: ${KIMI_API_KEY}\n  model: kimi-k2-turbo-preview\n</code></pre> Qwen (Alibaba) <pre><code>qwen:\n  type: openai\n  base_url: https://dashscope.aliyuncs.com/compatible-mode/v1\n  api_key: ${QWEN_API_KEY}\n  model: qwen-turbo\n</code></pre> Azure OpenAI <pre><code>azure_openai:\n  type: openai\n  base_url: https://${AZURE_OPENAI_ENDPOINT}/openai/deployments/${AZURE_DEPLOYMENT_NAME}\n  api_key: ${AZURE_OPENAI_API_KEY}\n  model: gpt-4\n</code></pre>"},{"location":"zh/configuration/agent/#_4","title":"\u5b8c\u6574\u793a\u4f8b","text":"datus-config.yaml<pre><code>agent:\n  target: openai\n\nmodels:\n  openai:\n    type: openai\n    base_url: https://api.openai.com/v1\n    api_key: ${OPENAI_API_KEY}\n    model: gpt-4-turbo\n\n  google:\n    type: gemini\n    base_url: https://generativelanguage.googleapis.com/v1beta\n    api_key: ${GEMINI_API_KEY}\n    model: gemini-2.5-flash\n\n  anthropic:\n    type: claude\n    base_url: https://api.anthropic.com\n    api_key: ${ANTHROPIC_API_KEY}\n    model: claude-sonnet-4-20250514\n\n  deepseek_v3:\n    type: deepseek\n    base_url: https://api.deepseek.com\n    api_key: ${DEEPSEEK_API_KEY}\n    model: deepseek-chat\n\n  azure_openai:\n    type: openai\n    base_url: https://${AZURE_OPENAI_ENDPOINT}/openai/deployments/${AZURE_DEPLOYMENT_NAME}\n    api_key: ${AZURE_OPENAI_API_KEY}\n    model: gpt-4\n</code></pre>"},{"location":"zh/configuration/benchmark/","title":"\u57fa\u51c6\u6d4b\u8bd5\uff08Benchmark\uff09","text":"<p>\u914d\u7f6e\u57fa\u51c6\u6570\u636e\u96c6\u4ee5\u8bc4\u4f30 Datus Agent \u7684 SQL \u751f\u6210\u6548\u679c\uff0c\u7528\u4e8e\u51c6\u786e\u6027\u5ea6\u91cf\u3001\u914d\u7f6e\u5bf9\u6bd4\u4e0e\u8fed\u4ee3\u9a8c\u8bc1\u3002</p>"},{"location":"zh/configuration/benchmark/#_1","title":"\u652f\u6301\u7684\u6570\u636e\u96c6","text":"<ul> <li>BIRD-DEV\uff1a\u590d\u6742 SQL \u573a\u666f\u7684\u7efc\u5408\u8bc4\u6d4b</li> <li>Spider2\uff1a\u591a\u6570\u636e\u5e93\u9ad8\u7ea7\u8bc4\u6d4b</li> <li>Semantic Layer\uff1a\u4e1a\u52a1\u6307\u6807\u4e0e\u8bed\u4e49\u7406\u89e3\u8bc4\u6d4b</li> </ul>"},{"location":"zh/configuration/benchmark/#_2","title":"\u914d\u7f6e\u7ed3\u6784","text":"<pre><code>benchmark:\n  bird_dev:\n    benchmark_path: benchmark/bird/dev_20240627\n\n  spider2:\n    benchmark_path: benchmark/spider2/spider2-snow\n\n  semantic_layer:\n    benchmark_path: benchmark/semantic_layer\n</code></pre>"},{"location":"zh/configuration/benchmark/#bird-dev","title":"BIRD-DEV","text":"<pre><code>benchmark:\n  bird_dev:\n    benchmark_path: benchmark/bird/dev_20240627\n</code></pre>"},{"location":"zh/configuration/benchmark/#spider2","title":"Spider2","text":"<pre><code>benchmark:\n  spider2:\n    benchmark_path: benchmark/spider2/spider2-snow\n</code></pre>"},{"location":"zh/configuration/benchmark/#semantic-layer","title":"Semantic Layer","text":"<pre><code>benchmark:\n  semantic_layer:\n    benchmark_path: benchmark/semantic_layer\n</code></pre> <p>\u66f4\u591a\u7528\u6cd5\u4e0e\u8fdb\u9636\u914d\u7f6e\uff0c\u53c2\u89c1 Benchmarks\u3002</p>"},{"location":"zh/configuration/introduction/","title":"\u914d\u7f6e\u6982\u89c8","text":"<p>Agent \u662f Datus \u7684\u6838\u5fc3\u914d\u7f6e\u5355\u5143\u3002\u5b83\u51b3\u5b9a\u667a\u80fd\u4f53\u7684\u884c\u4e3a\u65b9\u5f0f\u3001\u6240\u8fde\u63a5\u7684\u6a21\u578b\u4e0e\u6570\u636e\u5e93\uff0c\u4ee5\u53ca\u5de5\u4f5c\u6d41\u5982\u4f55\u6267\u884c\u3002\u901a\u8fc7\u81ea\u5b9a\u4e49 Agent\uff0c\u4f60\u53ef\u4ee5\u8ba9 Datus \u9002\u914d\u4e0d\u540c\u73af\u5883\u4e0e\u4e1a\u52a1\u573a\u666f\u3002</p>"},{"location":"zh/configuration/introduction/#_2","title":"\u8981\u70b9\u901f\u89c8","text":"<ul> <li>\u5f39\u6027\u4e0e\u6269\u5c55\u6027\uff1a\u53ef\u914d\u7f6e\u591a\u5bb6 LLM\u3001\u8fde\u63a5\u591a\u79cd\u6570\u636e\u5e93\uff0c\u5e76\u5b9a\u4e49\u8282\u70b9\u7b56\u7565\u4e0e\u5de5\u4f5c\u6d41\u89c4\u5219</li> <li>\u7edf\u4e00\u914d\u7f6e\u6587\u4ef6\uff1a<code>agent.yml</code> \u540c\u65f6\u7528\u4e8e datus-agent \u4e0e datus-cli</li> <li> <p>\u542f\u52a8\u4f18\u5148\u7ea7\uff1a</p> <ol> <li>\u547d\u4ee4\u884c <code>-f</code> \u6307\u5b9a\u7684\u6587\u4ef6</li> <li><code>./conf/agent.yml</code></li> <li><code>~/.datus/conf/agent.yml</code></li> </ol> </li> <li> <p>\u804c\u8d23\u5206\u79bb\uff1aMCP\uff08Model Context Protocol\uff09\u914d\u7f6e\u72ec\u7acb\u5b58\u653e\u5728 <code>.mcp.json</code>\uff0c\u4e0d\u6df7\u5165 <code>agent.yml</code></p> </li> </ul> <p>\u8fd9\u79cd\u7ed3\u6784\u8ba9 Agent \u6a21\u5757\u5316\u3001\u53ef\u79fb\u690d\u3001\u6613\u7ef4\u62a4\uff0c\u4fbf\u4e8e\u5728\u4e0d\u540c\u73af\u5883\u4e2d\u4fdd\u6301\u4e00\u81f4\u7684\u8fd0\u884c\u65b9\u5f0f\u3002</p>"},{"location":"zh/configuration/introduction/#_3","title":"\u914d\u7f6e\u603b\u89c8","text":"<p>Datus Agent \u914d\u7f6e\u51b3\u5b9a\u7cfb\u7edf\u201c\u5982\u4f55\u5de5\u4f5c\u201d\u2014\u2014\u9009\u7528\u54ea\u4e9b\u6a21\u578b\u3001\u7ec4\u4ef6\u5982\u4f55\u8fde\u63a5\uff08\u8282\u70b9\u3001\u5de5\u4f5c\u6d41\u3001\u5b58\u50a8\u3001\u547d\u540d\u7a7a\u95f4\u3001\u57fa\u51c6\u6d4b\u8bd5\uff09\uff0c\u4ee5\u53ca\u67e5\u8be2\u5982\u4f55\u7aef\u5230\u7aef\u5904\u7406\u3002</p> \u6a21\u5757 \u4f5c\u7528 \u5173\u952e\u6982\u5ff5/\u804c\u8d23 Agent \u5168\u5c40\u8bbe\u7f6e\u4e0e\u6a21\u578b\u63d0\u4f9b\u65b9 \u5b9a\u4e49\u9ed8\u8ba4\u76ee\u6807 LLM\uff0c\u4ee5\u53ca\u53d7\u652f\u6301\u7684\u63d0\u4f9b\u65b9\uff08\u7c7b\u578b\u3001Base URL\u3001API Key\u3001\u6a21\u578b\u540d\uff09 Nodes \u4efb\u52a1\u7ea7\u5904\u7406\u5355\u5143 \u6bcf\u4e2a\u201c\u8282\u70b9\u201d\u8d1f\u8d23\u4e00\u73af\uff08\u7ed3\u6784\u5173\u8054\u3001SQL \u751f\u6210\u3001\u63a8\u7406\u3001\u53cd\u601d\u3001\u8f93\u51fa\u3001\u804a\u5929\u3001\u5b9e\u7528\u5de5\u5177\uff09 Workflow \u8282\u70b9\u7f16\u6392 \u5b9a\u4e49\u987a\u5e8f/\u5e76\u884c/\u5b50\u5de5\u4f5c\u6d41/\u53cd\u601d\u8def\u5f84\uff0c\u63cf\u8ff0\u56de\u7b54\u7528\u6237\u95ee\u9898\u7684\u6267\u884c\u94fe Storage \u5411\u91cf\u4e0e\u5d4c\u5165\u914d\u7f6e \u7ba1\u7406\u5d4c\u5165\u6a21\u578b\u3001\u8bbe\u5907\u3001\u5b58\u50a8\u8def\u5f84\uff0c\u4ee5\u53ca\u5143\u6570\u636e/\u6587\u6863/\u6307\u6807\u7684\u5d4c\u5165\u4e0e\u68c0\u7d22 Namespace \u6570\u636e\u5e93\u8fde\u63a5\u62bd\u8c61 \u4ee5\u547d\u540d\u7a7a\u95f4\u5c01\u88c5\u591a\u6570\u636e\u5e93\u8fde\u63a5\uff08Snowflake\u3001StarRocks\u3001SQLite\u3001DuckDB \u7b49\uff09 Benchmark \u8bc4\u6d4b\u4e0e\u6d4b\u8bd5 \u914d\u7f6e\u57fa\u51c6\u6570\u636e\u96c6\uff08\u5982 BIRD-DEV\u3001Spider2\u3001Semantic Layer\uff09\u8bc4\u4f30 SQL \u751f\u6210\u6548\u679c"},{"location":"zh/configuration/introduction/#_4","title":"\u914d\u7f6e\u7ed3\u6784","text":"<pre><code># \u6a21\u578b\nmodels:\n  default: \"openai:gpt-4\"\n  providers:\n    openai:\n      type: \"openai\"\n      base_url: \"https://api.openai.com/v1\"\n      api_key: \"${OPENAI_API_KEY}\"\n\n# \u6570\u636e\u5e93\u8fde\u63a5\nnamespace:\n  production:\n    type: snowflake\n    account: \"${SNOWFLAKE_ACCOUNT}\"\n    username: \"${SNOWFLAKE_USER}\"\n    password: \"${SNOWFLAKE_PASSWORD}\"\n\n# \u5de5\u4f5c\u6d41\nworkflow:\n  default: \"reflection\"\n  plans:\n    reflection:\n      - schema_linking\n      - generate_sql\n      - execute_sql\n      - reflect\n      - output\n\n# \u8282\u70b9\nnodes:\n  schema_linking:\n    model: \"openai:gpt-3.5-turbo\"\n    similarity_threshold: 0.7\n\n# \u5b58\u50a8\u4e0e\u5d4c\u5165\nstorage:\n  embedding_model: \"sentence-transformers/all-MiniLM-L6-v2\"\n  vector_store_path: \"./data/vector_store\"\n\n# \u57fa\u51c6\u6570\u636e\u96c6\nbenchmark:\n  bird_dev:\n    path: \"./benchmark/bird/dev_20240627\"\n    database_pattern: \"**/*.sqlite\"\n</code></pre>"},{"location":"zh/configuration/introduction/#_5","title":"\u73af\u5883\u53d8\u91cf\u652f\u6301","text":"<p>\u6240\u6709\u914d\u7f6e\u9879\u5747\u652f\u6301\u73af\u5883\u53d8\u91cf\u4e0e\u9ed8\u8ba4\u503c\u5c55\u5f00\uff1a</p> <pre><code># \u76f4\u63a5\u5f15\u7528\u73af\u5883\u53d8\u91cf\napi_key: ${OPENAI_API_KEY}\n\n# \u5e26\u9ed8\u8ba4\u503c\ntimeout: ${API_TIMEOUT:-30}\n\n# \u590d\u6742\u63d2\u503c\nconnection_string: \"postgresql://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT:-5432}/${DB_NAME}\"\n</code></pre>"},{"location":"zh/configuration/introduction/#_6","title":"\u591a\u73af\u5883\u914d\u7f6e","text":"<p>\u901a\u8fc7\u591a\u4efd\u914d\u7f6e\u6587\u4ef6\u7ba1\u7406\u4e0d\u540c\u73af\u5883\uff1a</p> <pre><code>conf/\n\u251c\u2500\u2500 agent.yml              # \u4e3b\u914d\u7f6e\n\u251c\u2500\u2500 agent.yml.dev          # \u5f00\u53d1\u73af\u5883\u8986\u76d6\n\u251c\u2500\u2500 agent.yml.staging      # \u9884\u53d1\u5e03\u73af\u5883\n\u251c\u2500\u2500 agent.yml.production   # \u751f\u4ea7\u73af\u5883\n\u2514\u2500\u2500 .mcp.json              # MCP \u670d\u52a1\u5668\u914d\u7f6e\n</code></pre>"},{"location":"zh/configuration/introduction/#_7","title":"\u4e0b\u4e00\u6b65","text":"<ul> <li>Agent \u8bbe\u7f6e\uff1a\u914d\u7f6e\u6a21\u578b\u3001\u63d0\u4f9b\u65b9\u4e0e\u5168\u5c40\u8bbe\u7f6e</li> <li>\u6570\u636e\u5e93\u547d\u540d\u7a7a\u95f4\uff1a\u63a5\u5165\u591a\u6570\u636e\u5e93</li> <li>\u5de5\u4f5c\u6d41\u5b9a\u4e49\uff1a\u81ea\u5b9a\u4e49\u6267\u884c\u8def\u5f84</li> <li>\u8282\u70b9\u914d\u7f6e\uff1a\u5fae\u8c03\u5404\u8282\u70b9\u884c\u4e3a</li> <li>\u5b58\u50a8\u8bbe\u7f6e\uff1a\u914d\u7f6e\u77e5\u8bc6\u5e93/\u5411\u91cf\u5b58\u50a8</li> <li>\u57fa\u51c6\u6d4b\u8bd5\uff1a\u8bc4\u6d4b\u4e0e\u9a8c\u8bc1</li> </ul>"},{"location":"zh/configuration/namespace/","title":"\u547d\u540d\u7a7a\u95f4\uff08Namespace\uff09","text":"<p>\u4e3a\u4e0d\u540c\u6570\u636e\u6e90\u914d\u7f6e\u6570\u636e\u5e93\u547d\u540d\u7a7a\u95f4\u4e0e\u8fde\u63a5\u3002</p>"},{"location":"zh/configuration/namespace/#_1","title":"\u6982\u89c8","text":"<p>\u547d\u540d\u7a7a\u95f4\u4e3a\u591a\u6570\u636e\u5e93\u63a5\u5165\u63d0\u4f9b\u7edf\u4e00\u62bd\u8c61\uff1a - \u901a\u7528\u8fde\u63a5\uff1a\u652f\u6301\u4e91\u6570\u4ed3\uff08Snowflake\u3001StarRocks\uff09\u3001\u672c\u5730\u6570\u636e\u5e93\uff08SQLite\u3001DuckDB\uff09\u4e0e\u57fa\u51c6\u6570\u636e\u96c6 - \u73af\u5883\u9694\u79bb\uff1a\u5f00\u53d1/\u9884\u53d1/\u751f\u4ea7\u5206\u79bb - \u51ed\u8bc1\u5b89\u5168\uff1a\u73af\u5883\u53d8\u91cf\u7ba1\u7406 + \u5b89\u5168\u534f\u8bae - \u52a8\u6001\u53d1\u73b0\uff1a\u57fa\u4e8e\u8def\u5f84\u6a21\u5f0f\u81ea\u52a8\u7eb3\u5165\u591a\u5e93\u6587\u4ef6 - \u53ef\u6269\u5c55\u7ec4\u7ec7\uff1a\u6309\u5c42\u7ea7\u7ec4\u7ec7\u547d\u540d\u7a7a\u95f4</p>"},{"location":"zh/configuration/namespace/#_2","title":"\u7ed3\u6784","text":"<pre><code>namespace:\n  service:\n    type: cloud_provider\n    endpoint: ${SERVICE_ENDPOINT}\n    access_key: ${ACCESS_KEY}\n    secret_key: ${SECRET_KEY}\n    region: ${SERVICE_REGION}\n\n  local_resource:\n    type: local_service\n    resources:\n      - name: primary\n        uri: protocol://path/to/resource\n      - name: secondary\n        uri: protocol://path/to/backup\n</code></pre>"},{"location":"zh/configuration/namespace/#_3","title":"\u652f\u6301\u7684\u6570\u636e\u5e93\u7c7b\u578b","text":""},{"location":"zh/configuration/namespace/#snowflake","title":"Snowflake","text":"<pre><code>snowflake:\n  type: snowflake\n  account: ${SNOWFLAKE_ACCOUNT}\n  username: ${SNOWFLAKE_USER}\n  password: ${SNOWFLAKE_PASSWORD}\n  database: ${SNOWFLAKE_DATABASE}    # \u53ef\u9009\n  schema: ${SNOWFLAKE_SCHEMA}        # \u53ef\u9009\n  warehouse: ${SNOWFLAKE_WAREHOUSE}  # \u53ef\u9009\n</code></pre>"},{"location":"zh/configuration/namespace/#starrocks","title":"StarRocks","text":"<pre><code>starrocks:\n  type: starrocks\n  host: ${STARROCKS_HOST}\n  port: ${STARROCKS_PORT}\n  username: ${STARROCKS_USER}\n  password: ${STARROCKS_PASSWORD}\n  database: ${STARROCKS_DATABASE}\n  catalog: ${STARROCKS_CATALOG}      # \u53ef\u9009\n</code></pre>"},{"location":"zh/configuration/namespace/#sqlite","title":"SQLite","text":"<pre><code># \u5355\u5e93\nlocal_sqlite:\n  type: sqlite\n  name: ssb\n  uri: sqlite:////Users/xxx/benchmark/SSB.db\n\n# \u591a\u5e93\nlocal_sqlite_multi:\n  type: sqlite\n  dbs:\n    - name: ssb\n      uri: sqlite:////Users/xxx/benchmark/SSB.db\n    - name: northwind\n      uri: sqlite:////Users/xxx/data/northwind.db\n</code></pre>"},{"location":"zh/configuration/namespace/#duckdb","title":"DuckDB","text":"<pre><code># \u5355\u5e93\nlocal_duckdb:\n  type: duckdb\n  name: analytics\n  uri: duckdb:////absolute/path/to/analytics.db\n\n# \u591a\u5e93\nlocal_duckdb_multi:\n  type: duckdb\n  dbs:\n    - name: ssb\n      uri: duckdb:////absolute/path/to/ssb.db\n    - name: tpch\n      uri: duckdb:///relative/path/to/tpch.duckdb\n</code></pre>"},{"location":"zh/configuration/namespace/#_4","title":"\u914d\u7f6e\u53c2\u6570","text":""},{"location":"zh/configuration/namespace/#_5","title":"\u901a\u7528","text":"<ul> <li><code>type</code>\uff1a\u6570\u636e\u5e93\u7c7b\u578b\uff08\u5fc5\u586b\uff09</li> <li><code>name</code>\uff1a\u6570\u636e\u5e93\u6807\u8bc6\uff08SQLite/DuckDB \u5fc5\u586b\uff09</li> <li><code>uri</code>\uff1a\u672c\u5730\u5e93\u8fde\u63a5 URI</li> <li><code>host</code>\u3001<code>port</code>\u3001<code>username</code>\u3001<code>password</code>\u3001<code>database</code></li> </ul>"},{"location":"zh/configuration/namespace/#_6","title":"\u7279\u5b9a","text":"<ul> <li>Snowflake\uff1a<code>account</code>\u3001<code>warehouse</code>\u3001<code>role</code>\u3001<code>schema</code></li> <li>StarRocks\uff1a<code>catalog</code>\u3001<code>ssl</code></li> <li>SQLite/DuckDB\uff1a<code>path_pattern</code>\u3001<code>dbs</code></li> </ul>"},{"location":"zh/configuration/namespace/#_7","title":"\u5b8c\u6574\u793a\u4f8b","text":"<pre><code>namespace:\n  production_snowflake:\n    type: snowflake\n    account: ${SNOWFLAKE_ACCOUNT}\n    username: ${SNOWFLAKE_USER}\n    password: ${SNOWFLAKE_PASSWORD}\n    database: ANALYTICS\n    schema: PUBLIC\n    warehouse: COMPUTE_WH\n\n  dev_starrocks:\n    type: starrocks\n    host: ${STARROCKS_HOST}\n    port: ${STARROCKS_PORT}\n    username: ${STARROCKS_USER}\n    password: ${STARROCKS_PASSWORD}\n    database: dev_analytics\n\n  test_sqlite:\n    type: sqlite\n    dbs:\n      - name: orders\n        uri: sqlite:////Users/data/orders.db\n      - name: customers\n        uri: sqlite:////Users/data/customers.db\n      - name: products\n        uri: sqlite:////Users/data/products.db\n\n  analytics_duckdb:\n    type: duckdb\n    dbs:\n      - name: sales\n        uri: duckdb:////opt/data/sales.db\n      - name: marketing\n        uri: duckdb:///data/marketing.duckdb\n\n  bird_benchmark:\n    type: sqlite\n    path_pattern: benchmark/bird/dev_20240627/dev_databases/**/*.sqlite\n</code></pre>"},{"location":"zh/configuration/namespace/#_8","title":"\u591a\u5e93\u914d\u7f6e","text":""},{"location":"zh/configuration/namespace/#sqlite_1","title":"SQLite \u591a\u5e93","text":"<pre><code>multi_sqlite:\n  type: sqlite\n  dbs:\n    - name: sales_2023\n      uri: sqlite:////data/sales_2023.db\n    - name: sales_2024\n      uri: sqlite:////data/sales_2024.db\n    - name: customer_master\n      uri: sqlite:////data/customers.db\n</code></pre>"},{"location":"zh/configuration/namespace/#_9","title":"\u8def\u5f84\u6a21\u5f0f","text":"<p><pre><code>benchmark_dbs:\n  type: sqlite\n  path_pattern: benchmarks/**/*.sqlite\n</code></pre> \u5e38\u7528\u6a21\u5f0f\uff1a<code>*.sqlite</code>\u3001<code>**/*.sqlite</code>\u3001<code>data/2024/*.db</code>\u3001<code>benchmark/bird/**/*.sqlite</code></p>"},{"location":"zh/configuration/namespace/#uri","title":"URI \u683c\u5f0f","text":"<pre><code>sqlite:////absolute/path/to/database.db\nsqlite:///relative/path/to/database.db\n\nduckdb:////absolute/path/to/database.db\nduckdb:///relative/path/to/database.db\n</code></pre>"},{"location":"zh/configuration/namespace/#_10","title":"\u5b89\u5168","text":"<pre><code># \u63a8\u8350\nusername: ${DB_USERNAME}\npassword: ${DB_PASSWORD}\n\n# \u907f\u514d\nusername: \"actual_username\"\npassword: \"actual_password\"\n</code></pre>"},{"location":"zh/configuration/nodes/","title":"\u8282\u70b9\uff08Nodes\uff09","text":""},{"location":"zh/configuration/nodes/#_1","title":"\u6982\u89c8","text":"<p>\u8282\u70b9\u662f Datus Agent \u5de5\u4f5c\u6d41\u7684\u6784\u4ef6\u3002\u6bcf\u4e2a\u8282\u70b9\u8d1f\u8d23\u6570\u636e\u5904\u7406\u94fe\u8def\u4e2d\u7684\u4e00\u73af\uff0c\u4ece\u7ed3\u6784\u5173\u8054\u4e0e SQL \u751f\u6210\uff0c\u5230\u63a8\u7406\u4e0e\u7ed3\u679c\u8f93\u51fa\u3002\u672c\u6587\u4ecb\u7ecd\u5982\u4f55\u6309\u9700\u914d\u7f6e\u5404\u7c7b\u8282\u70b9\u3002</p>"},{"location":"zh/configuration/nodes/#_2","title":"\u914d\u7f6e\u7ed3\u6784","text":"<pre><code>nodes:\n  node_name:\n    model: provider_name\n    prompt_version: \"1.0\"\n    # \u5176\u5b83\u8282\u70b9\u53c2\u6570\n</code></pre> <p>Tip</p> <p><code>model</code> \u5f15\u7528\u5728 <code>agent.models</code> \u4e2d\u5b9a\u4e49\u7684\u63d0\u4f9b\u65b9\u952e\u540d\u3002</p>"},{"location":"zh/configuration/nodes/#_3","title":"\u6838\u5fc3\u8282\u70b9","text":""},{"location":"zh/configuration/nodes/#schema-linking","title":"Schema Linking","text":"<p><pre><code>schema_linking:\n  model: openai\n  matching_rate: fast        # fast/medium/slow/from_llm\n  prompt_version: \"1.0\"\n</code></pre> \u53c2\u6570\uff1a</p> <ul> <li><code>model</code>\uff1a\u5f15\u7528 agent.models \u7684\u952e</li> <li><code>matching_rate</code>\uff1a\u5339\u914d\u8303\u56f4/\u901f\u5ea6\uff08fast/medium/slow/from_llm\uff09</li> <li><code>prompt_version</code>\uff1a\u63d0\u793a\u6a21\u677f\u7248\u672c</li> </ul>"},{"location":"zh/configuration/nodes/#generate-sql","title":"Generate SQL","text":"<p><pre><code>generate_sql:\n  model: deepseek_v3\n  prompt_version: \"1.0\"\n  max_table_schemas_length: 4000\n  max_data_details_length: 2000\n  max_context_length: 8000\n  max_value_length: 500\n</code></pre> \u53c2\u6570\uff1a\u540c\u4e0a\uff0c\u4fa7\u91cd\u63a7\u5236\u4e0a\u4e0b\u6587\u957f\u5ea6\u4e0a\u9650\u3002</p>"},{"location":"zh/configuration/nodes/#reasoning","title":"Reasoning","text":"<p><pre><code>reasoning:\n  model: anthropic\n  prompt_version: \"1.0\"\n  max_table_schemas_length: 4000\n  max_data_details_length: 2000\n  max_context_length: 8000\n  max_value_length: 500\n</code></pre> \u53c2\u6570\uff1a\u540c <code>generate_sql</code>\uff0c\u7528\u4e8e\u8fed\u4ee3\u4f18\u5316\u3002</p>"},{"location":"zh/configuration/nodes/#search-metrics","title":"Search Metrics","text":"<p><pre><code>search_metrics:\n  model: openai\n  matching_rate: medium\n  prompt_version: \"1.0\"\n</code></pre> \u53c2\u6570\uff1a\u540c <code>schema_linking</code>\uff0c\u9488\u5bf9\u6307\u6807\u68c0\u7d22\u3002</p>"},{"location":"zh/configuration/nodes/#_4","title":"\u5904\u7406\u8282\u70b9","text":""},{"location":"zh/configuration/nodes/#reflect","title":"Reflect","text":"<p><pre><code>reflect:\n  prompt_version: \"1.0\"\n</code></pre> \u53c2\u6570\uff1a<code>prompt_version</code></p>"},{"location":"zh/configuration/nodes/#output","title":"Output","text":"<p><pre><code>output:\n  model: anthropic\n  prompt_version: \"1.0\"\n  check_result: true\n</code></pre> \u53c2\u6570\uff1a\u683c\u5f0f\u5316/\u6821\u9a8c\u76f8\u5173\u8bbe\u7f6e\u3002</p>"},{"location":"zh/configuration/nodes/#_5","title":"\u4ea4\u4e92\u8282\u70b9","text":""},{"location":"zh/configuration/nodes/#chat","title":"Chat","text":"<p><pre><code>chat:\n  workspace_root: sql2\n  model: anthropic\n  max_turns: 25\n</code></pre> \u53c2\u6570\uff1a\u5de5\u4f5c\u76ee\u5f55\u3001\u5bf9\u8bdd\u6a21\u578b\u3001\u6700\u5927\u8f6e\u6570\u3002</p>"},{"location":"zh/configuration/nodes/#_6","title":"\u5b9e\u7528\u8282\u70b9","text":""},{"location":"zh/configuration/nodes/#date-parser","title":"Date Parser","text":"<pre><code>date_parser:\n  prompt_version: \"1.0\"\n</code></pre>"},{"location":"zh/configuration/nodes/#compare","title":"Compare","text":"<pre><code>compare:\n  prompt_version: \"1.0\"\n</code></pre>"},{"location":"zh/configuration/nodes/#fix","title":"Fix","text":"<pre><code>fix:\n  model: openai\n  prompt_version: \"1.0\"\n</code></pre>"},{"location":"zh/configuration/nodes/#_7","title":"\u5b8c\u6574\u793a\u4f8b","text":"<pre><code>nodes:\n  schema_linking:\n    model: openai\n    matching_rate: fast\n    prompt_version: \"1.0\"\n\n  search_metrics:\n    model: openai\n    matching_rate: medium\n    prompt_version: \"1.0\"\n\n  generate_sql:\n    model: deepseek_v3\n    prompt_version: \"1.0\"\n    max_table_schemas_length: 4000\n    max_data_details_length: 2000\n    max_context_length: 8000\n    max_value_length: 500\n\n  reasoning:\n    model: anthropic\n    prompt_version: \"1.0\"\n    max_table_schemas_length: 4000\n    max_data_details_length: 2000\n    max_context_length: 8000\n    max_value_length: 500\n\n  reflect:\n    prompt_version: \"1.0\"\n\n  output:\n    model: anthropic\n    prompt_version: \"1.0\"\n    check_result: true\n\n  chat:\n    workspace_root: workspace\n    model: anthropic\n    max_turns: 25\n\n  date_parser:\n    prompt_version: \"1.0\"\n\n  fix:\n    model: openai\n    prompt_version: \"1.0\"\n</code></pre>"},{"location":"zh/configuration/nodes/#_8","title":"\u6a21\u578b\u5206\u914d\u5efa\u8bae","text":"<ul> <li>\u7ed3\u6784\u5173\u8054\uff1a<code>gpt-3.5-turbo</code>\u3001<code>deepseek-chat</code>\uff1b\u590d\u6742\u7ed3\u6784\u7528 <code>gpt-4</code>\u3001<code>claude-4-sonnet</code></li> <li>SQL \u751f\u6210\uff1a\u5efa\u8bae <code>deepseek-chat</code>\u3001<code>gpt-4-turbo</code>\u3001<code>claude-4-sonnet</code></li> <li>\u63a8\u7406\uff1a<code>claude-4-sonnet</code>\u3001<code>gpt-4-turbo</code>\u3001<code>claude-4-opus</code>\uff0c\u6216 <code>gemini-2.5-flash</code></li> <li>\u8f93\u51fa/\u5bf9\u8bdd\uff1a<code>claude-4-sonnet</code>\u3001<code>gpt-4-turbo</code></li> </ul>"},{"location":"zh/configuration/storage/","title":"\u5b58\u50a8\uff08Storage\uff09","text":"<p>\u914d\u7f6e\u5d4c\u5165\u6a21\u578b\u4e0e\u5411\u91cf\u6570\u636e\u5e93\uff0c\u7528\u4e8e\u8868\u7ed3\u6784/\u6837\u4f8b\u6570\u636e\u3001\u6587\u6863\u4e0e\u6307\u6807\u7684\u5d4c\u5165\u4e0e\u68c0\u7d22\u3002</p>"},{"location":"zh/configuration/storage/#_1","title":"\u7ed3\u6784","text":"<pre><code>storage:\n  base_path: data                # RAG \u5411\u91cf\u5b58\u50a8\u6839\u76ee\u5f55\n  embedding_device_type: cpu     # cpu/cuda/mps/auto\n\n  database:\n    registry_name: openai\n    model_name: text-embedding-v3-small\n    dim_size: 1024\n    batch_size: 10\n    target_model: openai\n\n  document:\n    model_name: all-MiniLM-L6-v2\n    dim_size: 384\n\n  metric:\n    model_name: all-MiniLM-L6-v2\n    dim_size: 384\n</code></pre>"},{"location":"zh/configuration/storage/#_2","title":"\u8def\u5f84\u4e0e\u8bbe\u5907","text":"<pre><code>storage:\n  base_path: data\n  embedding_device_type: auto\n</code></pre> <ul> <li>\u8def\u5f84\u793a\u4f8b\uff1a<code>data/datus_db_&lt;namespace&gt;</code>\uff08\u5982 <code>data/datus_db_snowflake</code>\uff09</li> <li>\u8bbe\u5907\u9009\u9879\uff1a<code>cpu</code>\u3001<code>cuda</code>\u3001<code>mps</code>\u3001<code>auto</code></li> </ul>"},{"location":"zh/configuration/storage/#_3","title":"\u5d4c\u5165\u6a21\u578b","text":""},{"location":"zh/configuration/storage/#_4","title":"\u6570\u636e\u5e93\u5d4c\u5165\uff08\u8868\u7ed3\u6784/\u6837\u4f8b\uff09","text":"<p><pre><code>database:\n  registry_name: openai                # openai \u6216 sentence-transformers\n  model_name: text-embedding-v3-small\n  dim_size: 1024\n  batch_size: 10\n  target_model: openai                 # \u5173\u8054 agent.models\n</code></pre> \u53c2\u6570\uff1a<code>registry_name</code>\u3001<code>model_name</code>\u3001<code>dim_size</code>\u3001<code>batch_size</code>\u3001<code>target_model</code></p>"},{"location":"zh/configuration/storage/#_5","title":"\u6587\u6863\u5d4c\u5165","text":"<pre><code>document:\n  model_name: all-MiniLM-L6-v2\n  dim_size: 384\n</code></pre>"},{"location":"zh/configuration/storage/#_6","title":"\u6307\u6807\u5d4c\u5165","text":"<pre><code>metric:\n  model_name: all-MiniLM-L6-v2\n  dim_size: 384\n</code></pre>"},{"location":"zh/configuration/storage/#_7","title":"\u63d0\u4f9b\u65b9\u9009\u9879","text":""},{"location":"zh/configuration/storage/#openai","title":"OpenAI\uff08\u4e91\uff09","text":"<pre><code>database:\n  registry_name: openai\n  model_name: text-embedding-v3-small   # \u6216 v3-large\n  dim_size: 1536                        # small=1536, large=3072\n  batch_size: 10\n  target_model: openai\n</code></pre>"},{"location":"zh/configuration/storage/#sentence-transformers","title":"Sentence-Transformers\uff08\u672c\u5730\uff09","text":"<pre><code>database:\n  registry_name: sentence-transformers\n  model_name: all-MiniLM-L6-v2\n  dim_size: 384\n</code></pre> <p>\u5176\u5b83\u672c\u5730\u6a21\u578b</p> <ul> <li><code>intfloat/multilingual-e5-large-instruct</code>\uff08~1.2GB\uff0c1024 \u7ef4\uff0c\u591a\u8bed\u79cd\uff09</li> <li><code>BAAI/bge-large-en-v1.5</code> / <code>BAAI/bge-large-zh-v1.5</code>\uff08~1.2GB\uff0c1024 \u7ef4\uff09</li> </ul>"},{"location":"zh/configuration/storage/#_8","title":"\u65b9\u6848\u5efa\u8bae","text":"\u8f7b\u91cf\u672c\u5730 <pre><code>storage:\n  base_path: data\n  embedding_device_type: auto\n  database:\n    registry_name: sentence-transformers\n    model_name: all-MiniLM-L6-v2\n    dim_size: 384\n  document:\n    model_name: all-MiniLM-L6-v2\n    dim_size: 384\n  metric:\n    model_name: all-MiniLM-L6-v2\n    dim_size: 384\n</code></pre> \u6df7\u5408\u4e91\u672c\u5730 <pre><code>storage:\n  base_path: data\n  embedding_device_type: cpu\n  database:\n    registry_name: openai\n    model_name: text-embedding-v3-small\n    dim_size: 1536\n    batch_size: 10\n    target_model: openai\n  document:\n    model_name: intfloat/multilingual-e5-large-instruct\n    dim_size: 1024\n  metric:\n    model_name: intfloat/multilingual-e5-large-instruct\n    dim_size: 1024\n</code></pre> \u4f01\u4e1a\u9ad8\u8d28 <pre><code>storage:\n  base_path: /opt/datus/embeddings\n  embedding_device_type: cuda\n  database:\n    registry_name: openai\n    model_name: text-embedding-v3-large\n    dim_size: 3072\n    batch_size: 5\n    target_model: openai\n  document:\n    model_name: BAAI/bge-large-en-v1.5\n    dim_size: 1024\n  metric:\n    model_name: BAAI/bge-large-en-v1.5\n    dim_size: 1024\n</code></pre>"},{"location":"zh/configuration/storage/#_9","title":"\u4e0e\u5176\u5b83\u7ec4\u4ef6\u96c6\u6210","text":"<pre><code>metrics:\n  duckdb:\n    domain: sale\n    layer1: layer1\n    layer2: layer2\n    ext_knowledge: \"\"\n\nstorage:\n  metric:\n    model_name: all-MiniLM-L6-v2\n    dim_size: 384\n</code></pre>"},{"location":"zh/configuration/workflow/","title":"\u5de5\u4f5c\u6d41\u914d\u7f6e","text":"<p>\u5728 Datus Agent \u4e2d\u914d\u7f6e\u5de5\u4f5c\u6d41\u7684\u6267\u884c\u8ba1\u5212\u3001\u8282\u70b9\u987a\u5e8f\u3001\u5e76\u884c\u4e0e\u5b50\u5de5\u4f5c\u6d41\u7ec4\u5408\u3002</p> <p>\u5feb\u901f\u4e0a\u624b</p> <p>\u521d\u5b66\u8005\u53ef\u5148\u9605\u8bfb\u4e0b\u65b9\u7684\u201c\u57fa\u7840\u914d\u7f6e\u201d\u3002</p>"},{"location":"zh/configuration/workflow/#_2","title":"\u7ed3\u6784","text":"agent.yml<pre><code>workflow:\n  plan: planA\n\nplanA:\n  - schema_linking\n  - generate_sql\n  - output\n\nplanB:\n  - schema_linking\n  - generate_sql\n  - execute_sql\n  - reflect\n  - output\n</code></pre>"},{"location":"zh/configuration/workflow/#_3","title":"\u57fa\u7840\u914d\u7f6e","text":""},{"location":"zh/configuration/workflow/#_4","title":"\u987a\u5e8f\u6267\u884c","text":"Simple Sequential Workflow<pre><code>workflow:\n  plan: basic_sql\n\nbasic_sql:\n  - schema_linking\n  - generate_sql\n  - output\n</code></pre>"},{"location":"zh/configuration/workflow/#_5","title":"\u542b\u6267\u884c\u4e0e\u53cd\u601d","text":"Workflow with Execution and Reflection<pre><code>workflow:\n  plan: with_execution\n\nwith_execution:\n  - schema_linking\n  - generate_sql\n  - execute_sql\n  - reflect\n  - output\n</code></pre>"},{"location":"zh/configuration/workflow/#_6","title":"\u9ad8\u7ea7\u7279\u6027","text":"<p>\u6ce8\u610f</p> <p>\u9ad8\u7ea7\u7279\u6027\u4f9d\u8d56\u8282\u70b9\u95f4\u5951\u5408\u5ea6\uff0c\u5efa\u8bae\u5728\u5f00\u53d1\u73af\u5883\u5145\u5206\u6d4b\u8bd5\u3002</p>"},{"location":"zh/configuration/workflow/#_7","title":"\u5e76\u884c\u6267\u884c","text":"Parallel Execution Example<pre><code>workflow:\n  plan: parallel_generation\n\nparallel_generation:\n  - schema_linking\n  - parallel:\n      - generate_sql\n      - reasoning\n  - selection\n  - execute_sql\n  - output\n</code></pre>"},{"location":"zh/configuration/workflow/#_8","title":"\u5b50\u5de5\u4f5c\u6d41","text":"Sub-workflows Example<pre><code>workflow:\n  plan: multi_approach\n\nmulti_approach:\n  - schema_linking\n  - parallel:\n      - subworkflow1\n      - subworkflow2\n      - subworkflow3\n  - selection\n  - execute_sql\n  - output\n\nsubworkflow1:\n  - search_metrics\n  - generate_sql\n\nsubworkflow2:\n  - search_metrics\n  - reasoning\n\nsubworkflow3:\n  - reasoning\n  - reflect\n</code></pre>"},{"location":"zh/configuration/workflow/#_9","title":"\u5b50\u5de5\u4f5c\u6d41\u72ec\u7acb\u914d\u7f6e","text":"Sub-workflows with Custom Configuration<pre><code>workflow:\n  plan: multi_agent\n\nmulti_agent:\n  - schema_linking\n  - parallel:\n      - subworkflow1\n      - subworkflow2\n      - subworkflow3\n  - selection\n  - execute_sql\n  - output\n\nsubworkflow1:\n  steps:\n    - search_metrics\n    - generate_sql\n  config: multi/agent1.yaml\n\nsubworkflow2:\n  steps:\n    - search_metrics\n    - reasoning\n  config: multi/agent2.yaml\n\nsubworkflow3:\n  steps:\n    - reasoning\n    - reflect\n  config: multi/agent3.yaml\n</code></pre>"},{"location":"zh/configuration/workflow/#_10","title":"\u5185\u7f6e\u8ba1\u5212","text":"reflection <pre><code>reflection:\n  - schema_linking\n  - generate_sql\n  - execute_sql\n  - reflect\n  - output\n</code></pre> fixed <pre><code>fixed:\n  - schema_linking\n  - generate_sql\n  - execute_sql\n  - output\n</code></pre> metric_to_sql <pre><code>metric_to_sql:\n  - schema_linking\n  - search_metrics\n  - date_parser\n  - generate_sql\n  - execute_sql\n  - reflect\n  - output\n</code></pre>"},{"location":"zh/configuration/workflow/#_11","title":"\u53cd\u601d\u89e6\u53d1\u7684\u5907\u7528\u8ba1\u5212","text":"Reflection Nodes Configuration<pre><code>reflection_nodes:\n  schema_linking:\n    - schema_linking\n    - generate_sql\n    - execute_sql\n    - reflect\n\n  doc_search:\n    - doc_search\n    - generate_sql\n    - execute_sql\n    - reflect\n\n  simple_regenerate:\n    - execute_sql\n    - reflect\n\n  reasoning:\n    - reasoning\n    - execute_sql\n    - reflect\n</code></pre>"},{"location":"zh/getting_started/Quickstart/","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u51e0\u5206\u949f\u5185\u5373\u53ef\u4e0a\u624b Datus Agent\u3002\u672c\u6307\u5357\u5c06\u5e26\u4f60\u5b8c\u6210\u5b89\u88c5\u3001\u914d\u7f6e\u548c\u9996\u6b21\u4f53\u9a8c\u3002</p>"},{"location":"zh/getting_started/Quickstart/#1","title":"\u6b65\u9aa4 1\uff1a\u5b89\u88c5\u4e0e\u914d\u7f6e","text":""},{"location":"zh/getting_started/Quickstart/#python-312","title":"\u5b89\u88c5 Python 3.12","text":"<p>Datus \u9700\u8981 Python 3.12 \u8fd0\u884c\u73af\u5883\uff0c\u53ef\u6309\u559c\u597d\u9009\u62e9\u4ee5\u4e0b\u65b9\u5f0f\uff1a</p> Condavirtualenvuv <pre><code>conda create -n datus python=3.12\nconda activate datus\n</code></pre> <pre><code>virtualenv datus --python=python3.12\nsource datus/bin/activate\n</code></pre> <pre><code>uv venv datus --python 3.12\nsource datus/bin/activate\n</code></pre>"},{"location":"zh/getting_started/Quickstart/#datus-agent","title":"\u5b89\u88c5 Datus Agent","text":"\u7a33\u5b9a\u7248\u6d4b\u8bd5\u7248 <pre><code>pip install datus-agent\n</code></pre> <pre><code>pip install --no-deps -i https://test.pypi.org/simple/ datus-agent\n</code></pre>"},{"location":"zh/getting_started/Quickstart/#_2","title":"\u521d\u59cb\u5316\u914d\u7f6e","text":"<p>\u8fd0\u884c\u521d\u59cb\u5316\u547d\u4ee4\uff1a</p> <pre><code>datus-agent init\n</code></pre> <p>\u521d\u59cb\u5316\u6d41\u7a0b\u5c06\u5f15\u5bfc\u4f60\u5b8c\u6210\uff1a</p> <p>1. \u5927\u6a21\u578b\u914d\u7f6e \u2014\u2014 \u9009\u62e9\u5e76\u914d\u7f6e\u9996\u9009\u7684\u5927\u6a21\u578b\u670d\u52a1\uff08OpenAI\u3001DeepSeek\u3001Claude\u3001Kimi\u3001Qwen \u7b49\uff09</p> <p>2. \u547d\u540d\u7a7a\u95f4\u8bbe\u7f6e \u2014\u2014 \u8fde\u63a5\u5230\u4f60\u7684\u6570\u636e\u5e93\u3002\u60f3\u5feb\u901f\u4f53\u9a8c\uff0c\u53ef\u4f7f\u7528\u6f14\u793a\u6570\u636e\u5e93\uff1a</p> <p>\u6f14\u793a\u6570\u636e\u5e93</p> <p>Datus \u63d0\u4f9b\u9884\u914d\u7f6e\u7684 DuckDB \u6f14\u793a\u5e93\uff0c\u4fbf\u4e8e\u6d4b\u8bd5\u3002</p> <p>\u8fde\u63a5\u5b57\u7b26\u4e32\uff1a <code>~/.datus/sample/duckdb-demo.duckdb</code></p> <p>3. \u5de5\u4f5c\u533a\u914d\u7f6e \u2014\u2014 \u6307\u5b9a SQL \u6587\u4ef6\u76ee\u5f55\uff08\u9ed8\u8ba4\uff1a<code>~/.datus/workspace</code>\uff09</p> <p>4. \u77e5\u8bc6\u5e93\uff08\u53ef\u9009\uff09 \u2014\u2014 \u521d\u59cb\u5316\u5411\u91cf\u6570\u636e\u5e93\uff0c\u7528\u4e8e\u5b58\u50a8\u5143\u6570\u636e\u548c\u53c2\u8003 SQL</p> <p>\u5b8c\u6210\u8bbe\u7f6e\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u542f\u52a8 Datus \u4e86\uff01</p>"},{"location":"zh/getting_started/Quickstart/#2-datus-cli","title":"\u6b65\u9aa4 2\uff1a\u542f\u52a8 Datus CLI","text":"<p>\u4f7f\u7528\u5df2\u914d\u7f6e\u7684\u547d\u540d\u7a7a\u95f4\u542f\u52a8 Datus CLI\uff1a</p> <p>\u914d\u7f6e\u63d0\u793a</p> <p>\u4f60\u53ef\u4ee5\u5728 <code>agent.yml</code> \u4e2d\u6dfb\u52a0\u591a\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u4ee5\u8fde\u63a5\u4e0d\u540c\u7684\u6570\u636e\u5e93\u3002\u8be6\u89c1\u6211\u4eec\u7684\u914d\u7f6e\u6307\u5357\u3002</p> <p>Terminal<pre><code>datus-cli --namespace duckdb-demo\n</code></pre> <pre><code>Initializing AI capabilities in background...\n\nDatus - AI-powered SQL command-line interface\nType '.help' for a list of commands or '.exit' to quit.\n\nNamespace duckdb selected\nConnected to duckdb using database duckdb\nContext: Current: database: duckdb\nType SQL statements or use ! @ . commands to interact.\nDatus&gt;\n</code></pre></p>"},{"location":"zh/getting_started/Quickstart/#3-datus","title":"\u6b65\u9aa4 3\uff1a\u5f00\u59cb\u4f7f\u7528 Datus","text":"<p>Tip</p> <p>\u4f60\u53ef\u4ee5\u50cf\u5728\u666e\u901a SQL \u7f16\u8f91\u5668\u4e2d\u90a3\u6837\u6267\u884c SQL\u3002</p> <p>\u5217\u51fa\u6240\u6709\u8868\uff1a</p> <p>Terminal<pre><code>Datus&gt; .tables\n</code></pre> <pre><code>Tables in Database duckdb-demo\n+---------------------+\n| Table Name          |\n+=====================+\n| bank_failures       |\n| boxplot             |\n| calendar            |\n| candle              |\n| christmas_cost      |\n| companies           |\n| country_stats_scatter|\n| gold_vs_bitcoin     |\n| japan_births_deaths |\n| japan_population    |\n| metrics             |\n| niger_population    |\n| quotes              |\n| radar               |\n| sankey              |\n| search_trends       |\n| tree                |\n+---------------------+\n</code></pre></p> <p>\u4f60\u53ef\u4ee5\u63d0\u51fa\u4efb\u4f55\u95ee\u9898\u3002\u4ee5 <code>gold_vs_bitcoin</code> \u8868\u4e3a\u4f8b\uff0c\u5148\u67e5\u770b\u5176\u7ed3\u6784\uff1a</p> <p>Terminal<pre><code>Datus&gt; desc gold_vs_bitcoin\n</code></pre> <pre><code>+------------------+------------------+------------------+------------------+------------------+------------------+\n| column_name      | column_type      | null             | key              | default          | extra            |\n+==================+==================+==================+==================+==================+==================+\n| time             | TIMESTAMP        | YES              | None             | None             | None             |\n| gold             | DOUBLE           | YES              | None             | None             | None             |\n| bitcoin          | DOUBLE           | YES              | None             | None             | None             |\n+------------------+------------------+------------------+------------------+------------------+------------------+\nReturned 3 rows in 0.04 seconds\n</code></pre></p> <p>Tip</p> <p>\u82e5\u60f3\u4e0e\u667a\u80fd\u4f53\u5bf9\u8bdd\uff0c\u5728\u547d\u4ee4\u524d\u52a0 <code>/</code> \u5e76\u4f7f\u7528\u81ea\u7136\u8bed\u8a00\u5373\u53ef\u3002</p> <p>\u60f3\u8981\u4e86\u89e3\u9ec4\u91d1\u4e0e\u6bd4\u7279\u5e01\u4e4b\u95f4\u7684\u76f8\u5173\u6027\uff0c\u53ef\u4ee5\u76f4\u63a5\u5411 Datus \u63d0\u95ee\uff1a</p> Terminal<pre><code>Datus&gt; /Detailed analysis of gold\u2013Bitcoin correlation.\n</code></pre> <p>Datus \u4f1a\u5c55\u793a\u5176\u601d\u8003\u8fc7\u7a0b\uff0c\u8bf4\u660e\u5206\u6790\u6b65\u9aa4\uff0c\u5e76\u7ed9\u51fa\u8be6\u7ec6\u62a5\u544a\u3002</p> \u8be6\u7ec6\u5206\u6790\u8f93\u51fa <pre><code>Creating new chat session...\nProcessing chat request...\n+---------------------------------------------------------------------------------------------------------------------------------------+\n|                                                    Action Stream                                                                      |\n+=======================================================================================================================================+\n| \ud83d\udd27 Tool call - search_files('{\"path\": \"/Users/yt/.datus/workspace\", \"pattern\": ...') - \u2713                                            |\n|     No matches found (0.5s)                                                                                                          |\n| \ud83d\udcac Thinking: Let me check the directory structure to see what's available:                                                           |\n| \ud83d\udd27 Tool call - list_directory('{\"path\": \"/Users/yt/.datus/workspace\"}') - \u2713 (0.5s)                                                   |\n| \ud83d\udcac Thinking: Now let me analyze the gold-Bitcoin correlation by examining the data and performing a comprehensive correlation        |\n| analysis:                                                                                                                            |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"SELECT \\n    COUNT(*) as total_records,\\n...') - \u2713                                               |\n|     \u2713 1 rows (0.5s)                                                                                                                  |\n| \ud83d\udcac Thinking: Now let me calculate the correlation coefficient and perform a detailed analysis:                                       |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"SELECT \\n    -- Correlation coefficient\\n...') - \u2713                                               |\n|     \u2713 1 rows (0.5s)                                                                                                                  |\n| \ud83d\udcac Thinking: Let me get more detailed statistics and time-based analysis:                                                            |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"WITH daily_aggregates AS (\\n    SELECT \\n...') - \u2713                                               |\n|     \u2713 1 rows (0.5s)                                                                                                                  |\n| \ud83d\udcac Thinking: Let me check the distribution of the data and look for any patterns:                                                    |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"SELECT \\n    -- Price movement analysis\\n...') - \u2713                                               |\n|     \u2717 Failed:(error_code=500006, e...) (0.5s)                                                                                        |\n| \ud83d\udcac Thinking: Let me fix the query to properly analyze price movement patterns:                                                       |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"WITH price_changes AS (\\n    SELECT \\n   ...') - \u2713                                               |\n|     \u2713 5 rows (0.5s)                                                                                                                  |\n| \ud83d\udcac Thinking: Now let me analyze the strength of the correlation across different time periods and price levels:                      |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"WITH price_quartiles AS (\\n    SELECT \\n ...') - \u2713                                               |\n|     \u2713 16 rows (0.5s)                                                                                                                 |\n| \ud83d\udcac Thinking: Let me also analyze the volatility and risk characteristics:                                                            |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"SELECT \\n    -- Risk and return metrics\\n...') - \u2713                                               |\n|     \u2717 Failed:(error_code=500006, e...) (0.5s)                                                                                        |\n| \ud83d\udcac Thinking: Let me correct the query with the proper function names:                                                                |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"SELECT \\n    -- Risk and return metrics\\n...') - \u2713                                               |\n|     \u2713 1 rows (0.5s)                                                                                                                  |\n| \ud83d\udcac Thinking: Finally, let me examine the time series data to understand the temporal patterns:                                       |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"SELECT \\n    DATE(time) as trading_date,\\...') - \u2713                                               |\n|     \u2713 1 rows (0.5s)                                                                                                                  |\n| \ud83d\udcac Chat interaction completed successfully                                                                                           |\n+---------------------------------------------------------------------------------------------------------------------------------------+\n</code></pre> <p>\u751f\u6210\u7684 SQL\uff1a</p> Generated Query<pre><code>-- Generated SQL (copied)\nSELECT\n    -- Overall correlation and basic stats\n    CORR(gold, bitcoin) as correlation_coefficient,\n    COUNT(*) as total_observations,\n    AVG(gold) as avg_gold_price,\n    AVG(bitcoin) as avg_bitcoin_price,\n    STDDEV(gold) as gold_volatility,\n    STDDEV(bitcoin) as bitcoin_volatility,\n    COVAR_POP(gold, bitcoin) as covariance,\n\n    -- Price movement patterns\n    (SELECT COUNT(*) FROM (\n        SELECT\n            CASE\n                WHEN gold_change &gt; 0 AND bitcoin_change &gt; 0 THEN 'Both Up'\n                WHEN gold_change &lt; 0 AND bitcoin_change &lt; 0 THEN 'Both Down'\n                WHEN gold_change &gt; 0 AND bitcoin_change &lt; 0 THEN 'Gold Up, Bitcoin Down'\n                WHEN gold_change &lt; 0 AND bitcoin_change &gt; 0 THEN 'Gold Down, Bitcoin Up'\n            END as pattern\n        FROM (\n            SELECT\n                gold - LAG(gold) OVER (ORDER BY time) as gold_change,\n                bitcoin - LAG(bitcoin) OVER (ORDER BY time) as bitcoin_change\n            FROM gold_vs_bitcoin\n        ) WHERE gold_change IS NOT NULL\n    ) WHERE pattern = 'Both Up') as both_up_count,\n\n    (SELECT COUNT(*) FROM (\n        SELECT\n            CASE\n                WHEN gold_change &gt; 0 AND bitcoin_change &gt; 0 THEN 'Both Up'\n                WHEN gold_change &lt; 0 AND bitcoin_change &lt; 0 THEN 'Both Down'\n                WHEN gold_change &gt; 0 AND bitcoin_change &lt; 0 THEN 'Gold Up, Bitcoin Down'\n                WHEN gold_change &lt; 0 AND bitcoin_change &gt; 0 THEN 'Gold Down, Bitcoin Up'\n            END as pattern\n        FROM (\n            SELECT\n                gold - LAG(gold) OVER (ORDER BY time) as gold_change,\n                bitcoin - LAG(bitcoin) OVER (ORDER BY time) as bitcoin_change\n            FROM gold_vs_bitcoin\n        ) WHERE gold_change IS NOT NULL\n    ) WHERE pattern = 'Both Down') as both_down_count\nFROM gold_vs_bitcoin\n</code></pre> <p>\u5206\u6790\u7ed3\u679c\uff1a</p> \u9ec4\u91d1-\u6bd4\u7279\u5e01\u76f8\u5173\u6027\u5206\u6790 <pre><code>+===============================================================================================================+\n|                                        Gold-Bitcoin Correlation Analysis                                     |\n+===============================================================================================================+\n\n                                                      \ud83d\udcca Overall Correlation\n\n\u2022 Correlation Coefficient: -0.225 (Weak negative correlation)\n\u2022 Total Observations: 954 data points\n\u2022 Time Period: Single day - December 1, 2024 (16:00 to 16:15)\n\n\n                                                        \ud83d\udcb0 Price Statistics\n\n\u2022 Average Gold Price: 0.684\n\u2022 Average Bitcoin Price: 0.785\n\u2022 Gold Volatility: 0.200\n\u2022 Bitcoin Volatility: 0.233\n\u2022 Covariance: -0.0105\n\n\n                                                    \ud83d\udcc8 Price Movement Patterns\n\nBased on 953 observed price changes:\n\n\u2022 Both Assets Moving Up: 216 times (22.67%)\n\u2022 Both Assets Moving Down: 203 times (21.30%)\n\u2022 Gold Up, Bitcoin Down: 189 times (19.83%)\n\u2022 Gold Down, Bitcoin Up: 190 times (19.94%)\n\n\n                                                          \ud83c\udfaf Key Insights\n\n                                                   1. Weak Negative Correlation\n\nThe -0.225 correlation suggests these assets tend to move in opposite directions more often than together, though the relationship\nis weak.\n\n                                                   2. Similar Movement Patterns\n\nBoth assets show remarkably similar movement patterns:\n\n\u2022 Approximately 44% of the time they move in the same direction\n\u2022 Approximately 40% of the time they move in opposite directions\n\n                                                     3. Volatility Comparison\n\nBitcoin shows slightly higher volatility (0.233) compared to Gold (0.200), which aligns with Bitcoin's reputation as a more\nvolatile asset.\n\n                                                   4. Risk-Adjusted Performance\n\n\u2022 Gold Sharpe Ratio: 3.42\n\u2022 Bitcoin Sharpe Ratio: 3.37 Both assets show strong risk-adjusted returns during this period.\n\n\n                                                           \u26a0\ufe0f Limitations\n\nThis analysis is based on a very short time window (15 minutes of data). For more robust correlation analysis, data spanning\nmultiple days/weeks would be needed to observe:\n\n\u2022 Longer-term correlation trends\n\u2022 Market regime changes\n\u2022 Impact of macroeconomic events\n\u2022 Seasonal patterns\n\n\n                                                    \ud83d\udca1 Investment Implications\n\nThe weak negative correlation suggests these assets could provide some diversification benefits, though the relationship is not\nstrong enough for reliable hedging strategies based on this limited dataset.\n</code></pre> <p>\u5982\u679c\u60f3\u67e5\u770b\u6bcf\u4e00\u6b65\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u53ef\u5728\u7ed3\u675f\u65f6\u8f93\u5165 <code>y</code>\uff1a</p> Terminal<pre><code>Would you like to check the details? (y/n): y\n</code></pre> <p>Datus \u4f1a\u5728\u65b0\u7a97\u53e3\u5c55\u793a\u6240\u6709\u6b65\u9aa4\u8be6\u60c5\u3002</p>"},{"location":"zh/getting_started/Quickstart/#4","title":"\u6b65\u9aa4 4\uff1a\u8fdb\u9636\u529f\u80fd","text":""},{"location":"zh/getting_started/Quickstart/#_3","title":"\u4e0a\u4e0b\u6587\u7ba1\u7406","text":"<p>Note</p> <p>\u524d\u63d0\u662f\u4f60\u5df2\u7ecf\u521d\u59cb\u5316\u4e86\u7528\u4e8e\u5143\u6570\u636e\u7684\u77e5\u8bc6\u5e93\u3002</p> <p>\u5982\u679c\u5e0c\u671b\u628a\u6587\u4ef6\u3001\u6307\u6807\u6216\u6570\u636e\u8868\u52a0\u5165\u4e0a\u4e0b\u6587\uff0c\u53ef\u4f7f\u7528 <code>@</code> \u547d\u4ee4\u3002\u624b\u52a8\u68c0\u7d22\u4e0d\u4ec5\u80fd\u4e3a\u5927\u6a21\u578b\u63d0\u4f9b\u66f4\u7cbe\u786e\u7684\u4e0a\u4e0b\u6587\uff0c\u8fd8\u80fd\u7f29\u5c0f\u641c\u7d22\u8303\u56f4\uff0c\u63d0\u9ad8\u56de\u7b54\u51c6\u786e\u5ea6\u3002</p> Terminal<pre><code>Datus&gt; /@Table duckdb-demo.main.bank_failures\n</code></pre> <p>Datus \u4f1a\u81ea\u52a8\u5206\u6790\u8be5\u8868\uff0c\u5e76\u5c06\u5143\u6570\u636e\u52a0\u5165\u4e0a\u4e0b\u6587\u3002</p> \u4e0a\u4e0b\u6587\u5206\u6790\u8f93\u51fa <pre><code>Processing chat request...\n+----------------------------------------------------------------------------------------------------------------------------------+\n|                                                    Action Stream                                                                 |\n+==================================================================================================================================+\n| \ud83d\udfe1 User: @Table duckdb-demo.main.bank_failures                                                                                  |\n| \ud83d\udcac Generating response with tools...                                                                                            |\n| \ud83d\udcac Thinking: I'll provide a comprehensive analysis of the bank_failures table. Let me start by examining the data structure     |\n| and then perform various analyses.                                                                                              |\n| \ud83d\udd27 Tool call - describe_table('{\"table_name\": \"bank_failures\"}') - \u2713                                                            |\n|     \u2713 7 columns (0.5s)                                                                                                          |\n| \ud83d\udcac Thinking: Now let me perform a comprehensive analysis of the bank failures data:                                             |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- Comprehensive Bank Failures Analysis\\n...') - \u2713                                          |\n|     \u2717 Failed:(error_code=500006, e...) (0.5s)                                                                                   |\n| \ud83d\udcac Thinking: Let me break this down into separate queries for a comprehensive analysis:                                         |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- 1. Basic overview statistics\\nSELECT \\...') - \u2713                                          |\n|     \u2713 1 rows (0.5s)                                                                                                             |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- 2. Yearly analysis of bank failures\\nS...') - \u2713                                          |\n|     \u2713 14 rows (0.5s)                                                                                                            |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- 3. State-wise analysis (top 15 states)...') - \u2713                                          |\n|     \u2713 15 rows (0.5s)                                                                                                            |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- 4. Largest bank failures (top 20 by as...') - \u2713                                          |\n|     \u2713 20 rows (0.5s)                                                                                                            |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- 5. Acquisition analysis (top acquirers...') - \u2713                                          |\n|     \u2713 15 rows (0.5s)                                                                                                            |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- 6. Asset size distribution analysis\\nW...') - \u2713                                          |\n|     \u2713 6 rows (0.5s)                                                                                                             |\n| \ud83d\udd27 Tool call - read_query('{\"sql\": \"-- 7. Recent failures (2023-2024)\\nSELECT...') - \u2713                                          |\n|     \u2713 8 rows (0.5s)                                                                                                             |\n| \ud83d\udcac Chat interaction completed successfully                                                                                      |\n+----------------------------------------------------------------------------------------------------------------------------------+\n\n+==================================================================================================================================+\n|                                       \ud83c\udfe6 Comprehensive Bank Failures Analysis (2008-2024)                                       |\n+==================================================================================================================================+\n\n                                                       \ud83d\udcca Executive Summary\n\n\u2022 Total Failures: 545 banks failed between 2008-2024\n\u2022 Total Assets: $1.696 trillion in failed bank assets\n\u2022 Time Span: 16 years (January 2008 - October 2024)\n\u2022 Geographic Reach: 42 states, 419 cities affected\n\u2022 Average Bank Size: $3.11 billion\n\n\n                                                    \ud83d\udcc8 Key Historical Patterns\n\n                                                       Major Crisis Periods\n\n1 2008-2009 Financial Crisis: 166 failures, $938.1B assets\n\u2022 Peak: 2009 (140 failures, $169.5B assets)\n\u2022 Includes Bear Stearns ($395B) and Washington Mutual ($307B)\n2 2010-2014 Post-Crisis Cleanup: 270 failures, $150.0B assets\n\u2022 Peak: 2010 (157 failures - highest count)\n\u2022 Smaller institutions, regulatory cleanup\n3 2023 Banking Stress: 6 failures, $572.7B assets\n\u2022 Major failures: First Republic ($229B), Silicon Valley Bank ($209B), Signature Bank ($118B)\n\n\n                                                    \ud83d\uddfa\ufe0f Geographic Distribution\n\n                                                  Top 5 States by Failure Count\n\n1 Georgia: 91 failures (16.7%) - $34.4B assets\n2 Florida: 73 failures (13.4%) - $39.2B assets\n3 Illinois: 66 failures (12.1%) - $37.7B assets\n4 California: 43 failures (7.9%) - $559.8B assets\n5 Minnesota: 23 failures (4.2%) - $3.2B assets\n\n                                                   Top 5 States by Assets Lost\n\n1 California: $559.8B (33.0% of total)\n2 New York: $513.4B (30.3% of total)*\n3 Washington: $318.9B (18.8% of total)\n4 Illinois: $37.7B (2.2% of total)\n5 Florida: $39.2B (2.3% of total)\n\n*Includes Bear Stearns and Signature Bank\n\n\n                                                      \ud83d\udcb0 Asset Size Analysis\n\n                                                        Size Distribution\n\n\nAsset Range   Failures   % of Total   Total Assets   % of Assets   Avg Size\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\nUnder $100M   136        24.9%        $7.7B          0.5%          $56M\n$100M-$500M   275        50.5%        $66.5B         3.9%          $242M\n$500M-$1B     57         10.5%        $40.3B         2.4%          $707M\n$1B-$5B       55         10.1%        $119.6B        7.1%          $2.2B\n$5B-$10B      7          1.3%         $43.8B         2.6%          $6.3B\nOver $10B     15         2.8%         $1,418.2B      83.6%         $94.5B\n\n\nKey Insight: While 75% of failures were under $1B in assets, the 15 largest failures (&gt;$10B) represent 83.6% of all failed assets.\n\n\n                                                     \ud83c\udfc6 Largest Bank Failures\n\n1 Bear Stearns (2008) - $395.0B (J.P. Morgan Chase)\n2 Washington Mutual (2008) - $307.0B (JPMorgan Chase)\n3 First Republic Bank (2023) - $229.0B (JPMorgan Chase)\n4 Silicon Valley Bank (2023) - $209.0B (First Citizens)\n5 Signature Bank (2023) - $118.4B (Flagstar Bank)\n\n\n                                                     \ud83c\udfdb\ufe0f Acquisition Landscape\n\n                                                    Top Acquiring Institutions\n\n1 U.S. Bank, N.A.: 13 acquisitions ($38.7B)\n2 State Bank and Trust: 10 acquisitions ($3.5B)\n3 Ameris Bank: 9 acquisitions ($1.9B)\n4 Stearns Bank, N.A.: 9 acquisitions ($1.7B)\n5 First-Citizens Bank: 7 acquisitions ($7.8B)\n\n                                                         Notable Patterns\n\n\u2022 JPMorgan Chase: Acquired 3 institutions but captured $930B+ in assets\n\u2022 20 banks: Had no acquirer (insured depositors paid directly)\n\u2022 Consolidation: Larger banks acquired most failed institutions\n\n\n                                                   \ud83d\udcc5 Recent Trends (2023-2024)\n\n                                                       2023 Major Failures\n\n\u2022 First Republic Bank: $229B (May 2023)\n\u2022 Silicon Valley Bank: $209B (March 2023)\n\u2022 Signature Bank: $118B (March 2023)\n\u2022 Silvergate Bank: $16B (March 2023)\n\n                                                          2024 Failures\n\n\u2022 Republic First Bancorp: $6B (April 2024)\n\u2022 First National Bank of Lindsay: $108M (October 2024)\n\n\n                                                         \ud83c\udfaf Key Insights\n\n                                                  1. Systemic Risk Concentration\n\n\u2022 15 largest failures (2.8% of total) represent 83.6% of failed assets\n\u2022 \"Too big to fail\" remains a significant concern\n\n                                                   2. Geographic Vulnerability\n\n\u2022 Southeast (GA, FL) had highest failure counts\n\u2022 West Coast (CA, WA) had largest asset concentrations\n\n                                                      3. Temporal Clustering\n\n\u2022 Clear crisis periods: 2008-2009, 2010-2014, 2023\n\u2022 Regulatory changes followed each crisis period\n\n                                                         4. Size Matters\n\n\u2022 Most failures were small banks\n\u2022 But systemic risk comes from very large institutions\n\n                                                     5. Acquisition Patterns\n\n\u2022 Large banks benefit from crisis acquisitions\n\u2022 Significant industry consolidation\n\n\n                                                  \u26a0\ufe0f Risk Management Implications\n\n1 Regulatory Focus: Largest institutions require heightened supervision\n2 Regional Monitoring: Southeast banking markets need closer oversight\n3 Crisis Preparedness: Friday intervention patterns suggest need for rapid response capabilities\n4 Systemic Monitoring: Asset concentration remains critical risk indicator\n\nThis analysis provides a comprehensive view of US bank failures over 16 years, highlighting patterns, risks, and regulatory\nimplications for the banking sector.\nWould you like to check the details? (y/n): n\n</code></pre> <p>Tip</p> <p>\u9700\u8981\u66f4\u591a\u547d\u4ee4\u53c2\u8003\u4e0e\u7528\u6cd5\uff0c\u8bf7\u67e5\u770b CLI\uff0c\u6216\u5728\u7ec8\u7aef\u8f93\u5165 <code>.help</code>\u3002</p>"},{"location":"zh/getting_started/Quickstart/#_4","title":"\u4e0b\u4e00\u6b65","text":"<p>\u5728\u5b8c\u6210\u57fa\u7840\u4f53\u9a8c\u540e\uff0c\u53ef\u4ee5\u7ee7\u7eed\u63a2\u7d22\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ul> <li>\u4e0a\u4e0b\u6587\u6570\u636e\u5de5\u7a0b \u2014\u2014 \u5b66\u4e60\u5982\u4f55\u5c06\u6570\u636e\u8d44\u4ea7\u7528\u4f5c\u4e0a\u4e0b\u6587</li> <li>\u914d\u7f6e\u6307\u5357 \u2014\u2014 \u8fde\u63a5\u81ea\u6709\u6570\u636e\u5e93\u5e76\u81ea\u5b9a\u4e49\u8bbe\u7f6e</li> <li>CLI \u53c2\u8003\u624b\u518c \u2014\u2014 \u638c\u63e1\u5168\u90e8\u547d\u4ee4\u4e0e\u9009\u9879</li> <li>MetricFlow \u2014\u2014 \u4f7f\u7528 datus-metricflow \u6784\u5efa\u4e0e\u67e5\u8be2\u6307\u6807</li> </ul>"},{"location":"zh/getting_started/contextual_data_engineering/","title":"\u4e0a\u4e0b\u6587\u6570\u636e\u5de5\u7a0b","text":""},{"location":"zh/getting_started/contextual_data_engineering/#_2","title":"\u4ec0\u4e48\u662f\u4e0a\u4e0b\u6587\u6570\u636e\u5de5\u7a0b","text":"<p>\u4e0a\u4e0b\u6587\u6570\u636e\u5de5\u7a0b\uff08Contextual Data Engineering\uff09 \u662f\u5728 AI \u65f6\u4ee3\u91cd\u65b0\u5b9a\u4e49\u6570\u636e\u7cfb\u7edf\u6784\u5efa\u3001\u7ef4\u62a4\u4e0e\u4f7f\u7528\u65b9\u5f0f\u7684\u65b0\u8303\u5f0f\u3002\u5b83\u4e0d\u518d\u4ec5\u4ec5\u4ea4\u4ed8\u9759\u6001\u7684\u8868\u548c\u7ba1\u9053\uff0c\u800c\u662f\u4e13\u6ce8\u4e8e\u6784\u5efa \u53ef\u6f14\u5316\u7684\u4e0a\u4e0b\u6587\u2014\u2014\u4e00\u4e2a\u667a\u80fd\u3001\u9c9c\u6d3b\u7684\u6570\u636e\u5c42\uff0c\u5c06\u5143\u6570\u636e\u3001\u53c2\u8003 SQL\u3001\u8bed\u4e49\u6a21\u578b\u4e0e\u6307\u6807\u878d\u4e3a\u4e00\u4f53\uff0c\u65e2\u65b9\u4fbf\u4eba\u5de5\u4e5f\u65b9\u4fbf AI \u667a\u80fd\u4f53\u7406\u89e3\u3002</p> <p></p> <ul> <li>\u4f20\u7edf\u6570\u636e\u5de5\u7a0b\uff1a\u6570\u636e\u7ba1\u9053\u4ee5\u4ea4\u4ed8\u6570\u636e\u4e3a\u7ec8\u70b9\u3002</li> <li>\u4e0a\u4e0b\u6587\u6570\u636e\u5de5\u7a0b\uff1a\u7ba1\u9053\u672c\u8eab\u6f14\u5316\u4e3a**\u6570\u636e\u7cfb\u7edf\u7684\u77e5\u8bc6\u56fe\u8c31**\uff0c\u6301\u7eed\u5438\u6536\u5386\u53f2 SQL\u3001\u53cd\u9988\u5faa\u73af\u548c\u4eba\u5de5\u4fee\u6b63\u3002</li> </ul> <p>\u8fd9\u4e0d\u53ea\u662f\u201c\u642c\u8fd0\u6570\u636e\u3001\u5efa\u8868\u201d\uff0c\u800c\u662f\u201c\u7406\u89e3\u5e76\u6301\u7eed\u8fdb\u5316\u201d\u56f4\u7ed5\u6570\u636e\u7684\u4e0a\u4e0b\u6587\u3002</p>"},{"location":"zh/getting_started/contextual_data_engineering/#_3","title":"\u4e3a\u4ec0\u4e48\u91cd\u8981","text":"<p>\u7f3a\u4e4f\u4e0a\u4e0b\u6587\u7684\u5927\u6a21\u578b\u4f1a\u4ea7\u751f\u5e7b\u89c9</p> <p>\u6570\u636e\u4e0a\u4e0b\u6587\u5e7f\u9614\u4e14\u590d\u6742\u3002\u6211\u4eec\u9700\u8981\u6700\u61c2\u6570\u636e\u7684\u6570\u636e\u5de5\u7a0b\u5e08\u6765\u6784\u5efa\u53ef\u590d\u7528\u3001\u9762\u5411 AI \u7684\u4e0a\u4e0b\u6587\uff0c\u4e3a\u6bcf\u4e00\u6b21\u67e5\u8be2\u548c\u56de\u7b54\u63d0\u4f9b\u4f9d\u636e\u3002</p> <p>\u9759\u6001\u6570\u636e\u8868\u65e0\u6cd5\u6ee1\u8db3\u52a8\u6001\u9700\u6c42</p> <p>\u73b0\u4ee3\u4e1a\u52a1\u95ee\u9898\u6bcf\u5929\u90fd\u5728\u53d8\u5316\u3002\u4e34\u65f6\u5206\u6790\u8bf7\u6c42\u5360\u636e\u4e86\u6570\u636e\u5de5\u7a0b\u5e08\u4e00\u534a\u7684\u65f6\u95f4\uff0c\u800c\u8fd9\u4e9b\u67e5\u8be2\u80cc\u540e\u7684\u77e5\u8bc6\u5f88\u5c11\u88ab\u6355\u83b7\u6216\u590d\u7528\u3002</p> <p>\u4f20\u7edf\u6570\u636e\u5de5\u7a0b\u7f3a\u4e4f\u53ef\u6f14\u5316\u80fd\u529b</p> <p>\u8fc7\u53bb\u7684\u5173\u6ce8\u70b9\u4e00\u76f4\u504f\u5411\u6570\u636e\u6d88\u8d39\u8005\uff08\u5206\u6790\u4e0e\u770b\u677f\uff09\uff0c\u800c\u975e\u6784\u5efa\u4e0a\u4e0b\u6587\u4e0e\u51c6\u786e\u6027\u7684\u751f\u4ea7\u7aef\u3002\u4e0a\u4e0b\u6587\u6570\u636e\u5de5\u7a0b\u6539\u53d8\u4e86\u8fd9\u4e00\u70b9\u2014\u2014\u8ba9\u5de5\u7a0b\u5e08\u8f93\u51fa\u201c\u9c9c\u6d3b\u7684\u4e0a\u4e0b\u6587\u201d\uff0c\u800c\u975e\u9759\u6001\u7684\u5de5\u4ef6\u3002</p>"},{"location":"zh/getting_started/contextual_data_engineering/#datus","title":"\u4e3a\u4ec0\u4e48\u9009\u62e9 Datus","text":"<p>\u4e0a\u4e0b\u6587\u81ea\u52a8\u6355\u83b7</p> <p>Datus \u4f1a\u6309\u9700\u6355\u83b7\u3001\u5b58\u50a8\u5e76\u53ec\u56de\u5386\u53f2 SQL\u3001\u6570\u636e\u8868\u7ed3\u6784\u3001\u6307\u6807\u4e0e\u8bed\u4e49\u5c42\uff0c\u5c06\u6bcf\u4e00\u6b21\u4ea4\u4e92\u90fd\u8f6c\u5316\u4e3a\u957f\u671f\u77e5\u8bc6\u3002</p> <p>\u5f3a\u5316\u7684\u957f\u671f\u8bb0\u5fc6</p> <p>\u53cc\u91cd\u53ec\u56de\u673a\u5236\uff08\u6811\u7ed3\u6784 + \u5411\u91cf\uff09\u4e0d\u4ec5\u80fd\u8bb0\u4f4f\u7cbe\u786e\u5339\u914d\uff0c\u8fd8\u80fd\u8bc6\u522b\u8bed\u4e49\u76f8\u5173\u7684\u67e5\u8be2\u4e0e\u6a21\u5f0f\uff0c\u6301\u7eed\u6784\u5efa\u4f60\u7684\u201c\u4e0a\u4e0b\u6587\u56fe\u8c31\u201d\u3002</p> <p>\u4e0d\u65ad\u6f14\u8fdb\u7684\u4e0a\u4e0b\u6587\u5de5\u7a0b</p> <p>\u7cfb\u7edf\u4ece\u673a\u5668\u751f\u6210\u4e0e\u4eba\u5de5\u53cd\u9988\u4e2d\u5b66\u4e60\uff0c\u968f\u65f6\u95f4\u8fed\u4ee3\u4f18\u5316\u3002\u6bcf\u6b21\u7ea0\u9519\u3001\u57fa\u51c6\u6d4b\u8bd5\u6216\u6210\u529f\u6848\u4f8b\u90fd\u4f1a\u6c89\u6dc0\u5230\u81ea\u6211\u8fdb\u5316\u7684\u6570\u636e\u8bb0\u5fc6\u4e2d\u3002</p>"},{"location":"zh/getting_started/contextual_data_engineering/#_4","title":"\u6838\u5fc3\u6982\u5ff5","text":""},{"location":"zh/getting_started/contextual_data_engineering/#_5","title":"\u957f\u671f\u8bb0\u5fc6","text":"<p>\u6211\u4eec\u5c06 \u6570\u636e\u5de5\u7a0b\u4e0a\u4e0b\u6587\uff08\u957f\u671f\u8bb0\u5fc6\uff09 \u5efa\u6a21\u4e3a \u4e24\u68f5\u6811 \uff1a</p> <p></p> <ul> <li>\u5728 Datus CLI \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>@catalog</code> \u4e0e <code>@subject</code> \u6d4f\u89c8\u548c\u7f16\u8f91</li> <li>\u4f7f\u7528 <code>datus-agent bootstrap-kb</code> \u6279\u91cf\u521d\u59cb\u5316\u5e76\u51b7\u542f\u52a8\u77e5\u8bc6\u5e93</li> <li>\u501f\u52a9\u5b50\u4ee3\u7406\uff08Subagent\uff09\uff0c\u4f60\u53ef\u4ee5\u5b9a\u4e49**\u8303\u56f4\u5316\u4e0a\u4e0b\u6587**\u2014\u2014\u4ece\u5168\u5c40\u5b58\u50a8\u4e2d\u6311\u9009\u4e00\u4e2a\u7cbe\u5fc3\u6574\u7406\u7684\u5b50\u96c6\uff0c\u5b9e\u73b0\u7cbe\u51c6\u3001\u5177\u9886\u57df\u611f\u77e5\u7684\u4ea4\u4ed8</li> </ul>"},{"location":"zh/getting_started/contextual_data_engineering/#_6","title":"\u4ea4\u4e92\u5f0f\u4e0a\u4e0b\u6587\u6784\u5efa","text":"<p>\u534f\u540c\u521b\u4f5c\u7684\u4e0a\u4e0b\u6587</p> <p>\u5927\u6a21\u578b\u4ece\u6570\u636e\u8868\u548c\u53c2\u8003 SQL \u8d77\u8349\u8bed\u4e49\u6a21\u578b\u4e0e\u6307\u6807\uff0c\u5de5\u7a0b\u5e08\u8d1f\u8d23\u5b8c\u5584\u6807\u7b7e\u3001\u5143\u6570\u636e\u548c\u4e3b\u9898\u6811\u3002</p> <p>\u547d\u4ee4\u9a71\u52a8\u7684\u8fed\u4ee3</p> <p>\u4f7f\u7528 <code>/gen_semantic_model</code>\u3001<code>/gen_metrics</code>\u3001<code>/gen_sql_summary</code> \u7b49\u547d\u4ee4\u521b\u5efa\u6216\u66f4\u65b0\u8d44\u4ea7\uff1b<code>@catalog</code> \u548c <code>@subject</code> \u9875\u9762\u652f\u6301\u5c31\u5730\u7f16\u8f91\u3002</p> <p>\u53cd\u9988\u9a71\u52a8\u6301\u7eed\u6539\u8fdb</p> <p>\u901a\u8fc7 <code>/chat</code> \u63a2\u7d22\u3001\u6210\u529f\u6848\u4f8b\u56de\u5199\u3001\u95ee\u9898\u4e0e\u57fa\u51c6\u5faa\u73af\uff0c\u5c06\u4f7f\u7528\u8fc7\u7a0b\u8f6c\u5316\u4e3a\u53ef\u590d\u7528\u7684\u957f\u671f\u77e5\u8bc6\u3002</p>"},{"location":"zh/getting_started/contextual_data_engineering/#_7","title":"\u5b50\u4ee3\u7406\u7cfb\u7edf","text":"<p>\u8303\u56f4\u5316\u3001\u5177\u9886\u57df\u611f\u77e5\u7684\u5b50\u4ee3\u7406</p> <p>\u5c06\u63cf\u8ff0\u3001\u89c4\u5219\u548c\u4e0a\u4e0b\u6587\u6253\u5305\uff0c\u7edf\u4e00\u7ba1\u7406\u7279\u5b9a\u4e1a\u52a1\u573a\u666f\u6240\u9700\u7684\u6570\u636e\u8868\u3001SQL \u6a21\u5f0f\u3001\u6307\u6807\u4e0e\u7ea6\u675f\u3002</p> <p>\u53ef\u914d\u7f6e\u7684\u5de5\u5177\u4e0e MCP</p> <p>\u9488\u5bf9\u4e0d\u540c\u573a\u666f\u914d\u7f6e\u5de5\u5177\u3002\u5185\u7f6e\u5de5\u5177\u5305\u62ec\u6570\u636e\u5e93\u3001\u4e0a\u4e0b\u6587\u641c\u7d22\u4e0e\u6587\u4ef6\u7cfb\u7edf\u7b49\uff0c\u53ef\u6309\u9700\u542f\u7528\u4e0e\u7ec4\u5408\u3002</p> <p>\u9762\u5411\u5f3a\u5316\u5b66\u4e60\u7684\u67b6\u6784</p> <p>\u5b50\u4ee3\u7406\u7684\u8303\u56f4\u5316\u4e0a\u4e0b\u6587\u6784\u6210\u7406\u60f3\u7684\u5f3a\u5316\u5b66\u4e60\u73af\u5883\uff08\u73af\u5883 + \u95ee\u9898 + SQL\uff09\uff0c\u4fbf\u4e8e\u6301\u7eed\u8bad\u7ec3\u4e0e\u8bc4\u4f30\u3002</p>"},{"location":"zh/getting_started/contextual_data_engineering/#_8","title":"\u5de5\u5177\u4e0e\u7ec4\u4ef6","text":"<p>Datus CLI</p> <p>\u4e13\u4e3a\u6570\u636e\u5de5\u7a0b\u5e08\u6253\u9020\u7684\u4ea4\u4e92\u5f0f CLI\uff0c\u5185\u7f6e\u4e0a\u4e0b\u6587\u538b\u7f29\u4e0e\u68c0\u7d22\u3002\u63d0\u4f9b\u4e09\u7c7b\u201c\u9b54\u6cd5\u547d\u4ee4\u201d\uff1a</p> <ul> <li><code>/</code>\uff1a\u53d1\u8d77\u5bf9\u8bdd\u4e0e\u7f16\u6392</li> <li><code>@</code>\uff1a\u67e5\u770b\u4e0e\u53ec\u56de\u4e0a\u4e0b\u6587</li> <li><code>!</code>\uff1a\u6267\u884c\u8282\u70b9/\u5de5\u5177\u64cd\u4f5c</li> </ul> <p>Datus Agent</p> <p>\u4e00\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u4e0e\u5f15\u5bfc\u5de5\u5177\uff0c\u4f5c\u4e3a CLI \u7684\u6279\u5904\u7406\u4f19\u4f34\uff0c\u53ef\u7528\u4e8e\uff1a</p> <ul> <li>\u4ece\u5386\u53f2\u6570\u636e\u6784\u5efa\u521d\u59cb\u4e0a\u4e0b\u6587</li> <li>\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\u4e0e\u8bc4\u4f30</li> <li>\u66b4\u9732\u76f8\u5e94 API</li> </ul> <p>Datus Chat</p> <p>\u9762\u5411\u5206\u6790\u5e08\u4e0e\u4e1a\u52a1\u7528\u6237\u7684\u8f7b\u91cf\u7ea7\u7f51\u9875\u804a\u5929\u673a\u5668\u4eba\uff0c\u652f\u6301\uff1a</p> <ul> <li>\u591a\u8f6e\u5bf9\u8bdd</li> <li>\u5185\u7f6e\u53cd\u9988\uff08\u70b9\u8d5e\u3001\u95ee\u9898\u53cd\u9988\u3001\u6210\u529f\u6848\u4f8b\uff09</li> </ul>"},{"location":"zh/getting_started/contextual_data_engineering/#_9","title":"\u7528\u6237\u65c5\u7a0b","text":""},{"location":"zh/getting_started/contextual_data_engineering/#_10","title":"\u521d\u59cb\u63a2\u7d22","text":"<p>\u4ece <code>/chat</code> \u5f00\u59cb</p> <p>\u63a2\u6d4b\u6570\u636e\u5e93\uff0c\u5feb\u901f\u9a8c\u8bc1\u7aef\u5230\u7aef\u95ee\u7b54\uff1a\u7406\u89e3\u8868\u7ed3\u6784\u3001\u5b8c\u6210\u7b80\u5355\u805a\u5408\u4e0e\u67e5\u8be2\u3002</p> <p>\u7ed3\u5408\u5b9a\u5411\u63d0\u793a\u8fdb\u884c\u4f18\u5316</p> <p>\u4f7f\u7528 <code>/question + @table @file</code> \u63d0\u4f9b\u793a\u4f8b\u3001\u8054\u63a5\u89c4\u5219\u3001\u5b57\u6bb5\u8bf4\u660e\u6216\u67e5\u8be2\u6a21\u677f\uff0c\u8ba9\u6a21\u578b\u66f4\u5feb\u9501\u5b9a\u6b63\u786e\u4e0a\u4e0b\u6587\u3002</p> <p>\u5efa\u7acb\u7d27\u5bc6\u53cd\u9988\u5faa\u73af</p> <p>\u5c1d\u8bd5 \u2192 \u68c0\u67e5\u7ed3\u679c \u2192 \u8865\u5145\u8bf4\u660e\uff08\u4f8b\u5982\u201c\u4f7f\u7528 <code>orders</code> \u4e0e <code>users</code> \u7684\u4e3b\u952e\u8054\u63a5\u201d\uff0c\u201c<code>status</code> \u2208 {A,B,C}\u201d\uff09\u2192 \u518d\u6b21\u6267\u884c\u3002</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>/chat What were last week's DAU and retention for the new region?\n/question @table users events @file ./notes/retention_rules.md\n</code></pre>"},{"location":"zh/getting_started/contextual_data_engineering/#_11","title":"\u6784\u5efa\u4e0a\u4e0b\u6587","text":"<p>\u5bfc\u5165\u53c2\u8003 SQL</p> <p>\u6355\u83b7\u6210\u719f\u6a21\u5f0f\u548c\u8fb9\u754c\u573a\u666f\uff0c\u5c06\u9ad8\u4ef7\u503c\u7247\u6bb5\u63d0\u5347\u4e3a\u53ef\u590d\u7528\u6a21\u5757\u3002\u8be6\u89c1\u53c2\u8003 SQL \u8ffd\u8e2a\u3002</p> <p>\u751f\u6210\u521d\u7248\u8d44\u4ea7</p> <ul> <li><code>/gen_semantic_model @table ...</code> \u2014\u2014 \u8349\u62df\u7ef4\u5ea6\u4e0e\u5ea6\u91cf\u7684 YAML</li> <li><code>/gen_metrics @sql @semantic_model ...</code> \u2014\u2014 \u5b9a\u4e49\u4e1a\u52a1\u6307\u6807\u4e0e\u6d4b\u8bd5</li> <li><code>/gen_sql_summary @file ./sql/</code> \u2014\u2014 \u603b\u7ed3\u610f\u56fe\u4e0e\u4f9d\u8d56</li> </ul> <p>\u4eba\u5de5\u5728\u73af\u7684\u7b56\u5212</p> <p>\u5b8c\u5584 domain \u2192 layer_1 \u2192 layer_2 \u63cf\u8ff0\uff1b\u7edf\u4e00\u547d\u540d\u89c4\u8303\uff1b\u5728 <code>@catalog</code> / <code>@subject</code> \u4e2d\u76f4\u63a5\u7f16\u8f91\u5143\u6570\u636e\u3002</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>/gen_semantic_model @table fact_orders dim_users\n/gen_metrics @sql ./sql/retention.sql @semantic_model ./models/game.yaml \"30-day retention\"\n</code></pre>"},{"location":"zh/getting_started/contextual_data_engineering/#_12","title":"\u521b\u5efa\u5b50\u4ee3\u7406","text":"<p>\u5b9a\u4e49\u5177\u9886\u57df\u611f\u77e5\u7684\u804a\u5929\u673a\u5668\u4eba</p> <p>\u4f7f\u7528 <code>.subagent add &lt;name&gt;</code> \u4e3a\u7279\u5b9a\u573a\u666f\uff08\u5982\u201c\u5546\u4e1a\u5316\u5206\u6790\u201d\uff09\u521b\u5efa\u5b50\u4ee3\u7406\u3002</p> <p>\u6253\u5305\u6838\u5fc3\u8981\u7d20</p> <p>\u5305\u542b\u63cf\u8ff0\u3001\u89c4\u5219\uff08\u8054\u63a5\u952e\u3001\u8fc7\u6ee4\u6761\u4ef6\u3001\u8ba1\u7b97\u89c4\u5219\uff09\u3001\u8303\u56f4\u5316\u4e0a\u4e0b\u6587\uff08\u6570\u636e\u8868\u3001SQL \u7247\u6bb5\u3001\u6307\u6807\uff09\u53ca\u53ef\u7528\u5de5\u5177\u3002</p> <p>\u7ea6\u675f\u641c\u7d22\u7a7a\u95f4</p> <p>\u9650\u5236\u53ef\u7528\u7684\u76ee\u5f55/\u6570\u636e\u8868\uff0c\u4ec5\u542f\u7528\u76f8\u5173\u5de5\u5177\u6216 MCP\uff08\u6570\u636e\u5e93\u3001\u4e0a\u4e0b\u6587\u641c\u7d22\u3001\u5fc5\u8981\u65f6\u7684\u6587\u4ef6\u7cfb\u7edf\uff09\u3002</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>.subagent add california_schools\n</code></pre>"},{"location":"zh/getting_started/contextual_data_engineering/#_13","title":"\u4ea4\u4ed8\u4e0e\u8fed\u4ee3","text":"<p>\u4e0a\u7ebf\u5230 Web</p> <p>\u5c06\u5b50\u4ee3\u7406\u53d1\u5e03\u4e3a\u8f7b\u91cf\u7ea7\u804a\u5929\u754c\u9762\uff0c\u4f9b\u5206\u6790\u5e08\u8fdb\u884c\u591a\u8f6e\u5206\u6790\u4e0e\u62a5\u8868\u9884\u89c8\u3002</p> <pre><code>datus-agent --namespace schools --web\n</code></pre> <p>\u968f\u540e\u53ef\u8bbf\u95ee <code>http://localhost:8501/?subagent=california_schools</code>\uff08\u82e5\u5bf9\u5916\u90e8\u7f72\uff0c\u8bf7\u5c06 <code>localhost</code> \u66ff\u6362\u4e3a\u5916\u7f51\u53ef\u8bbf\u95ee\u7684\u5730\u5740\uff09\u3002</p> <p>\u91c7\u96c6\u5e76\u56de\u5199\u53cd\u9988</p> <p>\u5206\u6790\u5e08\u53ef\u4ee5\u5bf9\u7ed3\u679c\u70b9\u8d5e\u3001\u62a5\u544a\u95ee\u9898\uff0c\u5e76\u63d0\u4f9b\u53ef\u8ffd\u6eaf\u7684\u4f1a\u8bdd\u94fe\u63a5\u3002\u4f18\u79c0\u6848\u4f8b\u53ef\u5bfc\u51fa\u4e3a**\u6210\u529f\u6545\u4e8b**\u3002</p> <p>\u95ed\u73af\u6539\u8fdb</p> <p>\u6570\u636e\u5de5\u7a0b\u5e08\u6536\u5230\u53cd\u9988\u540e\uff0c\u53ef\u8c03\u6574 SQL\u3001\u66f4\u65b0\u89c4\u5219\u4e0e\u5143\u6570\u636e\u3001\u8865\u5145\u6307\u6807\u6216\u6269\u5c55\u4e0a\u4e0b\u6587\u8303\u56f4\u3002\u968f\u7740\u77e5\u8bc6\u88ab\u4e0d\u65ad\u6355\u83b7\uff0c\u5b50\u4ee3\u7406\u4e5f\u6301\u7eed\u8fdb\u5316\u3002</p>"},{"location":"zh/getting_started/contextual_data_engineering/#_14","title":"\u4e0b\u4e00\u6b65","text":"<ul> <li> <p> \u77e5\u8bc6\u5e93</p> <p>\u63a2\u7d22\u5305\u542b\u5143\u6570\u636e\u3001\u6307\u6807\u4e0e\u53c2\u8003 SQL \u7684\u4e0a\u4e0b\u6587\u7ba1\u7406\u7ec6\u8282\u3002</p> <p> \u6df1\u5165\u4e86\u89e3</p> </li> <li> <p> \u5de5\u4f5c\u6d41\u96c6\u6210</p> <p>\u5c06\u4e0a\u4e0b\u6587\u878d\u5165\u81ea\u52a8\u5316\u6570\u636e\u7ba1\u9053\u4e0e\u7f16\u6392\u7cfb\u7edf\u3002</p> <p> \u63a2\u7d22\u5de5\u4f5c\u6d41</p> </li> <li> <p> CLI \u4e0a\u4e0b\u6587\u547d\u4ee4</p> <p>\u901a\u8fc7\u5b9e\u8df5\u638c\u63e1 CLI \u4e0a\u4e0b\u6587\u7ba1\u7406\u547d\u4ee4\u3002</p> <p> \u67e5\u770b\u547d\u4ee4</p> </li> <li> <p> \u914d\u7f6e</p> <p>\u4e3a\u667a\u80fd\u4f53\u3001\u547d\u540d\u7a7a\u95f4\u4e0e\u5b58\u50a8\u914d\u7f6e\u9ad8\u7ea7\u8bbe\u7f6e\u3002</p> <p> \u914d\u7f6e\u6307\u5357</p> </li> </ul>"},{"location":"zh/getting_started/contextual_data_engineering/#_15","title":"\u76f8\u5173\u8d44\u6e90","text":"<ul> <li>\u5143\u6570\u636e\u7ba1\u7406 \u2014\u2014 \u7ec4\u7ec7\u4e0e\u7ba1\u7406\u6570\u636e\u8868\u7ed3\u6784\u548c\u5b57\u6bb5\u8bf4\u660e</li> <li>\u6307\u6807\u5b9a\u4e49 \u2014\u2014 \u5b9a\u4e49\u53ef\u590d\u7528\u7684\u4e1a\u52a1\u6307\u6807</li> <li>\u53c2\u8003 SQL \u8ffd\u8e2a \u2014\u2014 \u6355\u83b7\u5e76\u5229\u7528\u5386\u53f2\u67e5\u8be2\u6a21\u5f0f</li> <li>\u4e0a\u4e0b\u6587\u547d\u4ee4\u53c2\u8003 \u2014\u2014 CLI \u4e0a\u4e0b\u6587\u547d\u4ee4\u5168\u89c8</li> </ul>"},{"location":"zh/metricflow/introduction/","title":"Datus-MetricFlow \u4ecb\u7ecd","text":"<p>\u8bf4\u660e\uff1a\u672c\u9879\u76ee\u57fa\u4e8e dbt-labs/metricflow 0.140.0 \u5206\u652f\u7ee7\u7eed\u6f14\u8fdb\uff0c\u611f\u8c22 dbt Labs \u56e2\u961f\u5bf9\u539f\u59cb\u9879\u76ee\u7684\u51fa\u8272\u8d21\u732e\u3002</p>"},{"location":"zh/metricflow/introduction/#metricflow","title":"\u4ec0\u4e48\u662f MetricFlow\uff1f","text":"<p>MetricFlow \u662f\u4e00\u5c42\u8bed\u4e49\u5c42\uff0c\u7528\u4e8e\u4ee5\u4ee3\u7801\u65b9\u5f0f\u7ec4\u7ec7\u4e0e\u7ba1\u7406\u201c\u4e1a\u52a1\u6307\u6807\u201d\u7684\u5b9a\u4e49\u3002\u5b83\u80fd\u6839\u636e\u6307\u6807\u5b9a\u4e49\u81ea\u52a8\u751f\u6210\u7b80\u6d01\u3001\u53ef\u590d\u7528\u4e14\u4e00\u81f4\u7684 SQL\uff0c\u8ba9\u5168\u7ec4\u7ec7\u8303\u56f4\u5185\u7684\u6307\u6807\u53e3\u5f84\u7edf\u4e00\u3002</p> <p>\u501f\u52a9 MetricFlow \u4f60\u53ef\u4ee5\uff1a</p> <ul> <li>\u5c06\u4e1a\u52a1\u6307\u6807\u7528\u6807\u51c6\u5316\u65b9\u5f0f\u201c\u4e00\u6b21\u5b9a\u4e49\uff0c\u591a\u5904\u590d\u7528\u201d</li> <li>\u6309\u4e0d\u540c\u7ef4\u5ea6\uff08\u65f6\u95f4\u3001\u5730\u57df\u3001\u54c1\u7c7b\u7b49\uff09\u4e00\u81f4\u5730\u67e5\u8be2\u8fd9\u4e9b\u6307\u6807</li> <li>\u83b7\u53d6\u9488\u5bf9\u6570\u636e\u4ed3\u5e93\u4f18\u5316\u751f\u6210\u7684 SQL</li> </ul>"},{"location":"zh/metricflow/introduction/#_1","title":"\u5173\u952e\u7279\u6027","text":""},{"location":"zh/metricflow/introduction/#_2","title":"\u6307\u6807\u7ba1\u7406","text":"<ul> <li>\u96c6\u4e2d\u5f0f\u5b9a\u4e49\uff1a\u4f7f\u7528\u7b80\u6d01 YAML \u5728\u7edf\u4e00\u4f4d\u7f6e\u7ef4\u62a4\u6307\u6807</li> <li>\u591a\u79cd\u6307\u6807\u7c7b\u578b\uff1a\u7b80\u5355\u6307\u6807\u3001\u6bd4\u7387\u3001\u8868\u8fbe\u5f0f\u3001\u7d2f\u8ba1\u6307\u6807</li> <li>\u7ef4\u5ea6\u5206\u6790\uff1a\u6309\u4efb\u610f\u7ef4\u5ea6\u62c6\u5206\uff08\u65f6\u95f4\u3001\u5730\u7406\u3001\u54c1\u7c7b\u7b49\uff09</li> </ul>"},{"location":"zh/metricflow/introduction/#_3","title":"\u667a\u80fd\u67e5\u8be2\u751f\u6210","text":"<ul> <li>\u81ea\u52a8 SQL \u751f\u6210\uff1a\u5c06\u6307\u6807\u8bf7\u6c42\u8f6c\u6362\u4e3a\u4f18\u5316 SQL \u67e5\u8be2</li> <li>\u591a\u8df3\u8054\u63a5\uff1a\u5904\u7406\u4e8b\u5b9e\u8868\u4e0e\u7ef4\u8868\u4e4b\u95f4\u7684\u590d\u6742\u8054\u63a5</li> <li>\u65f6\u95f4\u7c92\u5ea6\uff1a\u6309\u65e5/\u5468/\u6708\u7b49\u591a\u7c92\u5ea6\u805a\u5408</li> </ul>"},{"location":"zh/metricflow/introduction/#_4","title":"\u96c6\u6210\u4e0e\u7075\u6d3b\u6027","text":"<ul> <li>\u591a\u6570\u636e\u4ed3\u5e93\uff1a\u9002\u914d\u591a\u79cd\u6570\u636e\u5e73\u53f0</li> <li>API \u96c6\u6210\uff1a\u53ef\u4e0e\u4e0b\u6e38\u5de5\u5177\u8fdb\u884c\u6269\u5c55\u96c6\u6210</li> <li>\u7248\u672c\u63a7\u5236\uff1a\u50cf\u4ee3\u7801\u4e00\u6837\u7528 Git \u7ba1\u7406\u6307\u6807\u5b9a\u4e49</li> </ul>"},{"location":"zh/metricflow/introduction/#_5","title":"\u652f\u6301\u7684\u7cfb\u7edf","text":""},{"location":"zh/metricflow/introduction/#_6","title":"\u6570\u636e\u4ed3\u5e93","text":"<p>\u5f53\u524d\u652f\u6301\uff1a</p> <ul> <li>DuckDB \u2014 \u5d4c\u5165\u5f0f\u5206\u6790\u6570\u636e\u5e93\uff08\u9002\u5408\u672c\u5730\u4e0e Demo\uff09</li> <li>SQLite \u2014 \u8f7b\u91cf\u7ea7\u5d4c\u5165\u5f0f\u6570\u636e\u5e93</li> <li>StarRocks \u2014 \u9ad8\u6027\u80fd\u5206\u6790\u578b\u6570\u636e\u5e93</li> </ul>"},{"location":"zh/metricflow/introduction/#datus-metricflow_1","title":"datus-metricflow \u7684\u589e\u5f3a","text":"<p>\u5728 0.140.0 \u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\uff1a</p> <ul> <li>Python 3.12 \u652f\u6301</li> <li>\u65b0\u589e\u6570\u636e\u5e93\u9002\u914d\uff1aSQLite\u3001StarRocks</li> <li>\u4e0e Datus \u96c6\u6210\uff1a\u7edf\u4e00\u914d\u7f6e\u3001\u65e0\u7f1d\u534f\u4f5c</li> <li>\u72ec\u7acb\u5b89\u88c5\u5305\uff1a\u53ef\u4f5c\u4e3a\u4f9d\u8d56\u5355\u72ec\u4f7f\u7528</li> <li>MCP \u670d\u52a1\u5668\uff1a\u901a\u8fc7 Model Context Protocol \u8ba9 LLM \u5e94\u7528\u67e5\u8be2\u6307\u6807</li> </ul>"},{"location":"zh/metricflow/introduction/#_7","title":"\u5b89\u88c5","text":"<p>\u786e\u4fdd\u7cfb\u7edf\u5df2\u5b89\u88c5 Python 3.12\uff0c\u7136\u540e\u6267\u884c\uff1a <pre><code>pip install datus-metricflow\n</code></pre></p>"},{"location":"zh/metricflow/introduction/#_8","title":"\u4e0b\u4e00\u6b65","text":"<ol> <li>\u5b9a\u4e49\u6307\u6807\uff1a\u5728\u8bed\u4e49\u6a21\u578b\u76ee\u5f55\u7f16\u5199 YAML\uff0c\u6216\u4f7f\u7528 subagent \u5b9a\u4e49\u4e1a\u52a1\u6307\u6807</li> <li>\u67e5\u8be2\u6307\u6807\uff1a\u4f7f\u7528 <code>mf query</code> \u6216\u7ed3\u5408 Datus Agent \u8fdb\u884c\u67e5\u8be2</li> <li>\u5de5\u5177\u96c6\u6210\uff1a\u901a\u8fc7 MCP \u670d\u52a1\u5668\u5c06 MetricFlow \u63a5\u5165 LLM \u5e94\u7528</li> </ol>"},{"location":"zh/subagent/builtin_subagents/","title":"\u5185\u7f6e Subagent","text":""},{"location":"zh/subagent/builtin_subagents/#_1","title":"\u6982\u89c8","text":"<p>\u5185\u7f6e Subagent  \u662f\u96c6\u6210\u5728 Datus Agent \u7cfb\u7edf\u4e2d\u7684\u4e13\u7528 AI \u52a9\u624b\u3002\u6bcf\u4e2asubagent\u4e13\u6ce8\u4e8e\u6570\u636e\u5de5\u7a0b\u81ea\u52a8\u5316\u7684\u7279\u5b9a\u65b9\u9762\u2014\u2014\u5206\u6790 SQL\u3001\u751f\u6210\u8bed\u4e49\u6a21\u578b\u3001\u5c06\u67e5\u8be2\u8f6c\u6362\u4e3a\u53ef\u590d\u7528\u6307\u6807\u2014\u2014\u5171\u540c\u6784\u6210\u4ece\u539f\u59cb SQL \u5230\u5177\u5907\u77e5\u8bc6\u611f\u77e5\u7684\u6570\u636e\u4ea7\u54c1\u7684\u95ed\u73af\u5de5\u4f5c\u6d41\u3002</p> <p>\u672c\u6587\u6863\u6db5\u76d6\u4e09\u4e2a\u6838\u5fc3subagent\uff1a</p> <ol> <li>gen_sql_summary \u2014 \u603b\u7ed3\u548c\u5206\u7c7b SQL \u67e5\u8be2</li> <li>gen_semantic_model \u2014 \u751f\u6210 MetricFlow \u8bed\u4e49\u6a21\u578b</li> <li>gen_metrics \u2014 \u751f\u6210 MetricFlow \u6307\u6807\u5b9a\u4e49</li> </ol>"},{"location":"zh/subagent/builtin_subagents/#_2","title":"\u914d\u7f6e","text":"<p>\u5185\u7f6esubagent\u5f00\u7bb1\u5373\u7528\uff0c\u9ed8\u8ba4\u8bbe\u7f6e\u5373\u53ef\u5de5\u4f5c\u3002\u4f60\u53ef\u4ee5\u5728 <code>agent.yml</code> \u6587\u4ef6\u4e2d\u81ea\u5b9a\u4e49\uff1a</p> <pre><code>agent:\n  agentic_nodes:\n    gen_semantic_model:\n      model: anthropic  # \u53ef\u9009\uff1a\u6307\u5b9a\u4f7f\u7528\u7684 AI \u6a21\u578b\n      max_turns: 10     # \u53ef\u9009\uff1a\u6700\u5927\u5bf9\u8bdd\u8f6e\u6570\uff08\u9ed8\u8ba4\uff1a30\uff09\n\n    gen_metrics:\n      model: anthropic\n      max_turns: 8\n\n    gen_sql_summary:\n      model: deepseek_v3\n      max_turns: 5\n</code></pre> <p>\u53ef\u9009\u914d\u7f6e\u53c2\u6570\uff1a</p> <ul> <li><code>model</code>\uff1a\u6b64subagent\u4f7f\u7528\u7684 AI \u6a21\u578b\uff08\u4f8b\u5982 <code>anthropic</code>\u3001<code>deepseek_v3</code>\uff09</li> <li><code>max_turns</code>\uff1asubagent\u5b8c\u6210\u524d\u7684\u6700\u5927\u5bf9\u8bdd\u8f6e\u6570</li> </ul>"},{"location":"zh/subagent/builtin_subagents/#_3","title":"\u6982\u89c8","text":"<p>SQL \u6458\u8981\u529f\u80fd\u5e2e\u52a9\u4f60\u5206\u6790\u3001\u5206\u7c7b\u548c\u7f16\u76ee SQL \u67e5\u8be2\uff0c\u7528\u4e8e\u77e5\u8bc6\u590d\u7528\u3002\u5b83\u81ea\u52a8\u751f\u6210\u7ed3\u6784\u5316\u7684 YAML \u6458\u8981\uff0c\u5b58\u50a8\u5728\u53ef\u641c\u7d22\u7684\u77e5\u8bc6\u5e93\u4e2d\uff0c\u4fbf\u4e8e\u5c06\u6765\u67e5\u627e\u548c\u590d\u7528\u76f8\u4f3c\u7684\u67e5\u8be2\u3002</p>"},{"location":"zh/subagent/builtin_subagents/#sql","title":"\u4ec0\u4e48\u662f SQL \u6458\u8981\uff1f","text":"<p>SQL \u6458\u8981 \u662f\u4e00\u4e2a\u7ed3\u6784\u5316 YAML \u6587\u6863\uff0c\u5305\u542b\uff1a</p> <ul> <li>\u67e5\u8be2\u6587\u672c\uff1a\u5b8c\u6574\u7684 SQL \u67e5\u8be2</li> <li>\u4e1a\u52a1\u4e0a\u4e0b\u6587\uff1a\u57df\u3001\u7c7b\u522b\u548c\u6807\u7b7e</li> <li>\u8bed\u4e49\u6458\u8981\uff1a\u7528\u4e8e\u5411\u91cf\u641c\u7d22\u7684\u8be6\u7ec6\u8bf4\u660e</li> <li>\u5143\u6570\u636e\uff1a\u540d\u79f0\u3001\u6ce8\u91ca\u3001\u6587\u4ef6\u8def\u5f84</li> </ul>"},{"location":"zh/subagent/builtin_subagents/#_4","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u542f\u52a8 SQL \u6458\u8981\u751f\u6210 subagent\uff1a</p> <pre><code>/gen_sql_summary Analyze this SQL: SELECT SUM(revenue) FROM sales GROUP BY region. (You can also add some description on this SQL)\n</code></pre>"},{"location":"zh/subagent/builtin_subagents/#_5","title":"\u751f\u6210\u5de5\u4f5c\u6d41","text":"<pre><code>graph LR\n    A[\u7528\u6237\u63d0\u4f9b SQL + \u63cf\u8ff0] --&gt; B[\u667a\u80fd\u4f53\u5206\u6790\u67e5\u8be2]\n    B --&gt; C[\u68c0\u7d22\u4e0a\u4e0b\u6587]\n    C --&gt; D[\u751f\u6210\u552f\u4e00 ID]\n    D --&gt; E[\u521b\u5efa YAML]\n    E --&gt; F[\u4fdd\u5b58\u6587\u4ef6]\n    F --&gt; G[\u7528\u6237\u786e\u8ba4]\n    G --&gt; H[\u540c\u6b65\u5230\u77e5\u8bc6\u5e93]</code></pre> <p>\u8be6\u7ec6\u6b65\u9aa4\uff1a</p> <ol> <li>\u7406\u89e3 SQL\uff1aAI \u5206\u6790\u4f60\u7684\u67e5\u8be2\u7ed3\u6784\u548c\u4e1a\u52a1\u903b\u8f91</li> <li>\u83b7\u53d6\u4e0a\u4e0b\u6587\uff1a\u8c03\u7528 <code>prepare_sql_summary_context()</code> \u68c0\u7d22\uff1a</li> <li>\u73b0\u6709\u5206\u7c7b\u4f53\u7cfb\uff08\u57df\u3001\u7c7b\u522b\u3001\u6807\u7b7e\uff09</li> <li>\u7c7b\u4f3c\u7684 SQL \u6458\u8981\u7528\u4e8e\u5206\u7c7b\u53c2\u8003</li> <li>\u751f\u6210\u552f\u4e00 ID\uff1a\u4f7f\u7528 <code>generate_sql_summary_id()</code> \u57fa\u4e8e SQL + \u6ce8\u91ca\u751f\u6210</li> <li>\u521b\u5efa\u552f\u4e00\u540d\u79f0\uff1a\u751f\u6210\u63cf\u8ff0\u6027\u540d\u79f0\uff08\u6700\u591a 20 \u4e2a\u5b57\u7b26\uff09</li> <li>\u5206\u7c7b\u67e5\u8be2\uff1a\u6309\u7167\u73b0\u6709\u6a21\u5f0f\u5206\u914d\u57df\u3001layer1\u3001layer2 \u548c\u6807\u7b7e</li> <li>\u751f\u6210 YAML\uff1a\u521b\u5efa\u7ed3\u6784\u5316\u6458\u8981\u6587\u6863</li> <li>\u4fdd\u5b58\u6587\u4ef6\uff1a\u4f7f\u7528 <code>write_file()</code> \u5c06 YAML \u5199\u5165\u5de5\u4f5c\u7a7a\u95f4</li> <li>\u7528\u6237\u786e\u8ba4\uff1a\u663e\u793a\u751f\u6210\u7684 YAML \u5e76\u63d0\u793a\u6279\u51c6</li> <li>\u540c\u6b65\u5230\u77e5\u8bc6\u5e93\uff1a\u5b58\u50a8\u5230 LanceDB \u7528\u4e8e\u8bed\u4e49\u641c\u7d22</li> </ol>"},{"location":"zh/subagent/builtin_subagents/#_6","title":"\u4ea4\u4e92\u5f0f\u786e\u8ba4","text":"<p>\u751f\u6210\u540e\uff0c\u4f60\u4f1a\u770b\u5230\uff1a</p> <pre><code>==========================================================\nGenerated Reference SQL YAML\nFile: /path/to/sql_summary.yml\n==========================================================\n[\u5e26\u8bed\u6cd5\u9ad8\u4eae\u7684 YAML \u5185\u5bb9]\n\n  SYNC TO KNOWLEDGE BASE?\n\n  1. Yes - Save to Knowledge Base\n  2. No - Keep file only\n\nPlease enter your choice: [1/2]\n</code></pre>"},{"location":"zh/subagent/builtin_subagents/#_7","title":"\u914d\u7f6e","text":""},{"location":"zh/subagent/builtin_subagents/#_8","title":"\u667a\u80fd\u4f53\u914d\u7f6e","text":"<p>\u5728 <code>agent.yml</code> \u4e2d\uff1a</p> <pre><code>agentic_nodes:\n  gen_sql_summary:\n    model: deepseek                        # \u7528\u4e8e\u5206\u6790\u7684 LLM \u6a21\u578b\n    system_prompt: gen_sql_summary         # \u63d0\u793a\u6a21\u677f\n    prompt_version: \"1.0\"\n    tools: generation_tools.prepare_sql_summary_context, generation_tools.generate_sql_summary_id, filesystem_tools.write_file\n    hooks: generation_hooks                # \u542f\u7528\u786e\u8ba4\u5de5\u4f5c\u6d41\n    workspace_root: /path/to/reference_sql   # \u4fdd\u5b58 YAML \u6587\u4ef6\u7684\u76ee\u5f55\n    agent_description: \"reference SQL analysis assistant\"\n</code></pre>"},{"location":"zh/subagent/builtin_subagents/#_9","title":"\u5173\u952e\u914d\u7f6e\u9009\u9879","text":"\u53c2\u6570 \u63cf\u8ff0 \u793a\u4f8b <code>model</code> \u7528\u4e8e SQL \u5206\u6790\u7684 LLM \u6a21\u578b <code>deepseek</code>\u3001<code>claude</code>\u3001<code>openai</code>\u3001<code>kimi</code> <code>workspace_root</code> SQL \u6458\u8981 YAML \u6587\u4ef6\u7684\u76ee\u5f55 <code>/Users/you/.datus/data/reference_sql</code> <code>tools</code> \u5de5\u4f5c\u6d41\u6240\u9700\u7684\u5de5\u5177 \u89c1\u4e0b\u65b9\u5de5\u5177\u90e8\u5206 <code>hooks</code> \u542f\u7528\u4ea4\u4e92\u5f0f\u786e\u8ba4 <code>generation_hooks</code>"},{"location":"zh/subagent/builtin_subagents/#yaml","title":"YAML \u7ed3\u6784","text":"<p>\u751f\u6210\u7684 SQL \u6458\u8981\u9075\u5faa\u4ee5\u4e0b\u7ed3\u6784\uff1a</p> <pre><code>id: \"abc123def456...\"                      # \u81ea\u52a8\u751f\u6210\u7684 MD5 \u54c8\u5e0c\nname: \"Revenue by Region\"                  # \u63cf\u8ff0\u6027\u540d\u79f0\uff08\u6700\u591a 20 \u4e2a\u5b57\u7b26\uff09\nsql: |                                     # \u5b8c\u6574 SQL \u67e5\u8be2\n  SELECT\n    region,\n    SUM(revenue) as total_revenue\n  FROM sales\n  GROUP BY region\ncomment: \"Calculate total revenue grouped by region\"\nsummary: \"This query aggregates total revenue from the sales table, grouping results by geographic region. It uses SUM aggregation to calculate revenue totals for each region.\"\nfilepath: \"/Users/you/.datus/data/reference_sql/revenue_by_region.yml\"\ndomain: \"Sales\"                            # \u4e1a\u52a1\u57df\nlayer1: \"Reporting\"                        # \u4e3b\u8981\u7c7b\u522b\nlayer2: \"Revenue Analysis\"                 # \u6b21\u8981\u7c7b\u522b\ntags: \"revenue, region, aggregation\"       # \u9017\u53f7\u5206\u9694\u7684\u6807\u7b7e\n</code></pre>"},{"location":"zh/subagent/builtin_subagents/#_10","title":"\u5b57\u6bb5\u8bf4\u660e","text":"\u5b57\u6bb5 \u5fc5\u9700 \u63cf\u8ff0 \u793a\u4f8b <code>id</code> \u662f \u552f\u4e00\u54c8\u5e0c\uff08\u81ea\u52a8\u751f\u6210\uff09 <code>abc123def456...</code> <code>name</code> \u662f \u7b80\u77ed\u63cf\u8ff0\u6027\u540d\u79f0\uff08\u6700\u591a 20 \u4e2a\u5b57\u7b26\uff09 <code>Revenue by Region</code> <code>sql</code> \u662f \u5b8c\u6574 SQL \u67e5\u8be2 <code>SELECT ...</code> <code>comment</code> \u662f \u7b80\u77ed\u7684\u5355\u884c\u63cf\u8ff0 \u7528\u6237\u6d88\u606f\u6216\u751f\u6210\u7684\u6458\u8981 <code>summary</code> \u662f \u8be6\u7ec6\u8bf4\u660e\uff08\u7528\u4e8e\u641c\u7d22\uff09 \u5168\u9762\u7684\u67e5\u8be2\u63cf\u8ff0 <code>filepath</code> \u662f \u5b9e\u9645\u6587\u4ef6\u8def\u5f84 <code>/path/to/file.yml</code> <code>domain</code> \u662f \u4e1a\u52a1\u57df <code>Sales</code>\u3001<code>Marketing</code>\u3001<code>Finance</code> <code>layer1</code> \u662f \u4e3b\u8981\u7c7b\u522b <code>Reporting</code>\u3001<code>Analytics</code>\u3001<code>ETL</code> <code>layer2</code> \u662f \u6b21\u8981\u7c7b\u522b <code>Revenue Analysis</code>\u3001<code>Customer Insights</code> <code>tags</code> \u53ef\u9009 \u9017\u53f7\u5206\u9694\u7684\u5173\u952e\u5b57 <code>revenue, region, aggregation</code>"},{"location":"zh/subagent/builtin_subagents/#_11","title":"\u6982\u89c8","text":"<p>\u8bed\u4e49\u6a21\u578b\u751f\u6210\u529f\u80fd\u5e2e\u52a9\u4f60\u901a\u8fc7 AI \u52a9\u624b\u4ece\u6570\u636e\u5e93\u8868\u521b\u5efa MetricFlow \u8bed\u4e49\u6a21\u578b\u3002\u52a9\u624b\u5206\u6790\u4f60\u7684\u8868\u7ed3\u6784\u5e76\u751f\u6210\u5168\u9762\u7684 YAML \u914d\u7f6e\u6587\u4ef6\uff0c\u5b9a\u4e49\u6307\u6807\u3001\u7ef4\u5ea6\u548c\u5173\u7cfb\u3002</p>"},{"location":"zh/subagent/builtin_subagents/#_12","title":"\u4ec0\u4e48\u662f\u8bed\u4e49\u6a21\u578b\uff1f","text":"<p>\u8bed\u4e49\u6a21\u578b\u662f\u5b9a\u4e49\u4ee5\u4e0b\u5185\u5bb9\u7684 YAML \u914d\u7f6e\uff1a</p> <ul> <li>\u5ea6\u91cf\uff08Measures\uff09\uff1a\u6307\u6807\u548c\u805a\u5408\uff08SUM\u3001COUNT\u3001AVERAGE \u7b49\uff09</li> <li>\u7ef4\u5ea6\uff08Dimensions\uff09\uff1a\u5206\u7c7b\u548c\u65f6\u95f4\u5c5e\u6027</li> <li>\u6807\u8bc6\u7b26\uff08Identifiers\uff09\uff1a\u7528\u4e8e\u5173\u7cfb\u7684\u4e3b\u952e\u548c\u5916\u952e</li> <li>\u6570\u636e\u6e90\uff08Data Source\uff09\uff1a\u4e0e\u6570\u636e\u5e93\u8868\u7684\u8fde\u63a5</li> </ul>"},{"location":"zh/subagent/builtin_subagents/#_13","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u4f7f\u7528 <code>datus --namespace &lt;namespace&gt;</code> \u542f\u52a8 Datus CLI\uff0c\u7136\u540e\u4f7f\u7528subagent\u547d\u4ee4\uff1a</p> <pre><code>/gen_semantic_model generate a semantic model for table &lt;table_name&gt;\n</code></pre>"},{"location":"zh/subagent/builtin_subagents/#_14","title":"\u5de5\u4f5c\u539f\u7406","text":""},{"location":"zh/subagent/builtin_subagents/#_15","title":"\u4ea4\u4e92\u5f0f\u751f\u6210","text":"<p>\u5f53\u4f60\u8bf7\u6c42\u8bed\u4e49\u6a21\u578b\u65f6\uff0cAI \u52a9\u624b\u4f1a\uff1a</p> <ol> <li>\u68c0\u7d22\u4f60\u7684\u8868\u7684 DDL\uff08\u7ed3\u6784\uff09</li> <li>\u68c0\u67e5\u662f\u5426\u5df2\u5b58\u5728\u8bed\u4e49\u6a21\u578b</li> <li>\u751f\u6210\u5168\u9762\u7684 YAML \u6587\u4ef6</li> <li>\u4f7f\u7528 MetricFlow \u9a8c\u8bc1\u914d\u7f6e</li> <li>\u63d0\u793a\u4f60\u4fdd\u5b58\u5230\u77e5\u8bc6\u5e93</li> </ol>"},{"location":"zh/subagent/builtin_subagents/#_16","title":"\u751f\u6210\u5de5\u4f5c\u6d41","text":"<pre><code>graph LR\n    A[\u7528\u6237\u8bf7\u6c42] --&gt; B[DDL \u5206\u6790]\n    B --&gt; C[YAML \u751f\u6210]\n    C --&gt; D[\u9a8c\u8bc1]\n    D --&gt; E[\u7528\u6237\u786e\u8ba4]\n    E --&gt; F[\u5b58\u50a8]</code></pre>"},{"location":"zh/subagent/builtin_subagents/#_17","title":"\u4ea4\u4e92\u5f0f\u786e\u8ba4","text":"<p>\u751f\u6210\u8bed\u4e49\u6a21\u578b\u540e\uff0c\u4f60\u4f1a\u770b\u5230\uff1a</p> <pre><code>=============================================================\nGenerated YAML: table_name.yml\nPath: /path/to/file.yml\n=============================================================\n[\u5e26\u8bed\u6cd5\u9ad8\u4eae\u7684 YAML \u5185\u5bb9]\n\nSYNC TO KNOWLEDGE BASE?\n\n1. Yes - Save to Knowledge Base\n2. No - Keep file only\n\nPlease enter your choice: [1/2]\n</code></pre> <p>\u9009\u9879\uff1a</p> <ul> <li>\u9009\u9879 1\uff1a\u5c06\u8bed\u4e49\u6a21\u578b\u4fdd\u5b58\u5230\u4f60\u7684\u77e5\u8bc6\u5e93\uff08RAG \u5b58\u50a8\uff09\u7528\u4e8e AI \u9a71\u52a8\u7684\u67e5\u8be2</li> <li>\u9009\u9879 2\uff1a\u4ec5\u4fdd\u7559 YAML \u6587\u4ef6\uff0c\u4e0d\u540c\u6b65\u5230\u77e5\u8bc6\u5e93</li> </ul>"},{"location":"zh/subagent/builtin_subagents/#_18","title":"\u914d\u7f6e","text":""},{"location":"zh/subagent/builtin_subagents/#_19","title":"\u667a\u80fd\u4f53\u914d\u7f6e","text":"<p>\u5728 <code>agent.yml</code> \u4e2d\uff0c\u914d\u7f6e\u8bed\u4e49\u6a21\u578b\u751f\u6210\u8282\u70b9\uff1a</p> <pre><code>agentic_nodes:\n  gen_semantic_model:\n    model: claude                    # \u4f7f\u7528\u7684 LLM \u6a21\u578b\n    system_prompt: gen_semantic_model\n    prompt_version: \"1.0\"\n    tools: db_tools.*, generation_tools.*, filesystem_tools.*\n    hooks: generation_hooks          # \u542f\u7528\u7528\u6237\u786e\u8ba4\u5de5\u4f5c\u6d41\n    mcp: metricflow_mcp             # MetricFlow \u9a8c\u8bc1\u670d\u52a1\u5668\n    workspace_root: /path/to/semantic_models\n    agent_description: \"Semantic model generation assistant\"\n    rules:\n      - Use get_table_ddl tool to get complete table DDL\n      - Generate comprehensive semantic models\n      - Validate using metricflow_mcp\n</code></pre>"},{"location":"zh/subagent/builtin_subagents/#_20","title":"\u5173\u952e\u914d\u7f6e\u9009\u9879","text":"\u53c2\u6570 \u63cf\u8ff0 \u793a\u4f8b <code>model</code> \u7528\u4e8e\u751f\u6210\u7684 LLM \u6a21\u578b <code>claude</code>\u3001<code>deepseek</code>\uff08\u63a8\u8350\u4f7f\u7528 claude\uff09 <code>workspace_root</code> \u4fdd\u5b58 YAML \u6587\u4ef6\u7684\u76ee\u5f55 <code>/Users/you/.datus/data/semantic_models</code> <code>tools</code> \u52a9\u624b\u53ef\u7528\u7684\u5de5\u5177 <code>db_tools.*</code>\u3001<code>filesystem_tools.*</code> <code>hooks</code> \u542f\u7528\u7528\u6237\u786e\u8ba4 <code>generation_hooks</code> <code>mcp</code> MetricFlow \u9a8c\u8bc1\u670d\u52a1\u5668 <code>metricflow_mcp</code>"},{"location":"zh/subagent/builtin_subagents/#_21","title":"\u8bed\u4e49\u6a21\u578b\u7ed3\u6784","text":""},{"location":"zh/subagent/builtin_subagents/#_22","title":"\u57fa\u672c\u6a21\u677f","text":"<pre><code>data_source:\n  name: table_name                    # \u5fc5\u9700\uff1a\u5c0f\u5199\u52a0\u4e0b\u5212\u7ebf\n  description: \"Table description\"\n\n  sql_table: schema.table_name        # \u5bf9\u4e8e\u6709 schema \u7684\u6570\u636e\u5e93\n  # OR\n  sql_query: |                        # \u5bf9\u4e8e\u81ea\u5b9a\u4e49\u67e5\u8be2\n    SELECT * FROM table_name\n\n  measures:\n    - name: total_amount              # \u5fc5\u9700\n      agg: SUM                        # \u5fc5\u9700\uff1aSUM|COUNT|AVERAGE|etc.\n      expr: amount_column             # \u5217\u6216 SQL \u8868\u8fbe\u5f0f\n      create_metric: true             # \u81ea\u52a8\u521b\u5efa\u53ef\u67e5\u8be2\u6307\u6807\n      description: \"Total transaction amount\"\n\n  dimensions:\n    - name: created_date\n      type: TIME                      # \u5fc5\u9700\uff1aTIME|CATEGORICAL\n      type_params:\n        is_primary: true              # \u9700\u8981\u4e00\u4e2a\u4e3b\u65f6\u95f4\u7ef4\u5ea6\n        time_granularity: DAY         # TIME \u5fc5\u9700\uff1aDAY|WEEK|MONTH|etc.\n\n    - name: status\n      type: CATEGORICAL\n      description: \"Order status\"\n\n  identifiers:\n    - name: order_id\n      type: PRIMARY                   # PRIMARY|FOREIGN|UNIQUE|NATURAL\n      expr: order_id\n\n    - name: customer\n      type: FOREIGN\n      expr: customer_id\n</code></pre>"},{"location":"zh/subagent/builtin_subagents/#_23","title":"\u603b\u7ed3","text":"<p>\u8bed\u4e49\u6a21\u578b\u751f\u6210\u529f\u80fd\u63d0\u4f9b\uff1a</p> <ul> <li>\u2705 \u4ece\u8868 DDL \u81ea\u52a8\u751f\u6210 YAML</li> <li>\u2705 \u4ea4\u4e92\u5f0f\u9a8c\u8bc1\u548c\u9519\u8bef\u4fee\u590d</li> <li>\u2705 \u5b58\u50a8\u524d\u7528\u6237\u786e\u8ba4</li> <li>\u2705 \u77e5\u8bc6\u5e93\u96c6\u6210</li> <li>\u2705 \u9632\u6b62\u91cd\u590d</li> <li>\u2705 MetricFlow \u517c\u5bb9\u6027</li> </ul>"},{"location":"zh/subagent/builtin_subagents/#_24","title":"\u6982\u89c8","text":"<p>\u6307\u6807\u751f\u6210\u529f\u80fd\u5e2e\u52a9\u4f60\u5c06 SQL \u67e5\u8be2\u8f6c\u6362\u4e3a\u53ef\u590d\u7528\u7684 MetricFlow \u6307\u6807\u5b9a\u4e49\u3002\u4f7f\u7528 AI \u52a9\u624b\uff0c\u4f60\u53ef\u4ee5\u5206\u6790 SQL \u4e1a\u52a1\u903b\u8f91\u5e76\u81ea\u52a8\u751f\u6210\u6807\u51c6\u5316\u7684 YAML \u6307\u6807\u914d\u7f6e\uff0c\u7ec4\u7ec7\u5185\u53ef\u4e00\u81f4\u67e5\u8be2\u3002</p>"},{"location":"zh/subagent/builtin_subagents/#_25","title":"\u4ec0\u4e48\u662f\u6307\u6807\uff1f","text":"<p>**\u6307\u6807**\u662f\u57fa\u4e8e\u8bed\u4e49\u6a21\u578b\u6784\u5efa\u7684\u53ef\u590d\u7528\u4e1a\u52a1\u8ba1\u7b97\u3002\u6307\u6807\u63d0\u4f9b\uff1a</p> <ul> <li>\u4e00\u81f4\u7684\u4e1a\u52a1\u903b\u8f91\uff1a\u4e00\u6b21\u5b9a\u4e49\uff0c\u5230\u5904\u4f7f\u7528</li> <li>\u7c7b\u578b\u5b89\u5168\uff1a\u5df2\u9a8c\u8bc1\u7684\u7ed3\u6784\u548c\u5ea6\u91cf\u5f15\u7528</li> <li>\u5143\u6570\u636e\uff1a\u663e\u793a\u540d\u79f0\u3001\u683c\u5f0f\u3001\u4e1a\u52a1\u4e0a\u4e0b\u6587</li> <li>\u53ef\u7ec4\u5408\u6027\uff1a\u4ece\u7b80\u5355\u6307\u6807\u6784\u5efa\u590d\u6742\u6307\u6807</li> </ul> <p>\u793a\u4f8b\uff1a\u4e0e\u5176\u91cd\u590d\u7f16\u5199 <code>SELECT SUM(revenue) / COUNT(DISTINCT customer_id)</code>\uff0c\u4e0d\u5982\u5b9a\u4e49\u4e00\u6b21 <code>avg_customer_revenue</code> \u6307\u6807\u3002</p>"},{"location":"zh/subagent/builtin_subagents/#_26","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u4f7f\u7528 <code>datus --namespace &lt;namespace&gt;</code> \u542f\u52a8 Datus CLI\uff0c\u7136\u540e\u4f7f\u7528\u6307\u6807\u751f\u6210subagent\uff1a</p> <pre><code>/gen_metrics Generate a metric from this SQL: SELECT SUM(amount) FROM transactions, the corresponding question is total amount of all transactions\n</code></pre>"},{"location":"zh/subagent/builtin_subagents/#_27","title":"\u5de5\u4f5c\u539f\u7406","text":""},{"location":"zh/subagent/builtin_subagents/#_28","title":"\u751f\u6210\u5de5\u4f5c\u6d41","text":"<pre><code>graph LR\n    A[\u7528\u6237\u63d0\u4f9b SQL \u548c\u95ee\u9898] --&gt; B[\u667a\u80fd\u4f53\u5206\u6790\u903b\u8f91]\n    B --&gt; C[\u67e5\u627e\u8bed\u4e49\u6a21\u578b]\n    C --&gt; D[\u8bfb\u53d6\u5ea6\u91cf]\n    D --&gt; E[\u68c0\u67e5\u91cd\u590d]\n    E --&gt; F[\u751f\u6210\u6307\u6807 YAML]\n    F --&gt; G[\u8ffd\u52a0\u5230\u6587\u4ef6]\n    G --&gt; H[\u9a8c\u8bc1]\n    H --&gt; I[\u7528\u6237\u786e\u8ba4]\n    I --&gt; J[\u540c\u6b65\u5230\u77e5\u8bc6\u5e93]</code></pre>"},{"location":"zh/subagent/builtin_subagents/#_29","title":"\u91cd\u8981\u9650\u5236","text":"<p>\u26a0\ufe0f \u4ec5\u652f\u6301\u5355\u8868\u67e5\u8be2</p> <p>\u5f53\u524d\u7248\u672c**\u4ec5\u652f\u6301\u4ece\u5355\u8868 SQL \u67e5\u8be2\u751f\u6210\u6307\u6807**\u3002\u4e0d\u652f\u6301\u591a\u8868 JOIN\u3002</p> <p>\u652f\u6301\uff1a <pre><code>SELECT SUM(revenue) FROM transactions WHERE status = 'completed'\nSELECT COUNT(DISTINCT customer_id) / COUNT(*) FROM orders\n</code></pre></p> <p>\u4e0d\u652f\u6301\uff1a <pre><code>SELECT SUM(o.amount)\nFROM orders o\nJOIN customers c ON o.customer_id = c.id  -- \u274c \u4e0d\u652f\u6301 JOIN\n</code></pre></p>"},{"location":"zh/subagent/builtin_subagents/#_30","title":"\u4ea4\u4e92\u5f0f\u786e\u8ba4","text":"<p>\u751f\u6210\u540e\uff0c\u4f60\u4f1a\u770b\u5230\uff1a</p> <pre><code>==========================================================\nGenerated YAML: transactions.yml\nPath: /Users/you/.datus/data/semantic_models/transactions.yml\n==========================================================\n[\u5e26\u8bed\u6cd5\u9ad8\u4eae\u7684 YAML \u5185\u5bb9\uff0c\u663e\u793a\u65b0\u6307\u6807]\n\n  SYNC TO KNOWLEDGE BASE?\n\n  1. Yes - Save to Knowledge Base\n  2. No - Keep file only\n\nPlease enter your choice: [1/2]\n</code></pre> <p>\u9009\u9879\uff1a - \u9009\u9879 1\uff1a\u5c06\u6307\u6807\u540c\u6b65\u5230\u4f60\u7684\u77e5\u8bc6\u5e93\uff0c\u7528\u4e8e AI \u9a71\u52a8\u7684\u8bed\u4e49\u641c\u7d22 - \u9009\u9879 2\uff1a\u4ec5\u4fdd\u7559 YAML \u6587\u4ef6\uff0c\u4e0d\u540c\u6b65\u5230\u77e5\u8bc6\u5e93</p>"},{"location":"zh/subagent/builtin_subagents/#_31","title":"\u914d\u7f6e","text":""},{"location":"zh/subagent/builtin_subagents/#_32","title":"\u667a\u80fd\u4f53\u914d\u7f6e","text":"<p>\u5728 <code>agent.yml</code> \u4e2d\uff0c\u914d\u7f6e\u6307\u6807\u751f\u6210\u8282\u70b9\uff1a</p> <pre><code>agentic_nodes:\n  gen_metrics:\n    model: claude                          # \u7528\u4e8e\u6307\u6807\u751f\u6210\u7684 LLM \u6a21\u578b\n    system_prompt: gen_metrics             # \u63d0\u793a\u6a21\u677f\u540d\u79f0\n    prompt_version: \"1.0\"                  # \u6a21\u677f\u7248\u672c\n    tools: generation_tools.*, filesystem_tools.*\n    hooks: generation_hooks                # \u542f\u7528\u7528\u6237\u786e\u8ba4\u5de5\u4f5c\u6d41\n    mcp: metricflow_mcp                    # MetricFlow \u9a8c\u8bc1\u670d\u52a1\u5668\n    max_turns: 40                          # \u6700\u5927\u5bf9\u8bdd\u8f6e\u6570\n    workspace_root: /path/to/semantic_models\n    agent_description: \"Metric definition generation assistant\"\n    rules:\n      - Analyze user-provided SQL queries to generate MetricFlow metrics\n      - Use list_allowed_directories to find existing semantic model files\n      - Use read_file to read semantic model and understand measures\n      - Use check_metric_exists tool to avoid duplicate generation\n      - Use edit_file to append metrics (DO NOT use write_file)\n      - Use mf validate-configs to validate configurations\n      - After validation, call end_generation to trigger confirmation\n</code></pre>"},{"location":"zh/subagent/builtin_subagents/#_33","title":"\u5173\u952e\u914d\u7f6e\u9009\u9879","text":"\u53c2\u6570 \u63cf\u8ff0 \u793a\u4f8b <code>model</code> \u7528\u4e8e\u751f\u6210\u7684 LLM \u6a21\u578b <code>claude</code>\u3001<code>openai</code>\u3001<code>deepseek</code>\uff08\u63a8\u8350\u4f7f\u7528 claude\uff09 <code>workspace_root</code> \u5305\u542b\u8bed\u4e49\u6a21\u578b YAML \u6587\u4ef6\u7684\u76ee\u5f55 <code>/Users/you/.datus/data/semantic_models</code> <code>tools</code> \u53ef\u7528\u5de5\u5177\uff08\u751f\u6210 + \u6587\u4ef6\u7cfb\u7edf\uff09 <code>generation_tools.*, filesystem_tools.*</code> <code>hooks</code> \u542f\u7528\u4ea4\u4e92\u5f0f\u786e\u8ba4\u5de5\u4f5c\u6d41 <code>generation_hooks</code> <code>mcp</code> MetricFlow \u9a8c\u8bc1\u670d\u52a1\u5668 <code>metricflow_mcp</code> <code>max_turns</code> \u590d\u6742\u67e5\u8be2\u7684\u6700\u5927\u5bf9\u8bdd\u8f6e\u6570 <code>40</code>"},{"location":"zh/subagent/builtin_subagents/#_34","title":"\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"zh/subagent/builtin_subagents/#1","title":"\u793a\u4f8b 1\uff1a\u7b80\u5355\u805a\u5408","text":"<p>\u7528\u6237\u8f93\u5165\uff1a <pre><code>/gen_metrics Generate a metric for total order count\n</code></pre></p> <p>\u667a\u80fd\u4f53\u64cd\u4f5c\uff1a 1. \u67e5\u627e <code>orders.yml</code> \u8bed\u4e49\u6a21\u578b 2. \u8bfb\u53d6\u6587\u4ef6\u4ee5\u53d1\u73b0 <code>order_count</code> \u5ea6\u91cf 3. \u751f\u6210 MEASURE_PROXY \u6307\u6807\uff1a</p> <pre><code>---\nmetric:\n  name: total_orders\n  description: Total number of orders\n  type: measure_proxy\n  type_params:\n    measure: order_count\n  locked_metadata:\n    display_name: \"Total Orders\"\n    increase_is_good: true\n</code></pre>"},{"location":"zh/subagent/builtin_subagents/#2","title":"\u793a\u4f8b 2\uff1a\u8f6c\u5316\u7387","text":"<p>\u7528\u6237\u8f93\u5165\uff1a <pre><code>/gen_metrics Create a metric from this SQL:\nSELECT\n  COUNT(DISTINCT CASE WHEN status = 'completed' THEN order_id END) /\n  COUNT(DISTINCT order_id) AS completion_rate\nFROM orders\n</code></pre></p> <p>\u667a\u80fd\u4f53\u64cd\u4f5c\uff1a 1. \u5206\u6790 SQL \u903b\u8f91\uff08\u5e26\u6761\u4ef6\u8ba1\u6570\u7684\u6bd4\u7387\uff09 2. \u67e5\u627e <code>orders.yml</code> \u5e76\u8bfb\u53d6\u5ea6\u91cf 3. \u751f\u6210\u5e26\u7ea6\u675f\u7684 RATIO \u6307\u6807\uff1a</p> <pre><code>---\nmetric:\n  name: order_completion_rate\n  description: Percentage of orders that reached completed status\n  type: ratio\n  type_params:\n    numerator:\n      name: order_count\n      constraint: status = 'completed'\n    denominator: order_count\n  locked_metadata:\n    display_name: \"Order Completion Rate\"\n    value_format: \".2%\"\n    increase_is_good: true\n</code></pre>"},{"location":"zh/subagent/builtin_subagents/#3","title":"\u793a\u4f8b 3\uff1a\u590d\u6742\u8ba1\u7b97","text":"<p>\u7528\u6237\u8f93\u5165\uff1a <pre><code>/gen_metrics Generate average basket size metric:\nSELECT SUM(total_amount) / COUNT(DISTINCT order_id)\nFROM order_items\n</code></pre></p> <p>\u667a\u80fd\u4f53\u64cd\u4f5c\uff1a 1. \u5b9a\u4f4d <code>order_items.yml</code> 2. \u8bc6\u522b\u4e3a RATIO\uff08\u5e73\u5747\u503c\uff09 3. \u751f\u6210\u6307\u6807\uff1a</p> <pre><code>---\nmetric:\n  name: avg_basket_size\n  description: Average order value (basket size)\n  type: ratio\n  type_params:\n    numerator: total_amount\n    denominator: order_count\n  locked_metadata:\n    display_name: \"Average Basket Size\"\n    value_format: \"$$,.2f\"\n    unit: \"dollars\"\n    increase_is_good: true\n</code></pre>"},{"location":"zh/subagent/builtin_subagents/#_35","title":"\u6307\u6807\u5b58\u50a8\u65b9\u5f0f","text":""},{"location":"zh/subagent/builtin_subagents/#_36","title":"\u6587\u4ef6\u7ec4\u7ec7","text":"<p>\u4f7f\u7528 YAML \u6587\u6863\u5206\u9694\u7b26 <code>---</code> \u5c06\u6307\u6807\u8ffd\u52a0\u5230\u73b0\u6709\u8bed\u4e49\u6a21\u578b\u6587\u4ef6\uff1a</p> <pre><code># \u73b0\u6709\u8bed\u4e49\u6a21\u578b\ndata_source:\n  name: transactions\n  sql_table: transactions\n  measures:\n    - name: revenue\n      agg: SUM\n      expr: amount\n  dimensions:\n    - name: transaction_date\n      type: TIME\n\n---\n# \u7b2c\u4e00\u4e2a\u6307\u6807\uff08\u8ffd\u52a0\uff09\nmetric:\n  name: total_revenue\n  type: measure_proxy\n  type_params:\n    measure: revenue\n\n---\n# \u7b2c\u4e8c\u4e2a\u6307\u6807\uff08\u8ffd\u52a0\uff09\nmetric:\n  name: avg_transaction_value\n  type: ratio\n  type_params:\n    numerator: revenue\n    denominator: transaction_count\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u8ffd\u52a0\u800c\u4e0d\u662f\u5355\u72ec\u6587\u4ef6\uff1f - \u4fdd\u6301\u76f8\u5173\u6307\u6807\u9760\u8fd1\u5176\u8bed\u4e49\u6a21\u578b - \u66f4\u6613\u4e8e\u7ef4\u62a4\u548c\u9a8c\u8bc1 - MetricFlow \u53ef\u4ee5\u4e00\u8d77\u9a8c\u8bc1\u6240\u6709\u5b9a\u4e49</p>"},{"location":"zh/subagent/builtin_subagents/#_37","title":"\u77e5\u8bc6\u5e93\u5b58\u50a8","text":"<p>\u5f53\u4f60\u9009\u62e9 \"1. Yes - Save to Knowledge Base\" \u65f6\uff0c\u6307\u6807\u4f1a\u5b58\u50a8\u5230\u5411\u91cf\u6570\u636e\u5e93\u4e2d\uff0c\u5305\u542b\uff1a</p> <ol> <li>\u5143\u6570\u636e\uff1a\u540d\u79f0\u3001\u63cf\u8ff0\u3001\u7c7b\u578b\u3001\u57df/\u5c42\u7ea7\u5206\u7c7b</li> <li>LLM \u6587\u672c\uff1a\u7528\u4e8e\u8bed\u4e49\u641c\u7d22\u7684\u81ea\u7136\u8bed\u8a00\u8868\u793a</li> <li>\u5f15\u7528\uff1a\u5173\u8054\u7684\u8bed\u4e49\u6a21\u578b\u540d\u79f0</li> <li>\u65f6\u95f4\u6233\uff1a\u521b\u5efa\u65e5\u671f</li> </ol>"},{"location":"zh/subagent/builtin_subagents/#_38","title":"\u603b\u7ed3","text":"<p>\u6307\u6807\u751f\u6210\u529f\u80fd\u63d0\u4f9b\uff1a</p> <ul> <li>\u2705 SQL \u5230\u6307\u6807\u8f6c\u6362\uff1a\u5206\u6790 SQL \u67e5\u8be2\u5e76\u751f\u6210 MetricFlow \u6307\u6807</li> <li>\u2705 \u667a\u80fd\u7c7b\u578b\u68c0\u6d4b\uff1a\u81ea\u52a8\u9009\u62e9\u6b63\u786e\u7684\u6307\u6807\u7c7b\u578b</li> <li>\u2705 \u9632\u6b62\u91cd\u590d\uff1a\u751f\u6210\u524d\u68c0\u67e5\u73b0\u6709\u6307\u6807</li> <li>\u2705 \u9a8c\u8bc1\uff1aMetricFlow \u9a8c\u8bc1\u786e\u4fdd\u6b63\u786e\u6027</li> <li>\u2705 \u4ea4\u4e92\u5f0f\u5de5\u4f5c\u6d41\uff1a\u540c\u6b65\u524d\u5ba1\u9605\u548c\u6279\u51c6</li> <li>\u2705 \u77e5\u8bc6\u5e93\u96c6\u6210\uff1a\u8bed\u4e49\u641c\u7d22\u4ee5\u53d1\u73b0\u6307\u6807</li> <li>\u2705 \u6587\u4ef6\u7ba1\u7406\uff1a\u5b89\u5168\u5730\u8ffd\u52a0\u5230\u73b0\u6709\u8bed\u4e49\u6a21\u578b\u6587\u4ef6</li> </ul>"},{"location":"zh/subagent/builtin_subagents/#_39","title":"\u603b\u7ed3","text":"subagent \u7528\u9014 \u8f93\u51fa \u5b58\u50a8\u4f4d\u7f6e \u4eae\u70b9 <code>gen_sql_summary</code> \u603b\u7ed3\u548c\u5206\u7c7b SQL \u67e5\u8be2 YAML\uff08SQL \u6458\u8981\uff09 <code>/data/reference_sql</code> \u57fa\u4e8e\u5206\u7c7b\u4f53\u7cfb\u7684\u5206\u7c7b <code>gen_semantic_model</code> \u4ece\u8868\u751f\u6210\u8bed\u4e49\u6a21\u578b YAML\uff08\u8bed\u4e49\u6a21\u578b\uff09 <code>/data/semantic_models</code> DDL \u2192 MetricFlow \u517c\u5bb9\u6a21\u578b <code>gen_metrics</code> \u4ece SQL \u751f\u6210\u6307\u6807 YAML\uff08\u6307\u6807\uff09 <code>/data/semantic_models</code> SQL \u2192 MetricFlow \u6307\u6807 <p>\u8fd9\u4e9bsubagent\u5171\u540c\u81ea\u52a8\u5316\u4e86 \u6570\u636e\u5de5\u7a0b\u77e5\u8bc6\u7ba1\u9053 \u2014\u2014\u4ece \u67e5\u8be2\u7406\u89e3 \u2192 \u6a21\u578b\u5b9a\u4e49 \u2192 \u6307\u6807\u751f\u6210 \u2192 \u53ef\u641c\u7d22\u7684\u77e5\u8bc6\u5e93 \u3002</p>"},{"location":"zh/subagent/customized_subagent/","title":"\u81ea\u5b9a\u4e49 subagent","text":""},{"location":"zh/subagent/customized_subagent/#_1","title":"\u4ecb\u7ecd","text":"<p><code>.subagent</code> \u547d\u4ee4\u662f Datus CLI \u63d0\u4f9b\u7684\u6838\u5fc3\u529f\u80fd\uff0c\u7528\u4e8e\u7ba1\u7406su'ba'gen't\u3002\u672c\u6587\u6863\u91cd\u70b9\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 <code>.subagent</code> \u521b\u5efa\u3001\u67e5\u770b\u3001\u66f4\u65b0\u6216\u5220\u9664subagent\uff0c\u5e76\u8be6\u7ec6\u8bf4\u660e\u5176\u5b50\u547d\u4ee4\u3002<code>SubAgentBootstrapper</code> \u662f <code>.subagent</code> \u5185\u7684\u529f\u80fd\u6a21\u5757\uff0c\u7528\u4e8e\u4e3a\u7279\u5b9asubagent\u6784\u5efa\u6216\u6a21\u62df\u6784\u5efa \u8303\u56f4\u5316\u77e5\u8bc6\u5e93\uff08Scoped KB\uff09\u3002<code>.subagent</code> \u547d\u4ee4\u652f\u6301subagent\u7684\u5b8c\u6574\u751f\u547d\u5468\u671f\u7ba1\u7406\uff0c\u5e76\u53ef\u89e6\u53d1\u77e5\u8bc6\u5e93\u6784\u5efa\u3002</p>"},{"location":"zh/subagent/customized_subagent/#_2","title":"\u547d\u4ee4\u6982\u89c8","text":"<p><code>.subagent</code> \u547d\u4ee4\u652f\u6301\u4ee5\u4e0b\u5b50\u547d\u4ee4\uff1a</p> <ul> <li>add \u2014 \u542f\u52a8\u4ea4\u4e92\u5f0f\u5411\u5bfc\u6dfb\u52a0\u65b0\u7684subagent\u3002</li> <li>list \u2014 \u5217\u51fa\u6240\u6709\u5df2\u914d\u7f6e\u7684subagent\u3002</li> <li>remove  \u2014 \u4ece\u914d\u7f6e\u4e2d\u5220\u9664\u6307\u5b9a\u7684subagent\u3002 <li>update  \u2014 \u542f\u52a8\u4ea4\u4e92\u5f0f\u5411\u5bfc\u66f4\u65b0\u73b0\u6709subagent\u3002 <li>bootstrap  [--components ] [--plan] \u2014 \u4e3a\u7ed9\u5b9asubagent\u6784\u5efa\u6216\u6a21\u62df\u6784\u5efa\u8303\u56f4\u5316\u77e5\u8bc6\u5e93\u3002 <p>\u5982\u679c\u672a\u63d0\u4f9b\u53c2\u6570\u6216\u63d0\u4f9b\u4e86\u9519\u8bef\u7684\u53c2\u6570\uff0c\u547d\u4ee4\u4f1a\u81ea\u52a8\u663e\u793a\u5e2e\u52a9\u4fe1\u606f\u3002</p> <p>\u6ce8\u610f\uff1a\u6267\u884c <code>add</code> \u6216 <code>update</code> \u540e\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u4e3asubagent\u6784\u5efa\u8303\u56f4\u5316\u77e5\u8bc6\u5e93\u3002</p>"},{"location":"zh/subagent/customized_subagent/#_3","title":"\u5b50\u547d\u4ee4\u8be6\u89e3","text":""},{"location":"zh/subagent/customized_subagent/#add-subagent","title":"add \u2014 \u521b\u5efa\u65b0subagent","text":"<p>\u8fd0\u884c\uff1a</p> <pre><code>.subagent add\n</code></pre> <p>\u8fd9\u4f1a\u542f\u52a8\u4ea4\u4e92\u5f0f\u5411\u5bfc\uff0c\u63d0\u793a\u8f93\u5165\u57fa\u672c\u4fe1\u606f\uff0c\u5982subagent\u7684 \u540d\u79f0\uff08system_prompt\uff09\u3001\u63cf\u8ff0\u3001\u5de5\u5177\u3001\u89c4\u5219\uff0c\u4ee5\u53ca\u662f\u5426\u9700\u8981\u8303\u56f4\u5316\u4e0a\u4e0b\u6587\u3002\u5b8c\u6210\u540e\uff0c\u914d\u7f6e\u6587\u4ef6\u4f1a\u4fdd\u5b58\u5230\u9879\u76ee\u4e2d\uff0c\u5e76\u53ef\u9009\u62e9\u751f\u6210\u76f8\u5e94\u7684\u63d0\u793a\u6a21\u677f\u6587\u4ef6\u3002</p> <p>\u5982\u679c\u521b\u5efa\u8fc7\u7a0b\u4e2d\u9014\u53d6\u6d88\uff0c\u4f1a\u663e\u793a\u53d6\u6d88\u6d88\u606f\uff0c\u4e0d\u4f1a\u4fdd\u5b58\u4efb\u4f55\u914d\u7f6e\u3002</p> <p></p> <p>\ud83d\udca1 \u63d0\u793a\uff1a\u5728\u7b2c\u4e09\u6b65\uff08ScopedContext \u914d\u7f6e\uff09\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 Tab \u8fdb\u884c\u5c42\u7ea7\u8865\u5168\uff0c\u4f46\u9884\u89c8\u4e0d\u53ef\u7528\u3002\u6309 F2 \u53ef\u9884\u89c8\u3002</p>"},{"location":"zh/subagent/customized_subagent/#list-subagent","title":"list \u2014 \u5217\u51fa\u6240\u6709subagent","text":"<p>\u8fd0\u884c\uff1a</p> <pre><code>.subagent list\n</code></pre> <p>CLI \u4f1a\u4ee5\u8868\u683c\u5f62\u5f0f\u663e\u793a\u6240\u6709\u5df2\u914d\u7f6e\u7684subagent\uff0c\u5305\u542b\uff1a</p> <ul> <li>\u540d\u79f0\uff08system_prompt\uff09</li> <li>\u8303\u56f4\u5316\u4e0a\u4e0b\u6587\uff1a\u4f8b\u5982\u6570\u636e\u8868\u3001\u6307\u6807\u3001SQL \u5217\u8868\uff08\u5982\u679c\u65e0\u5219\u663e\u793a\u4e3a\u7a7a\uff09</li> <li>\u8303\u56f4\u5316\u77e5\u8bc6\u5e93\u8def\u5f84\uff1a\u663e\u793a\u8303\u56f4\u5316\u77e5\u8bc6\u5e93\u76ee\u5f55\u7684\u8def\u5f84\uff08\u5982\u679c\u4e0d\u53ef\u7528\u5219\u663e\u793a \"\u2014\"\uff09</li> <li>\u5de5\u5177\uff1asubagent\u4f7f\u7528\u7684\u5de5\u5177\u5217\u8868</li> <li>MCP\uff1a\u591a\u7ec4\u4ef6\u8fdb\u7a0b\u914d\u7f6e</li> <li>\u89c4\u5219\uff1a\u4ee5 Markdown \u683c\u5f0f\u5217\u51fa</li> </ul> <p></p> <p>\u5982\u679c\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u4e2d\u6ca1\u6709subagent\uff0cCLI \u4f1a\u663e\u793a <code>No configured sub\u2011agents</code>\u3002</p>"},{"location":"zh/subagent/customized_subagent/#remove-subagent","title":"remove \u2014 \u5220\u9664subagent","text":"<p>\u683c\u5f0f\uff1a</p> <pre><code>.subagent remove &lt;agent_name&gt;\n</code></pre> <p>\u5220\u9664\u6307\u5b9asubagent\u7684\u914d\u7f6e\u3002\u5982\u679c\u672a\u627e\u5230\uff0c\u4f1a\u663e\u793a\u9519\u8bef\u6d88\u606f\u3002\u6210\u529f\u5220\u9664\u540e\uff0c\u4f1a\u663e\u793a\u786e\u8ba4\u6d88\u606f\u3002</p>"},{"location":"zh/subagent/customized_subagent/#update-subagent","title":"update \u2014 \u66f4\u65b0\u73b0\u6709subagent","text":"<p>\u683c\u5f0f\uff1a</p> <pre><code>.subagent update &lt;agent_name&gt;\n</code></pre> <p></p> <p>\u7cfb\u7edf\u9996\u5148\u68c0\u67e5\u76ee\u6807subagent\u662f\u5426\u5b58\u5728\u3002\u5982\u679c\u5b58\u5728\uff0c\u4f1a\u542f\u52a8\u5411\u5bfc\u5e76\u9884\u586b\u5145\u73b0\u6709\u914d\u7f6e\u3002\u786e\u8ba4\u66f4\u65b0\u540e\uff0c\u914d\u7f6e\u4f1a\u88ab\u4fdd\u5b58\u3002\u5982\u679c\u66f4\u6539\u5f71\u54cd\u4e86\u8303\u56f4\u5316\u4e0a\u4e0b\u6587\uff0cCLI \u4f1a\u81ea\u52a8\u89e6\u53d1 <code>bootstrap</code> \u91cd\u5efa\u77e5\u8bc6\u5e93\u3002</p>"},{"location":"zh/subagent/customized_subagent/#bootstrap","title":"bootstrap \u2014 \u6784\u5efa\u8303\u56f4\u5316\u77e5\u8bc6\u5e93","text":"<p>\u6b64\u547d\u4ee4\u6784\u5efa\u6216\u66f4\u65b0subagent\u7684 \u8303\u56f4\u5316\u77e5\u8bc6\u5e93\uff08Scoped KB\uff09\u3002\u5b83\u652f\u6301\u7ec4\u4ef6\u9009\u62e9\u548c\u8ba1\u5212\u6a21\u62df\u3002</p>"},{"location":"zh/subagent/customized_subagent/#_4","title":"\u57fa\u672c\u7528\u6cd5","text":"<pre><code>.subagent bootstrap &lt;agent_name&gt;\n</code></pre> <p>\u8be5\u547d\u4ee4\u4f7f\u7528 <code>argparse.ArgumentParser</code>\uff0c\u901a\u8fc7 <code>prog</code> \u548c <code>description</code> \u53c2\u6570\u5b9a\u4e49\u7a0b\u5e8f\u540d\u79f0\u548c\u63cf\u8ff0\u3002\u8fd0\u884c <code>.subagent bootstrap -h</code> \u4f1a\u663e\u793a\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f\u3002</p>"},{"location":"zh/subagent/customized_subagent/#_5","title":"\u53c2\u6570","text":"<ul> <li><code>&lt;agent_name&gt;</code> \u2014 \u5fc5\u9700\u3002\u6307\u5b9a\u8981\u4e3a\u54ea\u4e2asubagent\u6784\u5efa\u77e5\u8bc6\u5e93\u3002</li> <li><code>--components &lt;list&gt;</code> \u2014 \u53ef\u9009\u3002\u8981\u6784\u5efa\u7684\u7ec4\u4ef6\u5217\u8868\uff08\u9017\u53f7\u5206\u9694\uff0c\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff09\u3002\u793a\u4f8b\uff1a</li> </ul> <pre><code>--components metadata,metrics\n</code></pre> <p>\u5982\u679c\u7701\u7565\uff0c\u5c06\u6784\u5efa\u6240\u6709\u652f\u6301\u7684\u7ec4\u4ef6\u3002\u65e0\u6548\u7684\u7ec4\u4ef6\u4f1a\u89e6\u53d1 <code>unsupported component</code> \u63d0\u793a\u3002 * <code>--plan</code> \u2014 \u53ef\u9009\u6807\u5fd7\u3002\u5728**\u8ba1\u5212\u6a21\u5f0f**\u4e0b\u8fd0\u884c\uff0c\u8ba1\u7b97\u5e76\u663e\u793a\u5bfc\u5165\u8ba1\u5212\u4f46\u4e0d\u4f1a\u5199\u5165\u6216\u4fee\u6539\u6587\u4ef6\u3002</p>"},{"location":"zh/subagent/customized_subagent/#_6","title":"\u5de5\u4f5c\u6d41","text":"<ol> <li>\u9a8c\u8bc1\u5e76\u5b9a\u4f4dsubagent \u2014 \u89e3\u6790\u53c2\u6570\u5e76\u68c0\u67e5\u6307\u5b9a\u7684subagent\u662f\u5426\u5b58\u5728\u3002</li> <li>\u89c4\u8303\u5316\u7ec4\u4ef6\u5217\u8868 \u2014 \u8f6c\u6362\u4e3a\u5c0f\u5199\u5e76\u9488\u5bf9\u652f\u6301\u7684\u7ec4\u4ef6\uff08\u4f8b\u5982 <code>metadata</code>\u3001<code>metrics</code>\u3001<code>reference_sql</code>\uff09\u8fdb\u884c\u9a8c\u8bc1\u3002\u65e0\u6548\u7684\u7ec4\u4ef6\u4f1a\u88ab\u62d2\u7edd\uff0c\u5e76\u663e\u793a\u652f\u6301\u7684\u5217\u8868\u3002</li> <li> <p>\u6267\u884c\u6216\u6a21\u62df\u6784\u5efa</p> </li> <li> <p>\u4e0d\u4f7f\u7528 <code>--plan</code>\uff1a\u6267\u884c\u8986\u76d6\u7b56\u7565\uff0c\u5bfc\u5165\u6570\u636e\u5e93\u5143\u6570\u636e\u3001\u6307\u6807\u6216\u53c2\u8003 SQL\uff0c\u751f\u6210\u65b0\u7684\u8303\u56f4\u5316\u77e5\u8bc6\u5e93\u76ee\u5f55\uff0c\u5e76\u66f4\u65b0\u914d\u7f6e\u3002</p> </li> <li>\u4f7f\u7528 <code>--plan</code>\uff1a\u4ec5\u8fd0\u884c\u6a21\u62df\uff0c\u8ba1\u7b97\u8981\u5bfc\u5165\u7684\u6570\u636e\u800c\u4e0d\u5199\u5165\u6587\u4ef6\u3002</li> <li> <p>\u663e\u793a\u7ed3\u679c \u2014 \u8f93\u51fa\u6458\u8981\u8868\u683c\uff08<code>Scoped KB Bootstrap Summary</code>\uff09\uff0c\u5305\u542b\u5217\uff1a</p> </li> <li> <p>Component | Status | Message</p> </li> <li>\u72b6\u6001\u9009\u9879\uff1a<code>SUCCESS</code>\u3001<code>ERROR</code>\u3001<code>SKIPPED</code>\u3001<code>PLAN</code></li> <li>\u663e\u793a\u8303\u56f4\u5316\u77e5\u8bc6\u5e93\u8def\u5f84 \u2014 <code>Simulated scoped directory</code>\uff08\u8ba1\u5212\u6a21\u5f0f\uff09\u6216 <code>Scoped directory</code>\uff08\u6267\u884c\u6a21\u5f0f\uff09\u3002</li> <li>\u663e\u793a\u8be6\u60c5 \u2014 \u5bf9\u4e8e\u7f3a\u5931\u6216\u65e0\u6548\u7684\u8bb0\u5f55\uff0c\u5728 <code>missing</code> \u548c <code>invalid</code> \u5b57\u6bb5\u4e0b\u663e\u793a JSON \u8be6\u60c5\u3002</li> <li>\u4fdd\u5b58\u914d\u7f6e \u2014 \u6210\u529f\u65f6\uff08\u975e\u8ba1\u5212\u6a21\u5f0f\uff09\uff0c\u66f4\u65b0subagent\u914d\u7f6e\u4e2d\u7684\u8303\u56f4\u5316\u77e5\u8bc6\u5e93\u8def\u5f84\u3002\u4fdd\u5b58\u8fc7\u7a0b\u4e2d\u7684\u9519\u8bef\u4f1a\u88ab\u62a5\u544a\uff1b\u6210\u529f\u4fdd\u5b58\u4f1a\u5237\u65b0\u5185\u5b58\u4e2d\u7684\u914d\u7f6e\u3002</li> </ol>"},{"location":"zh/subagent/customized_subagent/#_7","title":"\u793a\u4f8b","text":"<p>\u6784\u5efa\u6240\u6709\u7ec4\u4ef6\uff1a</p> <pre><code>.subagent bootstrap my_agent\n</code></pre> <p>\u4ec5\u6a21\u62df\u5143\u6570\u636e\u548c\u6307\u6807\uff1a</p> <pre><code>.subagent bootstrap my_agent --components metadata,metrics --plan\n</code></pre> <p>\u4ec5\u6784\u5efa\u53c2\u8003 SQL\uff1a</p> <pre><code>.subagent bootstrap my_agent --components reference_sql\n</code></pre>"},{"location":"zh/subagent/customized_subagent/#_8","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u540d\u79f0\u4e00\u81f4\u6027\uff1asubagent\u540d\u79f0\uff08<code>system_prompt</code>\uff09\u552f\u4e00\u6807\u8bc6\u5176\u914d\u7f6e\u3002\u786e\u4fdd <code>add</code>\u3001<code>update</code>\u3001<code>remove</code> \u548c <code>bootstrap</code> \u547d\u4ee4\u4f7f\u7528\u4e00\u81f4\u7684\u547d\u540d\u3002</li> <li>\u652f\u6301\u7684\u7ec4\u4ef6\uff1a\u5fc5\u987b\u5728\u9884\u5b9a\u4e49\u7684\u7ec4\u4ef6\uff08<code>metadata</code>\u3001<code>metrics</code>\u3001<code>reference_sql</code>\uff09\u5185\u3002\u4f7f\u7528 <code>.subagent bootstrap -h</code> \u68c0\u67e5\u53ef\u7528\u9009\u9879\u3002</li> <li>\u6a21\u62df\u6a21\u5f0f\uff08<code>--plan</code>\uff09\uff1a\u7528\u4e8e\u98ce\u9669\u8bc4\u4f30\uff1b\u4e0d\u6267\u884c\u78c1\u76d8\u5199\u5165\u3002\u7701\u7565\u6b64\u6807\u5fd7\u4ee5\u6267\u884c\u5b9e\u9645\u6784\u5efa\u3002</li> <li>\u81ea\u52a8\u91cd\u5efa\uff1a\u66f4\u65b0\u66f4\u6539\u8303\u56f4\u5316\u4e0a\u4e0b\u6587\u7684subagent\u4f1a\u81ea\u52a8\u89e6\u53d1\u91cd\u5efa\uff0c\u4ee5\u4fdd\u6301\u914d\u7f6e\u548c\u77e5\u8bc6\u5e93\u7684\u4e00\u81f4\u6027\u3002</li> </ul>"},{"location":"zh/subagent/customized_subagent/#agent-subagent","title":"\u5728 Agent \u4e2d\u91cd\u5efasubagent\u77e5\u8bc6\u5e93","text":"<p>\u8fd0\u884c\uff1a</p> <pre><code>python -m datus.main bootstrap-kb\n</code></pre> <p>\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u4e0b\u6240\u6709\u914d\u7f6e\u4e86\u8303\u56f4\u5316\u4e0a\u4e0b\u6587\u7684subagent\u90fd\u4f1a\u91cd\u5efa\u5176\u77e5\u8bc6\u5e93\u3002\u6784\u5efa\u7684\u5185\u5bb9\u53d6\u51b3\u4e8e <code>--component</code> \u53c2\u6570\u3002</p>"},{"location":"zh/subagent/gen_metrics/","title":"\u6307\u6807\u751f\u6210\u6307\u5357","text":""},{"location":"zh/subagent/gen_metrics/#_2","title":"\u6982\u89c8","text":"<p>\u6307\u6807\u751f\u6210\u529f\u80fd\u5e2e\u52a9\u4f60\u5c06 SQL \u67e5\u8be2\u8f6c\u6362\u4e3a\u53ef\u590d\u7528\u7684 MetricFlow \u6307\u6807\u5b9a\u4e49\u3002\u4f7f\u7528 AI \u52a9\u624b\uff0c\u4f60\u53ef\u4ee5\u5206\u6790 SQL \u4e1a\u52a1\u903b\u8f91\u5e76\u81ea\u52a8\u751f\u6210\u6807\u51c6\u5316\u7684 YAML \u6307\u6807\u914d\u7f6e\uff0c\u7ec4\u7ec7\u5185\u53ef\u4e00\u81f4\u67e5\u8be2\u3002</p>"},{"location":"zh/subagent/gen_metrics/#_3","title":"\u4ec0\u4e48\u662f\u6307\u6807\uff1f","text":"<p>**\u6307\u6807**\u662f\u57fa\u4e8e\u8bed\u4e49\u6a21\u578b\u6784\u5efa\u7684\u53ef\u590d\u7528\u4e1a\u52a1\u8ba1\u7b97\u3002\u6307\u6807\u63d0\u4f9b\uff1a</p> <ul> <li>\u4e00\u81f4\u7684\u4e1a\u52a1\u903b\u8f91\uff1a\u4e00\u6b21\u5b9a\u4e49\uff0c\u5230\u5904\u4f7f\u7528</li> <li>\u7c7b\u578b\u5b89\u5168\uff1a\u5df2\u9a8c\u8bc1\u7684\u7ed3\u6784\u548c\u5ea6\u91cf\u5f15\u7528</li> <li>\u5143\u6570\u636e\uff1a\u663e\u793a\u540d\u79f0\u3001\u683c\u5f0f\u3001\u4e1a\u52a1\u4e0a\u4e0b\u6587</li> <li>\u53ef\u7ec4\u5408\u6027\uff1a\u4ece\u7b80\u5355\u6307\u6807\u6784\u5efa\u590d\u6742\u6307\u6807</li> </ul> <p>\u793a\u4f8b\uff1a\u4e0e\u5176\u91cd\u590d\u7f16\u5199 <code>SELECT SUM(revenue) / COUNT(DISTINCT customer_id)</code>\uff0c\u4e0d\u5982\u5b9a\u4e49\u4e00\u6b21 <code>avg_customer_revenue</code> \u6307\u6807\u3002</p>"},{"location":"zh/subagent/gen_metrics/#_4","title":"\u91cd\u8981\u9650\u5236","text":"<p>\u26a0\ufe0f \u4ec5\u652f\u6301\u5355\u8868\u67e5\u8be2</p> <p>\u5f53\u524d\u7248\u672c**\u4ec5\u652f\u6301\u4ece\u5355\u8868 SQL \u67e5\u8be2\u751f\u6210\u6307\u6807**\u3002\u4e0d\u652f\u6301\u591a\u8868 JOIN\u3002</p> <p>\u652f\u6301\uff1a <pre><code>SELECT SUM(revenue) FROM transactions WHERE status = 'completed'\nSELECT COUNT(DISTINCT customer_id) / COUNT(*) FROM orders\n</code></pre></p> <p>\u4e0d\u652f\u6301\uff1a <pre><code>SELECT SUM(o.amount)\nFROM orders o\nJOIN customers c ON o.customer_id = c.id  -- \u274c \u4e0d\u652f\u6301 JOIN\n</code></pre></p>"},{"location":"zh/subagent/gen_metrics/#_5","title":"\u5de5\u4f5c\u539f\u7406","text":"<p>\u4f7f\u7528 <code>datus --namespace &lt;namespace&gt;</code> \u542f\u52a8 Datus CLI\uff0c\u7136\u540e\u4f7f\u7528\u6307\u6807\u751f\u6210\u5b50\u4ee3\u7406\uff1a</p> <pre><code>/gen_metrics Generate a metric from this SQL: SELECT SUM(amount) FROM transactions, the coresponding question is total amount of all transactions\n</code></pre>"},{"location":"zh/subagent/gen_metrics/#_6","title":"\u751f\u6210\u5de5\u4f5c\u6d41","text":"<pre><code>\u7528\u6237\u63d0\u4f9b SQL \u548c\u95ee\u9898 \u2192 \u667a\u80fd\u4f53\u5206\u6790\u903b\u8f91 \u2192 \u67e5\u627e\u8bed\u4e49\u6a21\u578b \u2192 \u8bfb\u53d6\u5ea6\u91cf \u2192\n\u68c0\u67e5\u91cd\u590d \u2192 \u751f\u6210\u6307\u6807 YAML \u2192 \u8ffd\u52a0\u5230\u6587\u4ef6 \u2192 \u9a8c\u8bc1 \u2192\n\u7528\u6237\u786e\u8ba4 \u2192 \u540c\u6b65\u5230\u77e5\u8bc6\u5e93\n</code></pre>"},{"location":"zh/subagent/gen_metrics/#_7","title":"\u4ea4\u4e92\u5f0f\u786e\u8ba4","text":"<p>\u751f\u6210\u540e\uff0c\u4f60\u4f1a\u770b\u5230\uff1a</p> <pre><code>==========================================================\nGenerated YAML: transactions.yml\nPath: /Users/you/.datus/data/semantic_models/transactions.yml\n==========================================================\n[\u5e26\u8bed\u6cd5\u9ad8\u4eae\u7684 YAML \u5185\u5bb9\uff0c\u663e\u793a\u65b0\u6307\u6807]\n\n  SYNC TO KNOWLEDGE BASE?\n\n  1. Yes - Save to Knowledge Base\n  2. No - Keep file only\n\nPlease enter your choice: [1/2]\n</code></pre> <p>\u9009\u9879\uff1a - \u9009\u9879 1\uff1a\u5c06\u6307\u6807\u540c\u6b65\u5230\u4f60\u7684\u77e5\u8bc6\u5e93\uff0c\u7528\u4e8e AI \u9a71\u52a8\u7684\u8bed\u4e49\u641c\u7d22 - \u9009\u9879 2\uff1a\u4ec5\u4fdd\u7559 YAML \u6587\u4ef6\uff0c\u4e0d\u540c\u6b65\u5230\u77e5\u8bc6\u5e93</p>"},{"location":"zh/subagent/gen_metrics/#_8","title":"\u914d\u7f6e","text":""},{"location":"zh/subagent/gen_metrics/#_9","title":"\u667a\u80fd\u4f53\u914d\u7f6e","text":"<p>\u5728 <code>agent.yml</code> \u4e2d\uff0c\u914d\u7f6e\u6307\u6807\u751f\u6210\u8282\u70b9\uff1a</p> <pre><code>agentic_nodes:\n  gen_metrics:\n    model: claude                          # \u7528\u4e8e\u6307\u6807\u751f\u6210\u7684 LLM \u6a21\u578b\n    system_prompt: gen_metrics             # \u63d0\u793a\u6a21\u677f\u540d\u79f0\n    prompt_version: \"1.0\"                  # \u6a21\u677f\u7248\u672c\n    tools: generation_tools.*, filesystem_tools.*\n    hooks: generation_hooks                # \u542f\u7528\u7528\u6237\u786e\u8ba4\u5de5\u4f5c\u6d41\n    mcp: metricflow_mcp                    # MetricFlow \u9a8c\u8bc1\u670d\u52a1\u5668\n    max_turns: 40                          # \u6700\u5927\u5bf9\u8bdd\u8f6e\u6570\n    workspace_root: /path/to/semantic_models\n    agent_description: \"Metric definition generation assistant\"\n    rules:\n      - Analyze user-provided SQL queries to generate MetricFlow metrics\n      - Use list_allowed_directories to find existing semantic model files\n      - Use read_file to read semantic model and understand measures\n      - Use check_metric_exists tool to avoid duplicate generation\n      - Use edit_file to append metrics (DO NOT use write_file)\n      - Use mf validate-configs to validate configurations\n      - After validation, call end_generation to trigger confirmation\n</code></pre>"},{"location":"zh/subagent/gen_metrics/#_10","title":"\u5173\u952e\u914d\u7f6e\u9009\u9879","text":"\u53c2\u6570 \u63cf\u8ff0 \u793a\u4f8b <code>model</code> \u7528\u4e8e\u751f\u6210\u7684 LLM \u6a21\u578b <code>claude</code>\u3001<code>openai</code>\u3001<code>deepseek</code>\uff0c\u63a8\u8350\u4f7f\u7528 claude <code>workspace_root</code> \u5305\u542b\u8bed\u4e49\u6a21\u578b YAML \u6587\u4ef6\u7684\u76ee\u5f55 <code>/Users/you/.datus/data/semantic_models</code> <code>tools</code> \u53ef\u7528\u5de5\u5177\uff08\u751f\u6210 + \u6587\u4ef6\u7cfb\u7edf\uff09 <code>generation_tools.*, filesystem_tools.*</code> <code>hooks</code> \u542f\u7528\u4ea4\u4e92\u5f0f\u786e\u8ba4\u5de5\u4f5c\u6d41 <code>generation_hooks</code> <code>mcp</code> MetricFlow \u9a8c\u8bc1\u670d\u52a1\u5668 <code>metricflow_mcp</code> <code>max_turns</code> \u590d\u6742\u67e5\u8be2\u7684\u6700\u5927\u5bf9\u8bdd\u8f6e\u6570 <code>40</code>"},{"location":"zh/subagent/gen_metrics/#_11","title":"\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"zh/subagent/gen_metrics/#1","title":"\u793a\u4f8b 1\uff1a\u7b80\u5355\u805a\u5408","text":"<p>\u7528\u6237\u8f93\u5165\uff1a <pre><code>/gen_metrics Generate a metric for total order count\n</code></pre></p> <p>\u667a\u80fd\u4f53\u64cd\u4f5c\uff1a 1. \u67e5\u627e <code>orders.yml</code> \u8bed\u4e49\u6a21\u578b 2. \u8bfb\u53d6\u6587\u4ef6\u4ee5\u53d1\u73b0 <code>order_count</code> \u5ea6\u91cf 3. \u751f\u6210 MEASURE_PROXY \u6307\u6807\uff1a</p> <pre><code>---\nmetric:\n  name: total_orders\n  description: Total number of orders\n  type: measure_proxy\n  type_params:\n    measure: order_count\n  locked_metadata:\n    display_name: \"Total Orders\"\n    increase_is_good: true\n</code></pre>"},{"location":"zh/subagent/gen_metrics/#2","title":"\u793a\u4f8b 2\uff1a\u8f6c\u5316\u7387","text":"<p>\u7528\u6237\u8f93\u5165\uff1a <pre><code>/gen_metrics Create a metric from this SQL:\nSELECT\n  COUNT(DISTINCT CASE WHEN status = 'completed' THEN order_id END) /\n  COUNT(DISTINCT order_id) AS completion_rate\nFROM orders\n</code></pre></p> <p>\u667a\u80fd\u4f53\u64cd\u4f5c\uff1a 1. \u5206\u6790 SQL \u903b\u8f91\uff08\u5e26\u6761\u4ef6\u8ba1\u6570\u7684\u6bd4\u7387\uff09 2. \u67e5\u627e <code>orders.yml</code> \u5e76\u8bfb\u53d6\u5ea6\u91cf 3. \u751f\u6210\u5e26\u7ea6\u675f\u7684 RATIO \u6307\u6807\uff1a</p> <pre><code>---\nmetric:\n  name: order_completion_rate\n  description: Percentage of orders that reached completed status\n  type: ratio\n  type_params:\n    numerator:\n      name: order_count\n      constraint: status = 'completed'\n    denominator: order_count\n  locked_metadata:\n    display_name: \"Order Completion Rate\"\n    value_format: \".2%\"\n    increase_is_good: true\n</code></pre>"},{"location":"zh/subagent/gen_metrics/#3","title":"\u793a\u4f8b 3\uff1a\u590d\u6742\u8ba1\u7b97","text":"<p>\u7528\u6237\u8f93\u5165\uff1a <pre><code>/gen_metrics Generate average basket size metric:\nSELECT SUM(total_amount) / COUNT(DISTINCT order_id)\nFROM order_items\n</code></pre></p> <p>\u667a\u80fd\u4f53\u64cd\u4f5c\uff1a 1. \u5b9a\u4f4d <code>order_items.yml</code> 2. \u8bc6\u522b\u4e3a RATIO\uff08\u5e73\u5747\u503c\uff09 3. \u751f\u6210\u6307\u6807\uff1a</p> <pre><code>---\nmetric:\n  name: avg_basket_size\n  description: Average order value (basket size)\n  type: ratio\n  type_params:\n    numerator: total_amount\n    denominator: order_count\n  locked_metadata:\n    display_name: \"Average Basket Size\"\n    value_format: \"$$,.2f\"\n    unit: \"dollars\"\n    increase_is_good: true\n</code></pre>"},{"location":"zh/subagent/gen_metrics/#_12","title":"\u6307\u6807\u5b58\u50a8\u65b9\u5f0f","text":""},{"location":"zh/subagent/gen_metrics/#_13","title":"\u6587\u4ef6\u7ec4\u7ec7","text":"<p>\u4f7f\u7528 YAML \u6587\u6863\u5206\u9694\u7b26 <code>---</code> \u5c06\u6307\u6807\u8ffd\u52a0\u5230\u73b0\u6709\u8bed\u4e49\u6a21\u578b\u6587\u4ef6\uff1a</p> <pre><code># \u73b0\u6709\u8bed\u4e49\u6a21\u578b\ndata_source:\n  name: transactions\n  sql_table: transactions\n  measures:\n    - name: revenue\n      agg: SUM\n      expr: amount\n  dimensions:\n    - name: transaction_date\n      type: TIME\n\n---\n# \u7b2c\u4e00\u4e2a\u6307\u6807\uff08\u8ffd\u52a0\uff09\nmetric:\n  name: total_revenue\n  type: measure_proxy\n  type_params:\n    measure: revenue\n\n---\n# \u7b2c\u4e8c\u4e2a\u6307\u6807\uff08\u8ffd\u52a0\uff09\nmetric:\n  name: avg_transaction_value\n  type: ratio\n  type_params:\n    numerator: revenue\n    denominator: transaction_count\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u8ffd\u52a0\u800c\u4e0d\u662f\u5355\u72ec\u6587\u4ef6\uff1f - \u4fdd\u6301\u76f8\u5173\u6307\u6807\u9760\u8fd1\u5176\u8bed\u4e49\u6a21\u578b - \u66f4\u6613\u4e8e\u7ef4\u62a4\u548c\u9a8c\u8bc1 - MetricFlow \u53ef\u4ee5\u4e00\u8d77\u9a8c\u8bc1\u6240\u6709\u5b9a\u4e49</p>"},{"location":"zh/subagent/gen_metrics/#_14","title":"\u77e5\u8bc6\u5e93\u5b58\u50a8","text":"<p>\u5f53\u4f60\u9009\u62e9 \"1. Yes - Save to Knowledge Base\" \u65f6\uff0c\u6307\u6807\u4f1a\u5b58\u50a8\u5230\u5411\u91cf\u6570\u636e\u5e93\u4e2d\uff0c\u5305\u542b\uff1a</p> <ol> <li>\u5143\u6570\u636e\uff1a\u540d\u79f0\u3001\u63cf\u8ff0\u3001\u7c7b\u578b\u3001\u57df/\u5c42\u7ea7\u5206\u7c7b</li> <li>LLM \u6587\u672c\uff1a\u7528\u4e8e\u8bed\u4e49\u641c\u7d22\u7684\u81ea\u7136\u8bed\u8a00\u8868\u793a</li> <li>\u5f15\u7528\uff1a\u5173\u8054\u7684\u8bed\u4e49\u6a21\u578b\u540d\u79f0</li> <li>\u65f6\u95f4\u6233\uff1a\u521b\u5efa\u65e5\u671f</li> </ol>"},{"location":"zh/subagent/gen_metrics/#_15","title":"\u603b\u7ed3","text":"<p>\u6307\u6807\u751f\u6210\u529f\u80fd\u63d0\u4f9b\uff1a</p> <p>\u2705 SQL \u5230\u6307\u6807\u8f6c\u6362\uff1a\u5206\u6790 SQL \u67e5\u8be2\u5e76\u751f\u6210 MetricFlow \u6307\u6807 \u2705 \u667a\u80fd\u7c7b\u578b\u68c0\u6d4b\uff1a\u81ea\u52a8\u9009\u62e9\u6b63\u786e\u7684\u6307\u6807\u7c7b\u578b \u2705 \u9632\u6b62\u91cd\u590d\uff1a\u751f\u6210\u524d\u68c0\u67e5\u73b0\u6709\u6307\u6807 \u2705 \u9a8c\u8bc1\uff1aMetricFlow \u9a8c\u8bc1\u786e\u4fdd\u6b63\u786e\u6027 \u2705 \u4ea4\u4e92\u5f0f\u5de5\u4f5c\u6d41\uff1a\u540c\u6b65\u524d\u5ba1\u9605\u548c\u6279\u51c6 \u2705 \u77e5\u8bc6\u5e93\u96c6\u6210\uff1a\u8bed\u4e49\u641c\u7d22\u4ee5\u53d1\u73b0\u6307\u6807 \u2705 \u6587\u4ef6\u7ba1\u7406\uff1a\u5b89\u5168\u5730\u8ffd\u52a0\u5230\u73b0\u6709\u8bed\u4e49\u6a21\u578b\u6587\u4ef6</p>"},{"location":"zh/subagent/gen_semantic_model/","title":"\u8bed\u4e49\u6a21\u578b\u751f\u6210\u6307\u5357","text":""},{"location":"zh/subagent/gen_semantic_model/#_2","title":"\u6982\u89c8","text":"<p>\u8bed\u4e49\u6a21\u578b\u751f\u6210\u529f\u80fd\u5e2e\u52a9\u4f60\u901a\u8fc7 AI \u52a9\u624b\u4ece\u6570\u636e\u5e93\u8868\u521b\u5efa MetricFlow \u8bed\u4e49\u6a21\u578b\u3002\u52a9\u624b\u5206\u6790\u4f60\u7684\u8868\u7ed3\u6784\u5e76\u751f\u6210\u5168\u9762\u7684 YAML \u914d\u7f6e\u6587\u4ef6\uff0c\u5b9a\u4e49\u6307\u6807\u3001\u7ef4\u5ea6\u548c\u5173\u7cfb\u3002</p>"},{"location":"zh/subagent/gen_semantic_model/#_3","title":"\u4ec0\u4e48\u662f\u8bed\u4e49\u6a21\u578b\uff1f","text":"<p>\u8bed\u4e49\u6a21\u578b\u662f\u5b9a\u4e49\u4ee5\u4e0b\u5185\u5bb9\u7684 YAML \u914d\u7f6e\uff1a</p> <ul> <li>\u5ea6\u91cf\uff08Measures\uff09\uff1a\u6307\u6807\u548c\u805a\u5408\uff08SUM\u3001COUNT\u3001AVERAGE \u7b49\uff09</li> <li>\u7ef4\u5ea6\uff08Dimensions\uff09\uff1a\u5206\u7c7b\u548c\u65f6\u95f4\u5c5e\u6027</li> <li>\u6807\u8bc6\u7b26\uff08Identifiers\uff09\uff1a\u7528\u4e8e\u5173\u7cfb\u7684\u4e3b\u952e\u548c\u5916\u952e</li> <li>\u6570\u636e\u6e90\uff08Data Source\uff09\uff1a\u4e0e\u6570\u636e\u5e93\u8868\u7684\u8fde\u63a5</li> </ul>"},{"location":"zh/subagent/gen_semantic_model/#_4","title":"\u5de5\u4f5c\u539f\u7406","text":"<p>\u4f7f\u7528 <code>datus --namespace &lt;namespace&gt;</code> \u542f\u52a8 Datus CLI\uff0c\u7136\u540e\u4f7f\u7528\u5b50\u4ee3\u7406\u547d\u4ee4\uff1a</p> <pre><code>  /gen_semantic_model generate a semantic model for table &lt;table_name&gt;\n</code></pre>"},{"location":"zh/subagent/gen_semantic_model/#_5","title":"\u4ea4\u4e92\u5f0f\u751f\u6210","text":"<p>\u5f53\u4f60\u8bf7\u6c42\u8bed\u4e49\u6a21\u578b\u65f6\uff0cAI \u52a9\u624b\u4f1a\uff1a</p> <ol> <li>\u68c0\u7d22\u4f60\u7684\u8868\u7684 DDL\uff08\u7ed3\u6784\uff09</li> <li>\u68c0\u67e5\u662f\u5426\u5df2\u5b58\u5728\u8bed\u4e49\u6a21\u578b</li> <li>\u751f\u6210\u5168\u9762\u7684 YAML \u6587\u4ef6</li> <li>\u4f7f\u7528 MetricFlow \u9a8c\u8bc1\u914d\u7f6e</li> <li>\u63d0\u793a\u4f60\u4fdd\u5b58\u5230\u77e5\u8bc6\u5e93</li> </ol>"},{"location":"zh/subagent/gen_semantic_model/#_6","title":"\u751f\u6210\u5de5\u4f5c\u6d41","text":"<pre><code>\u7528\u6237\u8bf7\u6c42 \u2192 DDL \u5206\u6790 \u2192 YAML \u751f\u6210 \u2192 \u9a8c\u8bc1 \u2192 \u7528\u6237\u786e\u8ba4 \u2192 \u5b58\u50a8\n</code></pre>"},{"location":"zh/subagent/gen_semantic_model/#_7","title":"\u7528\u6237\u786e\u8ba4","text":"<p>\u751f\u6210\u8bed\u4e49\u6a21\u578b\u540e\uff0c\u4f60\u4f1a\u770b\u5230\uff1a</p> <pre><code>=============================================================\nGenerated YAML: table_name.yml\nPath: /path/to/file.yml\n=============================================================\n[\u5e26\u8bed\u6cd5\u9ad8\u4eae\u7684 YAML \u5185\u5bb9]\n\nSYNC TO KNOWLEDGE BASE?\n\n1. Yes - Save to Knowledge Base\n2. No - Keep file only\n\nPlease enter your choice: [1/2]\n</code></pre> <p>\u9009\u9879\uff1a - \u9009\u9879 1\uff1a\u5c06\u8bed\u4e49\u6a21\u578b\u4fdd\u5b58\u5230\u4f60\u7684\u77e5\u8bc6\u5e93\uff08RAG \u5b58\u50a8\uff09\u7528\u4e8e AI \u9a71\u52a8\u7684\u67e5\u8be2 - \u9009\u9879 2\uff1a\u4ec5\u4fdd\u7559 YAML \u6587\u4ef6\uff0c\u4e0d\u540c\u6b65\u5230\u77e5\u8bc6\u5e93</p>"},{"location":"zh/subagent/gen_semantic_model/#_8","title":"\u914d\u7f6e","text":""},{"location":"zh/subagent/gen_semantic_model/#_9","title":"\u667a\u80fd\u4f53\u914d\u7f6e","text":"<p>\u5728 <code>agent.yml</code> \u4e2d\uff0c\u914d\u7f6e\u8bed\u4e49\u6a21\u578b\u751f\u6210\u8282\u70b9\uff1a</p> <pre><code>agentic_nodes:\n  gen_semantic_model:\n    model: claude                    # \u4f7f\u7528\u7684 LLM \u6a21\u578b\n    system_prompt: gen_semantic_model\n    prompt_version: \"1.0\"\n    tools: db_tools.*, generation_tools.*, filesystem_tools.*\n    hooks: generation_hooks          # \u542f\u7528\u7528\u6237\u786e\u8ba4\u5de5\u4f5c\u6d41\n    mcp: metricflow_mcp             # MetricFlow \u9a8c\u8bc1\u670d\u52a1\u5668\n    workspace_root: /path/to/semantic_models\n    agent_description: \"Semantic model generation assistant\"\n    rules:\n      - Use get_table_ddl tool to get complete table DDL\n      - Generate comprehensive semantic models\n      - Validate using metricflow_mcp\n</code></pre>"},{"location":"zh/subagent/gen_semantic_model/#_10","title":"\u5173\u952e\u914d\u7f6e\u9009\u9879","text":"\u53c2\u6570 \u63cf\u8ff0 \u793a\u4f8b <code>model</code> \u7528\u4e8e\u751f\u6210\u7684 LLM \u6a21\u578b <code>claude</code>\u3001<code>deepseek</code>\uff0c\u63a8\u8350\u4f7f\u7528 claude <code>workspace_root</code> \u4fdd\u5b58 YAML \u6587\u4ef6\u7684\u76ee\u5f55 <code>/Users/you/.datus/data/semantic_models</code> <code>tools</code> \u52a9\u624b\u53ef\u7528\u7684\u5de5\u5177 <code>db_tools.*</code>\u3001<code>filesystem_tools.*</code> <code>hooks</code> \u542f\u7528\u7528\u6237\u786e\u8ba4 <code>generation_hooks</code> <code>mcp</code> MetricFlow \u9a8c\u8bc1\u670d\u52a1\u5668 <code>metricflow_mcp</code>"},{"location":"zh/subagent/gen_semantic_model/#_11","title":"\u8bed\u4e49\u6a21\u578b\u7ed3\u6784","text":""},{"location":"zh/subagent/gen_semantic_model/#_12","title":"\u57fa\u672c\u6a21\u677f","text":"<pre><code>data_source:\n  name: table_name                    # \u5fc5\u9700\uff1a\u5c0f\u5199\u52a0\u4e0b\u5212\u7ebf\n  description: \"Table description\"\n\n  sql_table: schema.table_name        # \u5bf9\u4e8e\u6709 schema \u7684\u6570\u636e\u5e93\n  # OR\n  sql_query: |                        # \u5bf9\u4e8e\u81ea\u5b9a\u4e49\u67e5\u8be2\n    SELECT * FROM table_name\n\n  measures:\n    - name: total_amount              # \u5fc5\u9700\n      agg: SUM                        # \u5fc5\u9700\uff1aSUM|COUNT|AVERAGE|etc.\n      expr: amount_column             # \u5217\u6216 SQL \u8868\u8fbe\u5f0f\n      create_metric: true             # \u81ea\u52a8\u521b\u5efa\u53ef\u67e5\u8be2\u6307\u6807\n      description: \"Total transaction amount\"\n\n  dimensions:\n    - name: created_date\n      type: TIME                      # \u5fc5\u9700\uff1aTIME|CATEGORICAL\n      type_params:\n        is_primary: true              # \u9700\u8981\u4e00\u4e2a\u4e3b\u65f6\u95f4\u7ef4\u5ea6\n        time_granularity: DAY         # TIME \u5fc5\u9700\uff1aDAY|WEEK|MONTH|etc.\n\n    - name: status\n      type: CATEGORICAL\n      description: \"Order status\"\n\n  identifiers:\n    - name: order_id\n      type: PRIMARY                   # PRIMARY|FOREIGN|UNIQUE|NATURAL\n      expr: order_id\n\n    - name: customer\n      type: FOREIGN\n      expr: customer_id\n</code></pre>"},{"location":"zh/subagent/gen_semantic_model/#_13","title":"\u603b\u7ed3","text":"<p>\u8bed\u4e49\u6a21\u578b\u751f\u6210\u529f\u80fd\u63d0\u4f9b\uff1a</p> <ul> <li>\u2713 \u4ece\u8868 DDL \u81ea\u52a8\u751f\u6210 YAML</li> <li>\u2713 \u4ea4\u4e92\u5f0f\u9a8c\u8bc1\u548c\u9519\u8bef\u4fee\u590d</li> <li>\u2713 \u5b58\u50a8\u524d\u7528\u6237\u786e\u8ba4</li> <li>\u2713 \u77e5\u8bc6\u5e93\u96c6\u6210</li> <li>\u2713 \u9632\u6b62\u91cd\u590d</li> <li>\u2713 MetricFlow \u517c\u5bb9\u6027</li> </ul>"},{"location":"zh/subagent/gen_sql_summary/","title":"SQL \u6458\u8981\u751f\u6210\u6307\u5357","text":""},{"location":"zh/subagent/gen_sql_summary/#_1","title":"\u6982\u89c8","text":"<p>SQL \u6458\u8981\u529f\u80fd\u5e2e\u52a9\u4f60\u5206\u6790\u3001\u5206\u7c7b\u548c\u7f16\u76ee SQL \u67e5\u8be2\uff0c\u7528\u4e8e\u77e5\u8bc6\u590d\u7528\u3002\u5b83\u81ea\u52a8\u751f\u6210\u7ed3\u6784\u5316\u7684 YAML \u6458\u8981\uff0c\u5b58\u50a8\u5728\u53ef\u641c\u7d22\u7684\u77e5\u8bc6\u5e93\u4e2d\uff0c\u4fbf\u4e8e\u5c06\u6765\u67e5\u627e\u548c\u590d\u7528\u76f8\u4f3c\u7684\u67e5\u8be2\u3002</p>"},{"location":"zh/subagent/gen_sql_summary/#sql_1","title":"\u4ec0\u4e48\u662f SQL \u6458\u8981\uff1f","text":"<p>**SQL \u6458\u8981**\u662f\u4e00\u4e2a\u7ed3\u6784\u5316 YAML \u6587\u6863\uff0c\u5305\u542b\uff1a</p> <ul> <li>\u67e5\u8be2\u6587\u672c\uff1a\u5b8c\u6574\u7684 SQL \u67e5\u8be2</li> <li>\u4e1a\u52a1\u4e0a\u4e0b\u6587\uff1a\u57df\u3001\u7c7b\u522b\u548c\u6807\u7b7e</li> <li>\u8bed\u4e49\u6458\u8981\uff1a\u7528\u4e8e\u5411\u91cf\u641c\u7d22\u7684\u8be6\u7ec6\u8bf4\u660e</li> <li>\u5143\u6570\u636e\uff1a\u540d\u79f0\u3001\u6ce8\u91ca\u3001\u6587\u4ef6\u8def\u5f84</li> </ul> <p>\u4f7f\u7528\u573a\u666f\uff1a - \u6784\u5efa\u53ef\u641c\u7d22\u7684 SQL \u67e5\u8be2\u5e93 - \u5728\u56e2\u961f\u95f4\u5171\u4eab\u548c\u590d\u7528\u5df2\u9a8c\u8bc1\u7684\u67e5\u8be2 - \u6587\u6863\u5316\u590d\u6742\u67e5\u8be2\u6a21\u5f0f - \u542f\u7528\u8bed\u4e49\u641c\u7d22\uff1a\"\u67e5\u627e\u4e0e\u6536\u5165\u5206\u6790\u76f8\u5173\u7684\u67e5\u8be2\"</p>"},{"location":"zh/subagent/gen_sql_summary/#_2","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u542f\u52a8 SQL \u6458\u8981\u751f\u6210\u5b50\u4ee3\u7406\uff1a</p> <pre><code>/gen_sql_summary Analyze this SQL: SELECT SUM(revenue) FROM sales GROUP BY region.(You can also add some description on this SQL)\n</code></pre>"},{"location":"zh/subagent/gen_sql_summary/#_3","title":"\u5de5\u4f5c\u539f\u7406","text":""},{"location":"zh/subagent/gen_sql_summary/#_4","title":"\u751f\u6210\u5de5\u4f5c\u6d41","text":"<pre><code>\u7528\u6237\u63d0\u4f9b SQL + \u63cf\u8ff0 \u2192 \u667a\u80fd\u4f53\u5206\u6790\u67e5\u8be2 \u2192 \u68c0\u7d22\u4e0a\u4e0b\u6587\uff08\u5206\u7c7b\u4f53\u7cfb + \u76f8\u4f3c\u67e5\u8be2\uff09 \u2192\n\u751f\u6210\u552f\u4e00 ID \u2192 \u521b\u5efa YAML \u2192 \u4fdd\u5b58\u6587\u4ef6 \u2192 \u7528\u6237\u786e\u8ba4 \u2192 \u540c\u6b65\u5230\u77e5\u8bc6\u5e93\n</code></pre>"},{"location":"zh/subagent/gen_sql_summary/#_5","title":"\u6b65\u9aa4\u8be6\u89e3","text":"<ol> <li>\u7406\u89e3 SQL\uff1aAI \u5206\u6790\u4f60\u7684\u67e5\u8be2\u7ed3\u6784\u548c\u4e1a\u52a1\u903b\u8f91</li> <li>\u83b7\u53d6\u4e0a\u4e0b\u6587\uff1a\u8c03\u7528 <code>prepare_sql_summary_context()</code> \u68c0\u7d22\uff1a</li> <li>\u73b0\u6709\u5206\u7c7b\u4f53\u7cfb\uff08\u57df\u3001\u7c7b\u522b\u3001\u6807\u7b7e\uff09</li> <li>\u7c7b\u4f3c\u7684 SQL \u6458\u8981\u7528\u4e8e\u5206\u7c7b\u53c2\u8003</li> <li>\u751f\u6210\u552f\u4e00 ID\uff1a\u4f7f\u7528 <code>generate_sql_summary_id()</code> \u57fa\u4e8e SQL + \u6ce8\u91ca\u751f\u6210</li> <li>\u521b\u5efa\u552f\u4e00\u540d\u79f0\uff1a\u751f\u6210\u63cf\u8ff0\u6027\u540d\u79f0\uff08\u6700\u591a 20 \u4e2a\u5b57\u7b26\uff09</li> <li>\u5206\u7c7b\u67e5\u8be2\uff1a\u6309\u7167\u73b0\u6709\u6a21\u5f0f\u5206\u914d\u57df\u3001layer1\u3001layer2 \u548c\u6807\u7b7e</li> <li>\u751f\u6210 YAML\uff1a\u521b\u5efa\u7ed3\u6784\u5316\u6458\u8981\u6587\u6863</li> <li>\u4fdd\u5b58\u6587\u4ef6\uff1a\u4f7f\u7528 <code>write_file()</code> \u5c06 YAML \u5199\u5165\u5de5\u4f5c\u7a7a\u95f4</li> <li>\u7528\u6237\u786e\u8ba4\uff1a\u663e\u793a\u751f\u6210\u7684 YAML \u5e76\u63d0\u793a\u6279\u51c6</li> <li>\u540c\u6b65\u5230\u77e5\u8bc6\u5e93\uff1a\u5b58\u50a8\u5230 LanceDB \u7528\u4e8e\u8bed\u4e49\u641c\u7d22</li> </ol>"},{"location":"zh/subagent/gen_sql_summary/#_6","title":"\u4ea4\u4e92\u5f0f\u786e\u8ba4","text":"<p>\u751f\u6210\u540e\uff0c\u4f60\u4f1a\u770b\u5230\uff1a</p> <pre><code>==========================================================\nGenerated Reference SQL YAML\nFile: /path/to/sql_summary.yml\n==========================================================\n[\u5e26\u8bed\u6cd5\u9ad8\u4eae\u7684 YAML \u5185\u5bb9]\n\n  SYNC TO KNOWLEDGE BASE?\n\n  1. Yes - Save to Knowledge Base\n  2. No - Keep file only\n\nPlease enter your choice: [1/2]\n</code></pre>"},{"location":"zh/subagent/gen_sql_summary/#_7","title":"\u914d\u7f6e","text":""},{"location":"zh/subagent/gen_sql_summary/#_8","title":"\u667a\u80fd\u4f53\u914d\u7f6e","text":"<p>\u5728 <code>agent.yml</code> \u4e2d\uff1a</p> <pre><code>agentic_nodes:\n  gen_sql_summary:\n    model: deepseek                        # \u7528\u4e8e\u5206\u6790\u7684 LLM \u6a21\u578b\n    system_prompt: gen_sql_summary         # \u63d0\u793a\u6a21\u677f\n    prompt_version: \"1.0\"\n    tools: generation_tools.prepare_sql_summary_context, generation_tools.generate_sql_summary_id, filesystem_tools.write_file\n    hooks: generation_hooks                # \u542f\u7528\u786e\u8ba4\u5de5\u4f5c\u6d41\n    workspace_root: /path/to/reference_sql   # \u4fdd\u5b58 YAML \u6587\u4ef6\u7684\u76ee\u5f55\n    agent_description: \"reference SQL analysis assistant\"\n</code></pre>"},{"location":"zh/subagent/gen_sql_summary/#_9","title":"\u5173\u952e\u914d\u7f6e\u9009\u9879","text":"\u53c2\u6570 \u63cf\u8ff0 \u793a\u4f8b <code>model</code> \u7528\u4e8e SQL \u5206\u6790\u7684 LLM \u6a21\u578b <code>deepseek</code>\u3001<code>claude</code>\u3001<code>openai</code>\u3001<code>kimi</code> <code>workspace_root</code> SQL \u6458\u8981 YAML \u6587\u4ef6\u7684\u76ee\u5f55 <code>/Users/you/.datus/data/reference_sql</code> <code>tools</code> \u5de5\u4f5c\u6d41\u6240\u9700\u7684\u5de5\u5177 \u89c1\u4e0b\u65b9\u5de5\u5177\u90e8\u5206 <code>hooks</code> \u542f\u7528\u4ea4\u4e92\u5f0f\u786e\u8ba4 <code>generation_hooks</code>"},{"location":"zh/subagent/gen_sql_summary/#yaml","title":"YAML \u7ed3\u6784","text":"<p>\u751f\u6210\u7684 SQL \u6458\u8981\u9075\u5faa\u4ee5\u4e0b\u7ed3\u6784\uff1a</p> <pre><code>id: \"abc123def456...\"                      # \u81ea\u52a8\u751f\u6210\u7684 MD5 \u54c8\u5e0c\nname: \"Revenue by Region\"                  # \u63cf\u8ff0\u6027\u540d\u79f0\uff08\u6700\u591a 20 \u4e2a\u5b57\u7b26\uff09\nsql: |                                     # \u5b8c\u6574 SQL \u67e5\u8be2\n  SELECT\n    region,\n    SUM(revenue) as total_revenue\n  FROM sales\n  GROUP BY region\ncomment: \"Calculate total revenue grouped by region\"\nsummary: \"This query aggregates total revenue from the sales table, grouping results by geographic region. It uses SUM aggregation to calculate revenue totals for each region.\"\nfilepath: \"/Users/you/.datus/data/reference_sql/revenue_by_region.yml\"\ndomain: \"Sales\"                            # \u4e1a\u52a1\u57df\nlayer1: \"Reporting\"                        # \u4e3b\u8981\u7c7b\u522b\nlayer2: \"Revenue Analysis\"                 # \u6b21\u8981\u7c7b\u522b\ntags: \"revenue, region, aggregation\"       # \u9017\u53f7\u5206\u9694\u7684\u6807\u7b7e\n</code></pre>"},{"location":"zh/subagent/gen_sql_summary/#_10","title":"\u5b57\u6bb5\u8bf4\u660e","text":"\u5b57\u6bb5 \u5fc5\u9700 \u63cf\u8ff0 \u793a\u4f8b <code>id</code> \u662f \u552f\u4e00\u54c8\u5e0c\uff08\u81ea\u52a8\u751f\u6210\uff09 <code>abc123def456...</code> <code>name</code> \u662f \u7b80\u77ed\u63cf\u8ff0\u6027\u540d\u79f0\uff08\u6700\u591a 20 \u4e2a\u5b57\u7b26\uff09 <code>Revenue by Region</code> <code>sql</code> \u662f \u5b8c\u6574 SQL \u67e5\u8be2 <code>SELECT ...</code> <code>comment</code> \u662f \u7b80\u77ed\u7684\u5355\u884c\u63cf\u8ff0 \u7528\u6237\u6d88\u606f\u6216\u751f\u6210\u7684\u6458\u8981 <code>summary</code> \u662f \u8be6\u7ec6\u8bf4\u660e\uff08\u7528\u4e8e\u641c\u7d22\uff09 \u5168\u9762\u7684\u67e5\u8be2\u63cf\u8ff0 <code>filepath</code> \u662f \u5b9e\u9645\u6587\u4ef6\u8def\u5f84 <code>/path/to/file.yml</code> <code>domain</code> \u662f \u4e1a\u52a1\u57df <code>Sales</code>\u3001<code>Marketing</code>\u3001<code>Finance</code> <code>layer1</code> \u662f \u4e3b\u8981\u7c7b\u522b <code>Reporting</code>\u3001<code>Analytics</code>\u3001<code>ETL</code> <code>layer2</code> \u662f \u6b21\u8981\u7c7b\u522b <code>Revenue Analysis</code>\u3001<code>Customer Insights</code> <code>tags</code> \u53ef\u9009 \u9017\u53f7\u5206\u9694\u7684\u5173\u952e\u5b57 <code>revenue, region, aggregation</code>"},{"location":"zh/subagent/gen_sql_summary/#_11","title":"\u603b\u7ed3","text":"<p>SQL \u6458\u8981\u529f\u80fd\u63d0\u4f9b\uff1a</p> <p>\u2705 \u81ea\u52a8\u5316\u5206\u6790\uff1aAI \u7406\u89e3\u67e5\u8be2\u7ed3\u6784\u548c\u76ee\u7684 \u2705 \u667a\u80fd\u5206\u7c7b\uff1a\u57fa\u4e8e\u5206\u7c7b\u4f53\u7cfb\u7684\u4e00\u81f4\u6027\u5206\u7c7b \u2705 \u53bb\u91cd\uff1a\u57fa\u4e8e\u54c8\u5e0c\u7684\u81ea\u52a8\u91cd\u590d\u68c0\u6d4b \u2705 \u8bed\u4e49\u641c\u7d22\uff1a\u5411\u91cf\u5d4c\u5165\u652f\u6301\u667a\u80fd\u67e5\u8be2\u53d1\u73b0 \u2705 \u8bed\u8a00\u4fdd\u6301\uff1a\u7ef4\u62a4\u4e2d\u82f1\u6587\u4e00\u81f4\u6027 \u2705 \u4ea4\u4e92\u5f0f\u5de5\u4f5c\u6d41\uff1a\u540c\u6b65\u524d\u5ba1\u9605\u548c\u6279\u51c6 \u2705 \u77e5\u8bc6\u590d\u7528\uff1a\u6784\u5efa\u53ef\u641c\u7d22\u7684 SQL \u67e5\u8be2\u5e93</p>"},{"location":"zh/subagent/introduction/","title":"Subagent \u6307\u5357","text":""},{"location":"zh/subagent/introduction/#_1","title":"\u6982\u89c8","text":"<p>Subagent \u662f Datus \u4e2d\u4e13\u6ce8\u4e8e\u7279\u5b9a\u4efb\u52a1\u7684\u4e13\u7528 AI \u52a9\u624b\u3002\u4e0e\u5904\u7406\u901a\u7528 SQL \u67e5\u8be2\u7684\u9ed8\u8ba4\u804a\u5929\u52a9\u624b\u4e0d\u540c\uff0csubagent\u9488\u5bf9\u7279\u5b9a\u5de5\u4f5c\u6d41\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u4f8b\u5982\u751f\u6210\u8bed\u4e49\u6a21\u578b\u3001\u521b\u5efa\u6307\u6807\u6216\u5206\u6790 SQL \u67e5\u8be2\u3002</p>"},{"location":"zh/subagent/introduction/#subagent_1","title":"\u4ec0\u4e48\u662fsubagent\uff1f","text":"<p>subagent \u662f\u9762\u5411\u7279\u5b9a\u4efb\u52a1\u7684 AI \u52a9\u624b\uff0c\u5177\u5907\u4ee5\u4e0b\u7279\u6027\uff1a</p> <ul> <li>\u4e13\u7528\u7cfb\u7edf\u63d0\u793a\uff1a\u9488\u5bf9\u7279\u5b9a\u4efb\u52a1\u4f18\u5316\u7684\u6307\u4ee4</li> <li>\u81ea\u5b9a\u4e49\u5de5\u5177\uff1a\u4e3a\u4efb\u52a1\u5b9a\u5236\u7684\u5de5\u5177\u96c6\uff08\u4f8b\u5982\u6587\u4ef6\u64cd\u4f5c\u3001\u9a8c\u8bc1\uff09</li> <li>\u8303\u56f4\u5316\u4e0a\u4e0b\u6587\uff1a\u53ef\u9009\uff0c\u4e13\u7528\u4e8e\u8be5subagent\u7684\u4e0a\u4e0b\u6587\uff08\u6570\u636e\u8868\u3001\u6307\u6807\u3001\u53c2\u8003 SQL\uff09</li> <li>\u72ec\u7acb\u4f1a\u8bdd\uff1a\u4e0e\u4e3b\u804a\u5929\u5206\u79bb\u7684\u5bf9\u8bdd\u5386\u53f2</li> <li>\u4efb\u52a1\u5bfc\u5411\u5de5\u4f5c\u6d41\uff1a\u5b8c\u6210\u7279\u5b9a\u76ee\u6807\u7684\u5f15\u5bfc\u6b65\u9aa4</li> </ul>"},{"location":"zh/subagent/introduction/#subagent_2","title":"\u53ef\u7528subagent","text":""},{"location":"zh/subagent/introduction/#1-gen_semantic_model","title":"1. <code>gen_semantic_model</code>","text":"<p>\u7528\u9014\uff1a\u4ece\u6570\u636e\u5e93\u8868\u751f\u6210 MetricFlow \u8bed\u4e49\u6a21\u578b\u3002</p> <p>\u4f7f\u7528\u573a\u666f\uff1a\u5c06\u6570\u636e\u5e93\u8868\u7ed3\u6784\u8f6c\u6362\u4e3a YAML \u8bed\u4e49\u6a21\u578b\u5b9a\u4e49\u3002</p> <p>\u524d\u7f6e\u6761\u4ef6\uff1a\u6b64subagent\u4f9d\u8d56 datus-metricflow\uff0c\u8bf7\u5148\u5b89\u88c5\u3002</p> <p>\u542f\u52a8\u547d\u4ee4\uff1a <pre><code>/gen_semantic_model Generate a semantic model for the transactions table\n</code></pre></p> <p>\u6838\u5fc3\u7279\u6027\uff1a</p> <ul> <li>\u81ea\u52a8\u83b7\u53d6\u8868 DDL</li> <li>\u8bc6\u522b\u5ea6\u91cf\u3001\u7ef4\u5ea6\u548c\u6807\u8bc6\u7b26</li> <li>\u4f7f\u7528 MetricFlow \u9a8c\u8bc1</li> <li>\u540c\u6b65\u5230\u77e5\u8bc6\u5e93</li> </ul> <p>\u53c2\u8003\uff1a\u8bed\u4e49\u6a21\u578b\u751f\u6210\u6307\u5357</p>"},{"location":"zh/subagent/introduction/#2-gen_metrics","title":"2. <code>gen_metrics</code>","text":"<p>\u7528\u9014\uff1a\u5c06 SQL \u67e5\u8be2\u8f6c\u6362\u4e3a\u53ef\u590d\u7528\u7684 MetricFlow \u6307\u6807\u5b9a\u4e49\u3002</p> <p>\u4f7f\u7528\u573a\u666f\uff1a\u5c06\u4e34\u65f6 SQL \u8ba1\u7b97\u8f6c\u6362\u4e3a\u6807\u51c6\u5316\u6307\u6807\u3002</p> <p>\u524d\u7f6e\u6761\u4ef6\uff1a\u6b64subagent\u4f9d\u8d56 datus-metricflow\uff0c\u8bf7\u5148\u5b89\u88c5\u3002</p> <p>\u542f\u52a8\u547d\u4ee4\uff1a <pre><code>/gen_metrics Generate a metric from this SQL: SELECT SUM(revenue) / COUNT(DISTINCT customer_id) FROM transactions\n</code></pre></p> <p>\u6838\u5fc3\u7279\u6027\uff1a</p> <ul> <li>\u5206\u6790 SQL \u4e1a\u52a1\u903b\u8f91</li> <li>\u786e\u5b9a\u5408\u9002\u7684\u6307\u6807\u7c7b\u578b\uff08ratio\u3001measure_proxy \u7b49\uff09</li> <li>\u8ffd\u52a0\u5230\u73b0\u6709\u8bed\u4e49\u6a21\u578b\u6587\u4ef6</li> <li>\u68c0\u67e5\u91cd\u590d\u9879</li> </ul> <p>\u53c2\u8003\uff1a\u6307\u6807\u751f\u6210\u6307\u5357</p>"},{"location":"zh/subagent/introduction/#3-gen_sql_summary","title":"3. <code>gen_sql_summary</code>","text":"<p>\u7528\u9014\uff1a\u5206\u6790\u548c\u5206\u7c7b SQL \u67e5\u8be2\uff0c\u7528\u4e8e\u77e5\u8bc6\u590d\u7528\u3002</p> <p>\u4f7f\u7528\u573a\u666f\uff1a\u6784\u5efa\u53ef\u641c\u7d22\u7684 SQL \u67e5\u8be2\u5e93\uff0c\u5e76\u8fdb\u884c\u8bed\u4e49\u5206\u7c7b\u3002</p> <p>\u542f\u52a8\u547d\u4ee4\uff1a <pre><code>/gen_sql_summary Analyze this SQL: SELECT region, SUM(revenue) FROM sales GROUP BY region\n</code></pre></p> <p>\u6838\u5fc3\u7279\u6027\uff1a</p> <ul> <li>\u4e3a SQL \u67e5\u8be2\u751f\u6210\u552f\u4e00 ID</li> <li>\u6309\u57df/\u5c42\u7ea7/\u6807\u7b7e\u5206\u7c7b</li> <li>\u521b\u5efa\u8be6\u7ec6\u7684\u6458\u8981\u7528\u4e8e\u5411\u91cf\u641c\u7d22</li> <li>\u652f\u6301\u4e2d\u6587\u548c\u82f1\u6587</li> </ul> <p>\u53c2\u8003\uff1aSQL \u6458\u8981\u6307\u5357</p>"},{"location":"zh/subagent/introduction/#4-subagent","title":"4. \u81ea\u5b9a\u4e49subagent","text":"<p>\u4f60\u53ef\u4ee5\u5728 <code>agent.yml</code> \u4e2d\u5b9a\u4e49\u81ea\u5b9a\u4e49subagent\uff0c\u7528\u4e8e\u7ec4\u7ec7\u7279\u5b9a\u7684\u5de5\u4f5c\u6d41\u3002</p> <p>\u914d\u7f6e\u793a\u4f8b\uff1a <pre><code>agentic_nodes:\n  my_custom_agent:\n    model: claude\n    system_prompt: my_custom_prompt\n    prompt_version: \"1.0\"\n    tools: db_tools.*, context_search_tools.*\n    max_turns: 30\n    agent_description: \"Custom workflow assistant\"\n</code></pre></p>"},{"location":"zh/subagent/introduction/#subagent_3","title":"\u5982\u4f55\u4f7f\u7528subagent","text":""},{"location":"zh/subagent/introduction/#1cli","title":"\u65b9\u6cd5 1\uff1aCLI \u547d\u4ee4\uff08\u63a8\u8350\uff09","text":"<p>\u4f7f\u7528\u659c\u6760\u547d\u4ee4\u542f\u52a8subagent\uff1a</p> <pre><code>datus --namespace production\n\n# \u4f7f\u7528\u7279\u5b9a\u4efb\u52a1\u542f\u52a8subagent\n/gen_metrics Generate a revenue metric\n</code></pre> <p>\u5de5\u4f5c\u6d41\u7a0b\uff1a</p> <ol> <li>\u8f93\u5165 <code>/[subagent_name]</code> \u540e\u8ddf\u4f60\u7684\u8bf7\u6c42</li> <li>subagent\u4f7f\u7528\u4e13\u7528\u5de5\u5177\u5904\u7406\u4efb\u52a1</li> <li>\u5ba1\u9605\u751f\u6210\u7684\u8f93\u51fa\uff08YAML\u3001SQL \u7b49\uff09</li> <li>\u786e\u8ba4\u662f\u5426\u540c\u6b65\u5230\u77e5\u8bc6\u5e93</li> </ol>"},{"location":"zh/subagent/introduction/#2web","title":"\u65b9\u6cd5 2\uff1aWeb \u754c\u9762","text":"<p>\u901a\u8fc7\u7f51\u9875\u804a\u5929\u673a\u5668\u4eba\u8bbf\u95eesubagent\uff1a</p> <pre><code>datus web --namespace production\n</code></pre> <p>\u6b65\u9aa4\uff1a</p> <ol> <li>\u5728\u4e3b\u9875\u9762\u70b9\u51fb \"\ud83d\udd27 Access Specialized Subagents\"</li> <li>\u9009\u62e9\u9700\u8981\u7684subagent\uff08\u4f8b\u5982 \"gen_metrics\"\uff09</li> <li>\u70b9\u51fb \"\ud83d\ude80 Use [subagent_name]\"</li> <li>\u4e0e\u4e13\u7528\u52a9\u624b\u5bf9\u8bdd</li> </ol> <p>\u76f4\u63a5 URL \u8bbf\u95ee\uff1a <pre><code>http://localhost:8501/?subagent=gen_metrics\nhttp://localhost:8501/?subagent=gen_semantic_model\nhttp://localhost:8501/?subagent=gen_sql_summary\n</code></pre></p>"},{"location":"zh/subagent/introduction/#subagent-vs","title":"subagent vs \u9ed8\u8ba4\u804a\u5929","text":"\u65b9\u9762 \u9ed8\u8ba4\u804a\u5929 subagent \u7528\u9014 \u901a\u7528 SQL \u67e5\u8be2 \u7279\u5b9a\u4efb\u52a1\u5de5\u4f5c\u6d41 \u5de5\u5177 \u6570\u636e\u5e93\u5de5\u5177\u3001\u641c\u7d22\u5de5\u5177 \u4efb\u52a1\u7279\u5b9a\u5de5\u5177\uff08\u6587\u4ef6\u64cd\u4f5c\u3001\u9a8c\u8bc1\uff09 \u4f1a\u8bdd \u5355\u4e00\u5bf9\u8bdd \u6bcf\u4e2asubagent\u72ec\u7acb \u63d0\u793a \u901a\u7528 SQL \u8f85\u52a9 \u4efb\u52a1\u4f18\u5316\u7684\u6307\u4ee4 \u8f93\u51fa SQL \u67e5\u8be2 + \u89e3\u91ca \u7ed3\u6784\u5316\u5de5\u4ef6\uff08YAML\u3001\u6587\u4ef6\uff09 \u9a8c\u8bc1 \u53ef\u9009 \u5185\u7f6e\uff08\u4f8b\u5982 MetricFlow \u9a8c\u8bc1\uff09 <p>\u4f55\u65f6\u4f7f\u7528\u9ed8\u8ba4\u804a\u5929\uff1a</p> <ul> <li>\u4e34\u65f6 SQL \u67e5\u8be2</li> <li>\u6570\u636e\u63a2\u7d22</li> <li>\u5173\u4e8e\u6570\u636e\u5e93\u7684\u5feb\u901f\u95ee\u9898</li> </ul> <p>\u4f55\u65f6\u4f7f\u7528subagent\uff1a</p> <ul> <li>\u751f\u6210\u6807\u51c6\u5316\u5de5\u4ef6\uff08\u8bed\u4e49\u6a21\u578b\u3001\u6307\u6807\uff09</li> <li>\u9075\u5faa\u7279\u5b9a\u5de5\u4f5c\u6d41\uff08\u5206\u7c7b\u3001\u9a8c\u8bc1\uff09</li> <li>\u6784\u5efa\u77e5\u8bc6\u5e93</li> </ul>"},{"location":"zh/subagent/introduction/#_2","title":"\u914d\u7f6e","text":""},{"location":"zh/subagent/introduction/#_3","title":"\u57fa\u7840\u914d\u7f6e","text":"<p>\u5728 <code>conf/agent.yml</code> \u4e2d\u5b9a\u4e49subagent\uff1a</p> <pre><code>agentic_nodes:\n  gen_metrics:\n    model: claude                          # LLM \u6a21\u578b\n    system_prompt: gen_metrics             # \u63d0\u793a\u6a21\u677f\u540d\u79f0\n    prompt_version: \"1.0\"                  # \u6a21\u677f\u7248\u672c\n    tools: generation_tools.*, filesystem_tools.*  # \u53ef\u7528\u5de5\u5177\n    hooks: generation_hooks                # \u7528\u6237\u786e\u8ba4\n    mcp: metricflow_mcp                    # MCP \u670d\u52a1\u5668\n    max_turns: 40                          # \u6700\u5927\u5bf9\u8bdd\u8f6e\u6570\n    workspace_root: /path/to/workspace     # \u6587\u4ef6\u5de5\u4f5c\u7a7a\u95f4\n    agent_description: \"Metric generation assistant\"\n    rules:                                 # \u81ea\u5b9a\u4e49\u89c4\u5219\n      - Use check_metric_exists to avoid duplicates\n      - Validate with mf validate-configs\n</code></pre>"},{"location":"zh/subagent/introduction/#_4","title":"\u5173\u952e\u53c2\u6570","text":"\u53c2\u6570 \u5fc5\u9700 \u63cf\u8ff0 \u793a\u4f8b <code>model</code> \u662f LLM \u6a21\u578b\u540d\u79f0 <code>claude</code>\u3001<code>deepseek</code>\u3001<code>openai</code> <code>system_prompt</code> \u662f \u63d0\u793a\u6a21\u677f\u6807\u8bc6\u7b26 <code>gen_metrics</code>\u3001<code>gen_semantic_model</code> <code>prompt_version</code> \u5426 \u6a21\u677f\u7248\u672c <code>\"1.0\"</code>\u3001<code>\"2.0\"</code> <code>tools</code> \u662f \u9017\u53f7\u5206\u9694\u7684\u5de5\u5177\u6a21\u5f0f <code>db_tools.*, generation_tools.*</code> <code>hooks</code> \u5426 \u542f\u7528\u786e\u8ba4\u5de5\u4f5c\u6d41 <code>generation_hooks</code> <code>mcp</code> \u5426 MCP \u670d\u52a1\u5668\u540d\u79f0 <code>metricflow_mcp, filesystem_mcp</code> <code>max_turns</code> \u5426 \u6700\u5927\u5bf9\u8bdd\u8f6e\u6570 <code>30</code>\u3001<code>40</code> <code>workspace_root</code> \u5426 \u6587\u4ef6\u64cd\u4f5c\u76ee\u5f55 <code>/path/to/workspace</code> <code>agent_description</code> \u5426 \u52a9\u624b\u63cf\u8ff0 <code>\"SQL analysis assistant\"</code> <code>rules</code> \u5426 \u81ea\u5b9a\u4e49\u884c\u4e3a\u89c4\u5219 \u5b57\u7b26\u4e32\u5217\u8868"},{"location":"zh/subagent/introduction/#_5","title":"\u5de5\u5177\u6a21\u5f0f","text":"<p>\u901a\u914d\u7b26\u6a21\u5f0f\uff08\u6240\u6709\u65b9\u6cd5\uff09\uff1a <pre><code>tools: db_tools.*, generation_tools.*, filesystem_tools.*\n</code></pre></p> <p>\u7279\u5b9a\u65b9\u6cd5\uff1a <pre><code>tools: db_tools.list_tables, db_tools.get_table_ddl, generation_tools.check_metric_exists\n</code></pre></p> <p>\u53ef\u7528\u5de5\u5177\u7c7b\u578b\uff1a</p> <ul> <li><code>db_tools.*</code>\uff1a\u6570\u636e\u5e93\u64cd\u4f5c\uff08\u5217\u51fa\u8868\u3001\u83b7\u53d6 DDL\u3001\u6267\u884c\u67e5\u8be2\uff09</li> <li><code>generation_tools.*</code>\uff1a\u751f\u6210\u8f85\u52a9\u5de5\u5177\uff08\u68c0\u67e5\u91cd\u590d\u3001\u4e0a\u4e0b\u6587\u51c6\u5907\uff09</li> <li><code>filesystem_tools.*</code>\uff1a\u6587\u4ef6\u64cd\u4f5c\uff08\u8bfb\u53d6\u3001\u5199\u5165\u3001\u7f16\u8f91\u6587\u4ef6\uff09</li> <li><code>context_search_tools.*</code>\uff1a\u77e5\u8bc6\u5e93\u641c\u7d22\uff08\u67e5\u627e\u6307\u6807\u3001\u8bed\u4e49\u6a21\u578b\uff09</li> <li><code>date_parsing_tools.*</code>\uff1a\u65e5\u671f/\u65f6\u95f4\u89e3\u6790\u548c\u89c4\u8303\u5316</li> </ul>"},{"location":"zh/subagent/introduction/#mcp","title":"MCP \u670d\u52a1\u5668","text":"<p>MCP\uff08Model Context Protocol\uff09\u670d\u52a1\u5668\u63d0\u4f9b\u989d\u5916\u5de5\u5177\uff1a</p> <p>\u5185\u7f6e MCP \u670d\u52a1\u5668\uff1a</p> <ul> <li><code>filesystem_mcp</code>\uff1a\u5de5\u4f5c\u7a7a\u95f4\u5185\u7684\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c</li> <li><code>metricflow_mcp</code>\uff1aMetricFlow CLI \u96c6\u6210\uff08\u9a8c\u8bc1\u3001\u67e5\u8be2\u3001\u5217\u51fa\uff09</li> </ul> <p>\u914d\u7f6e\uff1a <pre><code>mcp: metricflow_mcp, filesystem_mcp\n</code></pre></p>"},{"location":"zh/subagent/introduction/#_6","title":"\u603b\u7ed3","text":"<p>subagent\u63d0\u4f9b**\u4e13\u7528\u7684\u3001\u5de5\u4f5c\u6d41\u4f18\u5316\u7684 AI \u52a9\u624b**\uff0c\u7528\u4e8e\u7279\u5b9a\u4efb\u52a1\uff1a</p> <ul> <li>\u4efb\u52a1\u5bfc\u5411\uff1a\u9488\u5bf9\u7279\u5b9a\u5de5\u4f5c\u6d41\u4f18\u5316\u7684\u63d0\u793a\u548c\u5de5\u5177</li> <li>\u72ec\u7acb\u4f1a\u8bdd\uff1a\u6bcf\u4e2asubagent\u62e5\u6709\u72ec\u7acb\u7684\u5bf9\u8bdd\u5386\u53f2</li> <li>\u5de5\u4ef6\u751f\u6210\uff1a\u521b\u5efa\u6807\u51c6\u5316\u6587\u4ef6\uff08YAML\u3001\u6587\u6863\uff09</li> <li>\u5185\u7f6e\u9a8c\u8bc1\uff1a\u81ea\u52a8\u68c0\u67e5\u548c\u9a8c\u8bc1\uff08\u4f8b\u5982 MetricFlow\uff09</li> <li>\u77e5\u8bc6\u5e93\u96c6\u6210\uff1a\u540c\u6b65\u751f\u6210\u7684\u5de5\u4ef6\u4ee5\u4f9b\u590d\u7528</li> <li>\u7075\u6d3b\u914d\u7f6e\uff1a\u81ea\u5b9a\u4e49\u5de5\u5177\u3001\u63d0\u793a\u548c\u884c\u4e3a</li> </ul>"},{"location":"zh/web_chatbot/introduction/","title":"Web chatbot \u7528\u6237\u6307\u5357","text":""},{"location":"zh/web_chatbot/introduction/#_1","title":"\u6982\u89c8","text":"<p>Datus Web chatbot \u63d0\u4f9b\u4e00\u4e2a\u6613\u7528\u7684\u7f51\u9875\u754c\u9762\uff0c\u7528\u4e8e\u4e0e Datus AI \u52a9\u624b\u4ea4\u4e92\u3002\u5b83\u57fa\u4e8e Streamlit \u6784\u5efa\uff0c\u9762\u5411\u81ea\u7136\u8bed\u8a00\u8f6c SQL \u7684\u573a\u666f\uff0c\u7528\u6237\u65e0\u9700\u638c\u63e1\u547d\u4ee4\u884c\u5373\u53ef\u5b8c\u6210\u5bf9\u8bdd\u5f0f\u5206\u6790\u3002</p>"},{"location":"zh/web_chatbot/introduction/#_2","title":"\u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/web_chatbot/introduction/#_3","title":"\u542f\u52a8\u7f51\u9875\u754c\u9762","text":"<p>\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\uff1a <pre><code>datus --web --namespace &lt;your_namespace&gt;\n</code></pre></p> <p>\u4f7f\u7528\u81ea\u5b9a\u4e49\u914d\u7f6e\uff1a <pre><code>datus --web --config path/to/agent.yml --namespace snowflake\n</code></pre></p> <p>\u81ea\u5b9a\u4e49\u7aef\u53e3\u4e0e\u4e3b\u673a\uff1a <pre><code>datus --web --port 8080 --host 0.0.0.0\n</code></pre></p> <p>\u6d4f\u89c8\u5668\u5c06\u81ea\u52a8\u6253\u5f00 <code>http://localhost:8501</code>\uff08\u6216\u4f60\u6307\u5b9a\u7684\u7aef\u53e3\uff09\u3002</p> <p></p>"},{"location":"zh/web_chatbot/introduction/#_4","title":"\u6838\u5fc3\u529f\u80fd","text":""},{"location":"zh/web_chatbot/introduction/#1","title":"1. \u4ea4\u4e92\u5f0f\u5bf9\u8bdd\u754c\u9762","text":"<p>\u81ea\u7136\u8bed\u8a00\u63d0\u95ee\uff1a</p> <p>\u76f4\u63a5\u8f93\u5165\u95ee\u9898\uff0cAI \u4f1a\u751f\u6210\u5e76\u6267\u884c SQL\u3002</p> <p>\u793a\u4f8b\uff1a <pre><code>Show me total revenue by product category for the last month\n</code></pre></p> <p>\u52a9\u624b\u5c06\u4f1a\uff1a</p> <ol> <li>\u7406\u89e3\u4f60\u7684\u95ee\u9898</li> <li>\u751f\u6210\u76f8\u5e94\u7684 SQL \u67e5\u8be2</li> <li>\u4ee5\u8bed\u6cd5\u9ad8\u4eae\u7684\u5f62\u5f0f\u5c55\u793a SQL</li> <li>\u7ed9\u51fa AI \u7684\u89e3\u91ca\u8bf4\u660e</li> </ol>"},{"location":"zh/web_chatbot/introduction/#2-subagent","title":"2. Subagent \u652f\u6301","text":"<p>\u5728\u7f51\u9875\u754c\u9762\u4e2d\u76f4\u63a5\u8bbf\u95ee\u9762\u5411\u4e0d\u540c\u4efb\u52a1\u7684\u4e13\u7528 subagent\u3002</p> <p>\u53ef\u7528 subagent\uff08\u5728\u53ef\u5c55\u5f00\u533a\u57df\u4e2d\u5c55\u793a\uff09\uff1a</p> <ul> <li><code>gen_semantic_model</code>\uff1a\u4ece\u6570\u636e\u5e93\u8868\u751f\u6210\u8bed\u4e49\u6a21\u578b</li> <li><code>gen_metrics</code>\uff1a\u5c06 SQL \u67e5\u8be2\u8f6c\u6362\u4e3a MetricFlow \u6307\u6807</li> <li><code>gen_sql_summary</code>\uff1a\u5206\u6790\u4e0e\u5206\u7c7b SQL \u67e5\u8be2</li> </ul> <p>\u4f7f\u7528\u65b9\u5f0f\uff1a</p> <ol> <li>\u5728\u4e3b\u9875\u70b9\u51fb \"\ud83d\udd27 Access Specialized Subagents\"</li> <li>\u9009\u62e9\u9700\u8981\u7684 subagent</li> <li>\u70b9\u51fb \"\ud83d\ude80 Use [subagent_name]\"</li> <li>\u4e0e\u4e13\u7528\u52a9\u624b\u5bf9\u8bdd</li> </ol> <p>\u76f4\u8fbe URL\uff1a</p> <p>\u4f60\u53ef\u4ee5\u6536\u85cf subagent \u7684 URL \u4fbf\u4e8e\u5feb\u901f\u8bbf\u95ee\uff1a</p> <pre><code>http://localhost:8501/?subagent=gen_metrics\nhttp://localhost:8501/?subagent=gen_semantic_model\n</code></pre>"},{"location":"zh/web_chatbot/introduction/#3","title":"3. \u4f1a\u8bdd\u7ba1\u7406","text":"<p>\u67e5\u770b\u4f1a\u8bdd\u5386\u53f2\uff1a</p> <p>\u4fa7\u8fb9\u680f\u663e\u793a\u6700\u8fd1\u7684\u4f1a\u8bdd\u4fe1\u606f\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u4f1a\u8bdd ID\uff08\u622a\u65ad\u663e\u793a\uff09</li> <li>\u521b\u5efa\u65f6\u95f4</li> <li>\u6d88\u606f\u6570\u91cf</li> <li>\u6700\u65b0\u7528\u6237\u6d88\u606f\u9884\u89c8</li> </ul> <p>\u52a0\u8f7d\u5386\u53f2\u4f1a\u8bdd\uff1a</p> <ol> <li>\u5728\u4fa7\u8fb9\u680f\u627e\u5230\u76ee\u6807\u4f1a\u8bdd</li> <li>\u70b9\u51fb \"\ud83d\udd17 Load Session\"</li> <li>\u4ee5\u53ea\u8bfb\u65b9\u5f0f\u67e5\u770b\u4f1a\u8bdd\u5185\u5bb9</li> </ol> <p>\u4f1a\u8bdd\u5206\u4eab\uff1a</p> <p>\u6bcf\u4e2a\u4f1a\u8bdd\u90fd\u6709\u552f\u4e00\u53ef\u5206\u4eab\u7684\u94fe\u63a5\uff1a</p> <pre><code>http://localhost:8501?session=abc123def456...\n</code></pre>"},{"location":"zh/web_chatbot/introduction/#4-success-story","title":"4. \u6210\u529f\u6848\u4f8b\u5f52\u6863\uff08Success Story\uff09","text":"<p>\u6807\u8bb0\u6709\u6548\u67e5\u8be2\uff1a</p> <p>\u5f53 AI \u751f\u6210\u7684 SQL \u5de5\u4f5c\u826f\u597d\u65f6\uff1a</p> <ol> <li>\u5148\u5ba1\u9605\u751f\u6210\u7684 SQL</li> <li>\u70b9\u51fb \"\ud83d\udc4d Success\" \u6309\u94ae</li> <li>\u67e5\u8be2\u4f1a\u4fdd\u5b58\u5230 <code>~/.datus/benchmark/[subagent]/success_story.csv</code></li> </ol> <p></p> <p>CSV \u683c\u5f0f\uff1a</p> <pre><code>session_link,session_id,subagent_name,user_message,sql,timestamp\nhttp://localhost:8501?session=...,abc123...,chatbot,\"Show revenue by category\",SELECT ...,2025-01-15 10:30:00\n</code></pre> <p>\u8fd9\u6709\u52a9\u4e8e\u6c89\u6dc0\u6709\u6548\u67e5\u8be2\u7528\u4e8e\u57fa\u51c6\u8bc4\u6d4b\u4e0e\u6301\u7eed\u6539\u8fdb\u3002</p>"},{"location":"zh/web_chatbot/introduction/#5-report-issues","title":"5. \u95ee\u9898\u53cd\u9988\uff08Report Issues\uff09","text":"<p>\u4fbf\u6377\u5206\u4eab\u95ee\u9898\uff1a</p> <ol> <li>\u5728\u4fa7\u8fb9\u680f\u70b9\u51fb \"\ud83d\udc1b Report Issue\"</li> <li>\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5c06\u4f1a\u8bdd\u94fe\u63a5\u590d\u5236\u5230\u526a\u8d34\u677f</li> <li>\u5c06\u94fe\u63a5\u7c98\u8d34\u7ed9\u5f00\u53d1\u8005\u5373\u53ef\u5b9a\u4f4d\u95ee\u9898</li> </ol> <p>\u4f1a\u8bdd\u94fe\u63a5\u5305\u542b\u5b8c\u6574\u7684\u5bf9\u8bdd\u4e0a\u4e0b\u6587\uff0c\u4fbf\u4e8e\u6392\u67e5\u4e0e\u590d\u73b0\u3002</p> <p></p>"},{"location":"zh/web_chatbot/introduction/#_5","title":"\u603b\u7ed3","text":"<p>Datus Web chatbot \u63d0\u4f9b\uff1a</p> <ul> <li>\u6613\u7528\u7684\u754c\u9762\uff1a\u65e0\u9700\u547d\u4ee4\u884c\u77e5\u8bc6</li> <li>Subagent \u76f4\u8fbe\uff1a\u6309\u4efb\u52a1\u542f\u7528\u4e13\u7528\u52a9\u624b</li> <li>\u4f1a\u8bdd\u7ba1\u7406\uff1a\u4fdd\u5b58\u3001\u52a0\u8f7d\u4e0e\u5206\u4eab\u5bf9\u8bdd</li> <li>\u6210\u529f\u5f52\u6863\uff1a\u6807\u8bb0\u5e76\u6536\u96c6\u6709\u6548\u67e5\u8be2</li> <li>\u4e00\u952e\u5206\u4eab\uff1a\u590d\u5236\u4f1a\u8bdd\u94fe\u63a5</li> <li>\u53ef\u89c6\u5316\u6267\u884c\uff1a\u9010\u6b65\u5c55\u793a SQL \u751f\u6210\u8fc7\u7a0b</li> <li>\u591a\u547d\u540d\u7a7a\u95f4\u652f\u6301\uff1a\u4fbf\u6377\u5207\u6362\u6570\u636e\u5e93</li> </ul>"},{"location":"zh/workflow/api/","title":"\u5de5\u4f5c\u6d41 API","text":""},{"location":"zh/workflow/api/#_1","title":"\u4ecb\u7ecd","text":"<p>Datus Agent Workflow API Service \u901a\u8fc7 REST \u63a5\u53e3\u5bf9\u5916\u63d0\u4f9b\u201c\u81ea\u7136\u8bed\u8a00 \u2192 SQL\u201d\u7684\u5de5\u4f5c\u6d41\u80fd\u529b\uff0c\u4fbf\u4e8e\u5c06\u667a\u80fd SQL \u751f\u6210\u3001\u6267\u884c\u4e0e\u5de5\u4f5c\u6d41\u7ba1\u7406\u96c6\u6210\u5230\u4f60\u7684\u5e94\u7528\u4e2d\u3002</p>"},{"location":"zh/workflow/api/#_2","title":"\u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/workflow/api/#_3","title":"\u542f\u52a8\u670d\u52a1","text":"<pre><code># \u542f\u52a8 API \u670d\u52a1\npython -m datus.api.server --host 0.0.0.0 --port 8000\n\n# \u591a\u8fdb\u7a0b\npython -m datus.api.server --workers 4 --port 8000\n\n# \u5b88\u62a4\u8fdb\u7a0b\uff08\u540e\u53f0\uff09\npython -m datus.api.server --daemon --port 8000\n</code></pre>"},{"location":"zh/workflow/api/#_4","title":"\u8ba4\u8bc1","text":""},{"location":"zh/workflow/api/#oauth2-client-credentials","title":"OAuth2 Client Credentials","text":"<p>API \u4f7f\u7528\u5ba2\u6237\u7aef\u51ed\u8bc1\u6a21\u5f0f\uff1a</p>"},{"location":"zh/workflow/api/#1-token","title":"1\uff09\u83b7\u53d6 Token","text":"<pre><code>curl -X POST \"http://localhost:8000/auth/token\" \\\n  -H \"Content-Type: application/x-www-form-urlencoded\" \\\n  -d \"client_id=your_client_id&amp;client_secret=your_client_secret&amp;grant_type=client_credentials\"\n</code></pre>"},{"location":"zh/workflow/api/#2-token","title":"2\uff09\u8c03\u7528\u65f6\u643a\u5e26 Token","text":"<pre><code>curl -X POST \"http://localhost:8000/workflows/run\" \\\n  -H \"Authorization: Bearer your_jwt_token\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"workflow\": \"fixed\", \"namespace\": \"your_db\", \"task\": \"Show me users\"}'\n</code></pre>"},{"location":"zh/workflow/api/#_5","title":"\u914d\u7f6e","text":"<p>\u521b\u5efa <code>auth_clients.yml</code>\uff1a <pre><code>clients:\n  your_client_id: your_client_secret\n  another_client: another_secret\n\njwt:\n  secret_key: your-jwt-secret-key-change-in-production\n  algorithm: HS256\n  expiration_hours: 2\n</code></pre></p>"},{"location":"zh/workflow/api/#_6","title":"\u63a5\u53e3","text":""},{"location":"zh/workflow/api/#_7","title":"\u8ba4\u8bc1","text":""},{"location":"zh/workflow/api/#post-authtoken","title":"POST /auth/token","text":"<p>\u83b7\u53d6 JWT \u8bbf\u95ee\u4ee4\u724c\u3002</p> <p>\u8bf7\u6c42\uff1a <pre><code>POST /auth/token\nContent-Type: application/x-www-form-urlencoded\n\nclient_id=your_client_id&amp;client_secret=your_client_secret&amp;grant_type=client_credentials\n</code></pre></p> <p>\u54cd\u5e94\uff1a <pre><code>{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 7200\n}\n</code></pre></p>"},{"location":"zh/workflow/api/#_8","title":"\u5de5\u4f5c\u6d41\u6267\u884c","text":""},{"location":"zh/workflow/api/#post-workflowsrun","title":"POST /workflows/run","text":"<p>\u6267\u884c\u5de5\u4f5c\u6d41\uff0c\u5c06\u81ea\u7136\u8bed\u8a00\u8f6c\u6362\u4e3a SQL\u3002</p> <p>\u901a\u7528\u8bf7\u6c42\u53c2\u6570\uff1a</p> \u53c2\u6570 \u7c7b\u578b \u5fc5\u586b \u8bf4\u660e <code>workflow</code> string \u2705 \u5de5\u4f5c\u6d41\u540d\u79f0\uff08nl2sql\u3001reflection\u3001fixed\u3001metric_to_sql\uff09 <code>namespace</code> string \u2705 \u6570\u636e\u5e93\u547d\u540d\u7a7a\u95f4 <code>task</code> string \u2705 \u81ea\u7136\u8bed\u8a00\u4efb\u52a1\u63cf\u8ff0 <code>mode</code> string \u2705 \u6267\u884c\u6a21\u5f0f\uff08sync \u6216 async\uff09 <code>task_id</code> string \u274c \u81ea\u5b9a\u4e49\u4efb\u52a1 ID\uff08\u5e42\u7b49\uff09 <code>catalog_name</code> string \u274c Catalog \u540d <code>database_name</code> string \u274c \u6570\u636e\u5e93\u540d <code>schema_name</code> string \u274c Schema \u540d <code>current_date</code> string \u274c \u65f6\u95f4\u8868\u8fbe\u57fa\u51c6\u65e5\u671f <code>domain</code> string \u274c \u4e1a\u52a1\u57df <code>layer1</code> string \u274c \u4e1a\u52a1\u5c42\u7ea7 1 <code>layer2</code> string \u274c \u4e1a\u52a1\u5c42\u7ea7 2 <code>ext_knowledge</code> string \u274c \u989d\u5916\u4e1a\u52a1\u4e0a\u4e0b\u6587"},{"location":"zh/workflow/api/#mode-sync","title":"\u540c\u6b65\u6a21\u5f0f\uff08mode: \"sync\"\uff09","text":"<p>\u8bf7\u6c42\u5934\uff1a <pre><code>Authorization: Bearer your_jwt_token\nContent-Type: application/json\n</code></pre></p> <p>\u8bf7\u6c42\u4f53\uff1a <pre><code>{\n  \"workflow\": \"nl2sql\",\n  \"namespace\": \"your_database_namespace\",\n  \"task\": \"Show me monthly revenue by product category\",\n  \"mode\": \"sync\",\n  \"catalog_name\": \"your_catalog\",\n  \"database_name\": \"your_database\"\n}\n</code></pre></p> <p>\u54cd\u5e94\uff1a <pre><code>{\n  \"task_id\": \"client_20240115143000\",\n  \"status\": \"completed\",\n  \"workflow\": \"nl2sql\",\n  \"sql\": \"SELECT DATE_TRUNC('month', order_date) as month, product_category, SUM(amount) as revenue FROM orders WHERE order_date &gt;= '2023-01-01' GROUP BY month, product_category ORDER BY month, revenue DESC\",\n  \"result\": [ ... ],\n  \"metadata\": {\n    \"execution_time\": 12.5,\n    \"nodes_executed\": 5,\n    \"reflection_rounds\": 0\n  },\n  \"error\": null,\n  \"execution_time\": 12.5\n}\n</code></pre></p>"},{"location":"zh/workflow/api/#mode-async","title":"\u5f02\u6b65\u6a21\u5f0f\uff08mode: \"async\"\uff09","text":"<p>\u8bf7\u6c42\u5934\uff1a <pre><code>Authorization: Bearer your_jwt_token\nContent-Type: application/json\nAccept: text/event-stream\nCache-Control: no-cache\n</code></pre></p> <p>\u8bf7\u6c42\u4f53\uff1a <pre><code>{\n  \"workflow\": \"nl2sql\",\n  \"namespace\": \"your_database_namespace\",\n  \"task\": \"Show me monthly revenue by product category\",\n  \"mode\": \"async\",\n  \"catalog_name\": \"your_catalog\",\n  \"database_name\": \"your_database\"\n}\n</code></pre></p> <p>\u54cd\u5e94\uff08SSE \u6d41\uff09\uff1a <pre><code>event: started\n:data: {\"task_id\": \"client_20240115143000\", \"workflow\": \"nl2sql\"}\n...\nevent: done\n:data: {\"task_id\": \"client_20240115143000\", \"status\": \"completed\", \"total_time\": 15.2}\n</code></pre></p>"},{"location":"zh/workflow/api/#_9","title":"\u53cd\u9988\u63d0\u4ea4","text":""},{"location":"zh/workflow/api/#post-workflowsfeedback","title":"POST /workflows/feedback","text":"<p>\u63d0\u4ea4\u5bf9\u672c\u6b21\u6267\u884c\u8d28\u91cf\u7684\u53cd\u9988\u3002</p> <p>\u8bf7\u6c42\uff1a <pre><code>{\n  \"task_id\": \"client_20240115143000\",\n  \"status\": \"success\"\n}\n</code></pre></p> <p>\u54cd\u5e94\uff1a <pre><code>{\n  \"task_id\": \"client_20240115143000\",\n  \"acknowledged\": true,\n  \"recorded_at\": \"2024-01-15T14:30:15Z\"\n}\n</code></pre></p>"},{"location":"zh/workflow/api/#_10","title":"\u5de5\u4f5c\u6d41\u7c7b\u578b","text":""},{"location":"zh/workflow/api/#reflection","title":"reflection","text":"<ul> <li>\u5177\u53cd\u601d\u4e0e\u7ea0\u9519\u80fd\u529b\uff1b\u53ef\u9002\u914d\u5e76\u91cd\u8bd5\uff1b\u9002\u5408\u590d\u6742\u6216\u4e0d\u786e\u5b9a\u95ee\u9898</li> </ul>"},{"location":"zh/workflow/api/#fixed","title":"fixed","text":"<ul> <li>\u786e\u5b9a\u6027\u8def\u5f84\uff1b\u65e0\u81ea\u9002\u5e94\uff1b\u9002\u5408\u660e\u786e\u9700\u6c42</li> </ul>"},{"location":"zh/workflow/api/#metric_to_sql","title":"metric_to_sql","text":"<ul> <li>\u57fa\u4e8e\u4e1a\u52a1\u6307\u6807\uff1b\u5305\u542b\u65f6\u95f4\u89e3\u6790\uff1b\u9002\u5408\u6807\u51c6\u5316 BI</li> </ul>"},{"location":"zh/workflow/api/#_11","title":"\u914d\u7f6e","text":""},{"location":"zh/workflow/api/#_12","title":"\u670d\u52a1\u914d\u7f6e","text":"<pre><code>python -m datus.api.server \\\n  --host 0.0.0.0 \\\n  --port 8000 \\\n  --workers 4 \\\n  --reload \\\n  --debug\n</code></pre>"},{"location":"zh/workflow/api/#_13","title":"\u670d\u52a1\u53c2\u6570","text":"\u53c2\u6570 \u8bf4\u660e \u9ed8\u8ba4 <code>--host</code> \u76d1\u542c\u5730\u5740 <code>127.0.0.1</code> <code>--port</code> \u7aef\u53e3 <code>8000</code> <code>--workers</code> \u8fdb\u7a0b\u6570 <code>1</code> <code>--reload</code> \u4ee3\u7801\u53d8\u66f4\u81ea\u52a8\u91cd\u8f7d <code>False</code> <code>--debug</code> \u8c03\u8bd5\u6a21\u5f0f <code>False</code> <code>--daemon</code> \u540e\u53f0\u8fd0\u884c <code>False</code>"},{"location":"zh/workflow/api/#_14","title":"\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/workflow/api/#_15","title":"\u5b89\u5168","text":"<ul> <li>\u751f\u4ea7\u73af\u5883\u52a1\u5fc5\u4f7f\u7528\u5f3a\u968f\u673a\u7684 JWT \u79d8\u94a5</li> <li>\u5b9a\u671f\u8f6e\u6362\u5ba2\u6237\u7aef\u51ed\u8bc1</li> <li>\u4e0a\u7ebf\u9650\u6d41\u7b56\u7565</li> <li>\u4f7f\u7528 HTTPS</li> </ul>"},{"location":"zh/workflow/api/#_16","title":"\u6027\u80fd","text":"<ul> <li>\u957f\u8017\u65f6\u4efb\u52a1\u5efa\u8bae\u7528\u5f02\u6b65\u6a21\u5f0f</li> <li>\u6839\u636e\u8d1f\u8f7d\u5408\u7406\u914d\u7f6e workers \u6570\u91cf</li> <li>\u591a\u8fdb\u7a0b\u65f6\u5173\u6ce8\u5185\u5b58\u5360\u7528</li> <li>\u540c\u6b65\u8bf7\u6c42\u5728\u5ba2\u6237\u7aef\u8bbe\u7f6e\u8d85\u65f6</li> </ul>"},{"location":"zh/workflow/api/#_17","title":"\u9519\u8bef\u5904\u7406","text":"<ul> <li>\u68c0\u67e5\u54cd\u5e94\u72b6\u6001\u7801</li> <li>\u5bf9\u77ac\u65f6\u5931\u8d25\u5b9e\u73b0\u91cd\u8bd5</li> <li>\u5f02\u6b65\u6d41\u6ce8\u610f\u65ad\u8fde\u91cd\u8fde</li> <li>\u8bb0\u5f55\u8be6\u7ec6\u9519\u8bef\u65e5\u5fd7</li> </ul>"},{"location":"zh/workflow/api/#_18","title":"\u7ed3\u8bed","text":"<p>Workflow API \u4e3a\u4f60\u7684\u5e94\u7528\u63d0\u4f9b\u5f3a\u5927\u4e14\u7075\u6d3b\u7684\u201c\u81ea\u7136\u8bed\u8a00 \u2192 SQL\u201d\u96c6\u6210\u80fd\u529b\uff0c\u652f\u6301\u591a\u79cd\u6267\u884c\u6a21\u5f0f\u3001\u5b9e\u65f6\u8fdb\u5ea6\u3001\u5b8c\u5584\u8ba4\u8bc1\uff0c\u52a9\u529b\u6784\u5efa\u667a\u80fd\u6570\u636e\u5206\u6790\u5e94\u7528\u3002</p>"},{"location":"zh/workflow/introduction/","title":"\u5de5\u4f5c\u6d41\u6982\u89c8","text":"<p>Datus Agent \u5de5\u4f5c\u6d41\u662f\u4e00\u4e2a\u5c06\u81ea\u7136\u8bed\u8a00\u95ee\u9898\u8f6c\u6362\u4e3a SQL \u5e76\u6267\u884c\u7684\u667a\u80fd\u7cfb\u7edf\u3002\u53ef\u628a\u5b83\u7c7b\u6bd4\u4e3a\u4e00\u4f4d\u61c2\u4e1a\u52a1\u7684\u6570\u636e\u5206\u6790\u5e08\uff1a\u7406\u89e3\u4f60\u7684\u610f\u56fe\uff0c\u81ea\u52a8\u751f\u6210\u5408\u9002\u7684 SQL\uff0c\u62ff\u56de\u7ed3\u679c\u3002</p>"},{"location":"zh/workflow/introduction/#_2","title":"\u5185\u7f6e\u5de5\u4f5c\u6d41","text":""},{"location":"zh/workflow/introduction/#1-fixed","title":"1. \u56fa\u5b9a\u5de5\u4f5c\u6d41\uff08Fixed\uff09","text":"<ul> <li>\u9002\u7528\u573a\u666f\uff1a\u7b80\u5355\u3001\u76f4\u7ed9\u7684\u95ee\u9898</li> <li>\u7279\u6027\uff1a\u6027\u80fd\u5feb\u3001\u8def\u5f84\u53ef\u9884\u671f</li> <li>\u793a\u4f8b\uff1a</li> <li>\u201c\u5217\u51fa\u52a0\u5dde\u7684\u6240\u6709\u5ba2\u6237\u201d</li> <li>\u201c\u5c55\u793a 2023 \u5e74\u603b\u9500\u552e\u989d\u201d</li> <li>\u7528\u9014\uff1a\u76f4\u63a5\u53d6\u6570\u3001\u7b80\u5355\u805a\u5408\u3001\u57fa\u7840\u8fc7\u6ee4</li> </ul>"},{"location":"zh/workflow/introduction/#2-reflection","title":"2. \u53cd\u601d\u5de5\u4f5c\u6d41\uff08Reflection\uff09","text":"<ul> <li>\u9002\u7528\u573a\u666f\uff1a\u590d\u6742\u4e1a\u52a1\u95ee\u9898</li> <li>\u7279\u6027\uff1a\u81ea\u68c0\u81ea\u7ea0\u3001\u53ef\u81ea\u52a8\u6539\u8fdb\u5e76\u91cd\u8bd5</li> <li>\u793a\u4f8b\uff1a</li> <li>\u201c\u6309\u54c1\u7c7b\u5c55\u793a\u5b63\u5ea6\u6536\u5165\u8d8b\u52bf\uff0c\u6392\u9664\u9000\u8d27\u5e76\u8003\u8651\u5b63\u8282\u6027\u8c03\u6574\u201d</li> <li>\u7528\u9014\uff1a\u591a\u6b65\u9aa4\u5206\u6790\u3001\u5bb9\u9519\u7ea0\u9519\u3001\u590d\u6742\u4e1a\u52a1\u903b\u8f91</li> </ul>"},{"location":"zh/workflow/introduction/#3-sqlmetric-to-sql","title":"3. \u6307\u6807\u5230 SQL\uff08Metric-to-SQL\uff09","text":"<ul> <li>\u9002\u7528\u573a\u666f\uff1a\u6807\u51c6\u5316\u7684\u4e1a\u52a1\u62a5\u8868</li> <li>\u7279\u6027\uff1a\u57fa\u4e8e\u9884\u5b9a\u4e49\u4e1a\u52a1\u6307\u6807\uff0c\u4fdd\u8bc1\u4e00\u81f4\u6027</li> <li>\u793a\u4f8b\uff1a</li> <li>\u201c\u5c55\u793a\u4e0a\u5b63\u5ea6 MAU\u201d</li> <li>\u201c\u8ba1\u7b97\u5ba2\u6237\u6d41\u5931\u7387\u201d</li> <li>\u7528\u9014\uff1aKPI \u62a5\u8868\u3001\u6807\u51c6\u5316\u6307\u6807\u3001BI \u573a\u666f</li> </ul>"},{"location":"zh/workflow/introduction/#nodes","title":"\u7ec4\u6210\uff1a\u8282\u70b9\uff08Nodes\uff09","text":"<p>\u5de5\u4f5c\u6d41\u7531\u82e5\u5e72\u4e13\u7528\u201c\u8282\u70b9\u201d\u7ec4\u6210\uff0c\u6bcf\u4e2a\u8282\u70b9\u805a\u7126\u4e00\u4ef6\u4e8b\uff1a</p> <ul> <li>Schema Linking\uff1a\u4e3a\u95ee\u9898\u627e\u5bf9\u8868</li> <li>Generate SQL\uff1a\u751f\u6210\u67e5\u8be2</li> <li>Execute SQL\uff1a\u6267\u884c\u67e5\u8be2</li> <li>Reflect\uff1a\u68c0\u67e5\u7ed3\u679c\u3001\u51b3\u5b9a\u662f\u5426\u6539\u8fdb</li> <li>Output\uff1a\u53cb\u597d\u5448\u73b0\u7ed3\u679c</li> </ul>"},{"location":"zh/workflow/introduction/#_3","title":"\u5feb\u901f\u4e0a\u624b","text":""},{"location":"zh/workflow/introduction/#_4","title":"\u547d\u4ee4\u884c","text":"<pre><code># \u7b80\u5355\u95ee\u9898\ndatus run --namespace your_db --task \"Show me monthly sales\"\n\n# \u6307\u5b9a\u5de5\u4f5c\u6d41\u7c7b\u578b\ndatus run --namespace your_db --task \"Show me complex revenue trends\" --plan reflection\n\n# \u4f7f\u7528\u4e1a\u52a1\u6307\u6807\ndatus run --namespace your_db --task \"Calculate customer lifetime value\" --plan metric_to_sql\n</code></pre>"},{"location":"zh/workflow/introduction/#api","title":"\u901a\u8fc7 API","text":"<pre><code>import requests\n\nresponse = requests.post(\n    \"http://localhost:8000/workflows/run\",\n    headers={\"Authorization\": \"Bearer your_token\"},\n    json={\n        \"workflow\": \"reflection\",\n        \"namespace\": \"your_db\",\n        \"task\": \"Show me quarterly revenue trends\",\n        \"mode\": \"sync\"\n    }\n)\n\nresult = response.json()\nprint(result[\"sql\"])    # \u751f\u6210\u7684 SQL\nprint(result[\"result\"]) # \u67e5\u8be2\u7ed3\u679c\n</code></pre>"},{"location":"zh/workflow/introduction/#_5","title":"\u4e0b\u4e00\u6b65","text":"<ul> <li>\u4e86\u89e3\u5de5\u4f5c\u6d41\u7f16\u6392\u7684\u6267\u884c\u65b9\u5f0f</li> <li>\u67e5\u770bAPI \u6587\u6863\u4ee5\u4fbf\u7a0b\u5e8f\u5316\u8c03\u7528</li> <li>\u6df1\u5165\u8282\u70b9\u8bf4\u660e\u7406\u89e3\u5404\u7ec4\u4ef6\u804c\u8d23</li> </ul>"},{"location":"zh/workflow/nodes/","title":"\u5de5\u4f5c\u6d41\u8282\u70b9","text":"<p>\u8282\u70b9\u662f Datus Agent \u5de5\u4f5c\u6d41\u7cfb\u7edf\u7684\u57fa\u672c\u6784\u4ef6\u3002\u6bcf\u4e2a\u8282\u70b9\u5728\u201c\u7406\u89e3\u7528\u6237\u8bf7\u6c42 \u2192 \u751f\u6210 SQL \u2192 \u6267\u884c \u2192 \u8fd4\u56de\u7ed3\u679c\u201d\u7684\u6d41\u7a0b\u4e2d\u5b8c\u6210\u4e00\u9879\u660e\u786e\u804c\u8d23\u3002\u672c\u6587\u4ecb\u7ecd\u8282\u70b9\u7c7b\u578b\u3001\u7528\u9014\uff0c\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u5728\u5de5\u4f5c\u6d41\u4e2d\u534f\u540c\u3002</p>"},{"location":"zh/workflow/nodes/#_2","title":"\u8282\u70b9\u5206\u7c7b","text":""},{"location":"zh/workflow/nodes/#1-control-nodes","title":"1. \u63a7\u5236\u7c7b\u8282\u70b9\uff08Control Nodes\uff09","text":""},{"location":"zh/workflow/nodes/#reflect","title":"Reflect\uff08\u53cd\u601d\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u8bc4\u4f30\u7ed3\u679c\u5e76\u51b3\u5b9a\u4e0b\u4e00\u6b65</li> <li>\u8981\u70b9\uff1a\u81ea\u9002\u5e94 SQL \u751f\u6210\u7684\u6838\u5fc3\u667a\u80fd</li> <li>\u5e38\u89c1\u7b56\u7565\uff1a</li> <li>\u7b80\u5355\u518d\u751f\u6210\uff08\u91cd\u8bd5\u751f\u6210 SQL\uff09</li> <li>\u6587\u6863\u68c0\u7d22\uff08\u67e5\u627e\u76f8\u5173\u6587\u6863\uff09</li> <li>\u7ed3\u6784\u518d\u5206\u6790\uff08\u91cd\u65b0\u5ba1\u89c6\u5e93\u8868\u7ed3\u6784\uff09</li> <li>\u6df1\u5ea6\u63a8\u7406\u5206\u6790</li> </ul>"},{"location":"zh/workflow/nodes/#parallel","title":"Parallel\uff08\u5e76\u884c\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u5e76\u884c\u6267\u884c\u591a\u4e2a\u5b50\u8282\u70b9</li> <li>\u573a\u666f\uff1a\u5bf9\u6bd4\u591a\u79cd SQL \u751f\u6210\u7b56\u7565</li> </ul>"},{"location":"zh/workflow/nodes/#selection","title":"Selection\uff08\u9009\u62e9\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u4ece\u591a\u4e2a\u5019\u9009\u4e2d\u9009\u4f18</li> <li>\u573a\u666f\uff1a\u5728\u591a\u6761\u5019\u9009 SQL \u4e2d\u9009\u62e9\u6700\u4f73</li> </ul>"},{"location":"zh/workflow/nodes/#subworkflow","title":"Subworkflow\uff08\u5b50\u5de5\u4f5c\u6d41\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u6267\u884c\u5d4c\u5957\u5de5\u4f5c\u6d41</li> <li>\u573a\u666f\uff1a\u590d\u7528\u590d\u6742\u6d41\u7a0b\u3001\u6a21\u5757\u5316\u7ec4\u5408</li> </ul>"},{"location":"zh/workflow/nodes/#2-action-nodes","title":"2. \u52a8\u4f5c\u7c7b\u8282\u70b9\uff08Action Nodes\uff09","text":""},{"location":"zh/workflow/nodes/#schema-linking","title":"Schema Linking\uff08\u7ed3\u6784\u5173\u8054\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u7406\u89e3\u7528\u6237\u95ee\u9898\u5e76\u5b9a\u4f4d\u76f8\u5173\u6570\u636e\u8868</li> <li>\u5173\u952e\u6d3b\u52a8\uff1a</li> <li>\u89e3\u6790\u81ea\u7136\u8bed\u8a00\u610f\u56fe</li> <li>\u5728\u77e5\u8bc6\u5e93\u4e2d\u641c\u7d22\u76f8\u5173\u8868</li> <li>\u63d0\u53d6\u8868\u7ed3\u6784\u4e0e\u6837\u4f8b\u6570\u636e</li> <li>\u5c06\u7ed3\u6784\u4fe1\u606f\u5199\u5165\u4e0a\u4e0b\u6587</li> <li>\u8f93\u51fa\uff1a\u76f8\u5173\u8868\u7ed3\u6784\u4e0e\u6837\u4f8b\u6570\u636e\u5217\u8868</li> </ul>"},{"location":"zh/workflow/nodes/#generate-sql-sql","title":"Generate SQL\uff08\u751f\u6210 SQL\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u57fa\u4e8e\u9700\u6c42\u751f\u6210\u67e5\u8be2</li> <li>\u8981\u70b9\uff1a</li> <li>\u5229\u7528\u5927\u6a21\u578b\u7406\u89e3\u4e1a\u52a1\u9700\u6c42</li> <li>\u590d\u7528\u5386\u53f2 SQL \u6a21\u5f0f</li> <li>\u53ef\u878d\u5408\u4e1a\u52a1\u6307\u6807</li> <li>\u5904\u7406\u590d\u6742\u903b\u8f91</li> <li>\u8f93\u51fa\uff1aSQL \u53ca\u6267\u884c\u8ba1\u5212</li> </ul>"},{"location":"zh/workflow/nodes/#execute-sql-sql","title":"Execute SQL\uff08\u6267\u884c SQL\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u5728\u6570\u636e\u5e93\u4e2d\u6267\u884c\u67e5\u8be2</li> <li>\u5173\u952e\u6d3b\u52a8\uff1a</li> <li>\u8fde\u63a5\u76ee\u6807\u5e93</li> <li>\u5b89\u5168\u6267\u884c\u5e76\u5904\u7406\u9519\u8bef</li> <li>\u8fd4\u56de\u7ed3\u679c\u6216\u9519\u8bef\u4fe1\u606f</li> <li>\u66f4\u65b0\u6267\u884c\u4e0a\u4e0b\u6587</li> <li>\u8f93\u51fa\uff1a\u7ed3\u679c\u3001\u8017\u65f6\u3001\u9519\u8bef\u4fe1\u606f</li> </ul>"},{"location":"zh/workflow/nodes/#output","title":"Output\uff08\u8f93\u51fa\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u6700\u7ec8\u7ed3\u679c\u5448\u73b0</li> <li>\u7279\u6027\uff1a</li> <li>\u7ed3\u679c\u683c\u5f0f\u5316\u4e0e\u5c55\u793a</li> <li>\u6e05\u6670\u7684\u62a5\u9519\u63d0\u793a</li> <li>\u6027\u80fd\u6307\u6807\u5c55\u793a</li> <li>\u8f93\u51fa\uff1a\u53ef\u8bfb\u6027\u597d\u7684\u7ed3\u679c</li> </ul>"},{"location":"zh/workflow/nodes/#reasoning","title":"Reasoning\uff08\u63a8\u7406\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u63d0\u4f9b\u6df1\u5165\u5206\u6790\u4e0e\u89e3\u91ca</li> <li>\u573a\u666f\uff1a\u590d\u6742\u4e1a\u52a1\u903b\u8f91\u7684\u8bf4\u660e\u4e0e\u6821\u9a8c</li> </ul>"},{"location":"zh/workflow/nodes/#fix","title":"Fix\uff08\u4fee\u590d\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u4fee\u6b63\u5b58\u5728\u95ee\u9898\u7684 SQL</li> <li>\u8981\u70b9\uff1a</li> <li>\u9519\u8bef\u6a21\u5f0f\u8bc6\u522b</li> <li>\u81ea\u52a8\u4fee\u6b63</li> <li>\u4fee\u6b63\u540e\u9a8c\u8bc1</li> <li>\u573a\u666f\uff1a\u81ea\u52a8\u5904\u7406\u5931\u8d25\u7684 SQL</li> </ul>"},{"location":"zh/workflow/nodes/#generate-metrics","title":"Generate Metrics\uff08\u751f\u6210\u6307\u6807\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u4ece SQL \u4e2d\u62bd\u53d6\u4e1a\u52a1\u6307\u6807</li> <li>\u5173\u952e\u6d3b\u52a8\uff1a\u5206\u6790\u67e5\u8be2 \u2192 \u8bc6\u522b\u6307\u6807 \u2192 \u751f\u6210\u5b9a\u4e49 \u2192 \u5165\u5e93</li> <li>\u8f93\u51fa\uff1a\u6307\u6807\u5b9a\u4e49\u53ca\u8ba1\u7b97\u65b9\u5f0f</li> </ul>"},{"location":"zh/workflow/nodes/#generate-semantic-model","title":"Generate Semantic Model\uff08\u751f\u6210\u8bed\u4e49\u6a21\u578b\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u4e3a\u6570\u636e\u8868\u521b\u5efa\u8bed\u4e49\u6a21\u578b</li> <li>\u8981\u70b9\uff1a\u8bc6\u522b\u7ef4\u5ea6\u4e0e\u5ea6\u91cf\u3001\u5b9a\u4e49\u8868\u8bed\u4e49\u3001\u751f\u6210\u53ef\u590d\u7528\u6a21\u578b</li> <li>\u8f93\u51fa\uff1a\u9762\u5411 BI \u7684\u8bed\u4e49\u6a21\u578b\u5b9a\u4e49</li> </ul>"},{"location":"zh/workflow/nodes/#search-metrics","title":"Search Metrics\uff08\u641c\u7d22\u6307\u6807\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u67e5\u627e\u76f8\u5173\u4e1a\u52a1\u6307\u6807</li> <li>\u573a\u666f\uff1a\u590d\u7528\u65e2\u6709\u53e3\u5f84\uff0c\u786e\u4fdd\u4e00\u81f4\u6027</li> </ul>"},{"location":"zh/workflow/nodes/#compare","title":"Compare\uff08\u5bf9\u6bd4\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u5c06 SQL \u7ed3\u679c\u4e0e\u9884\u671f\u5bf9\u6bd4</li> <li>\u573a\u666f\uff1a\u6d4b\u8bd5\u3001\u9a8c\u8bc1\u4e0e\u8d28\u68c0</li> </ul>"},{"location":"zh/workflow/nodes/#date-parser","title":"Date Parser\uff08\u65f6\u95f4\u89e3\u6790\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u89e3\u6790\u65f6\u95f4\u8868\u8fbe</li> <li>\u793a\u4f8b\uff1a</li> <li>\u201clast month\u201d \u2192 \u5177\u4f53\u65e5\u671f\u8303\u56f4</li> <li>\u201cQ3 2023\u201d \u2192 \u5b63\u5ea6\u8fb9\u754c</li> <li>\u201cpast 7 days\u201d \u2192 \u6eda\u52a8\u7a97\u53e3</li> </ul>"},{"location":"zh/workflow/nodes/#document-search","title":"Document Search\uff08\u6587\u6863\u68c0\u7d22\uff09","text":"<ul> <li>\u7528\u9014\uff1a\u67e5\u627e\u76f8\u5173\u6587\u6863\u4e0e\u4e0a\u4e0b\u6587</li> <li>\u573a\u666f\uff1a\u4e3a\u590d\u6742\u95ee\u9898\u8865\u5145\u9886\u57df\u77e5\u8bc6</li> </ul>"},{"location":"zh/workflow/nodes/#3-agentic","title":"3. Agentic \u7c7b\u8282\u70b9","text":"<p>\u5177\u5907\u5bf9\u8bdd\u5f0f\u4e0e\u81ea\u9002\u5e94\u80fd\u529b\u7684\u9ad8\u9636 AI \u8282\u70b9\u3002</p>"},{"location":"zh/workflow/nodes/#chat-agentic","title":"Chat Agentic","text":"<ul> <li>\u7528\u9014\uff1a\u5177\u5de5\u5177\u8c03\u7528\u80fd\u529b\u7684\u5bf9\u8bdd\u5f0f\u4ea4\u4e92</li> <li>\u8981\u70b9\uff1a</li> <li>\u591a\u8f6e\u5bf9\u8bdd</li> <li>\u5de5\u5177\u8c03\u7528</li> <li>\u4e0a\u4e0b\u6587\u4fdd\u6301</li> <li>\u81ea\u9002\u5e94\u56de\u590d</li> <li>\u573a\u666f\uff1a\u4ea4\u4e92\u5f0f SQL \u751f\u6210\u4e0e\u8fed\u4ee3</li> </ul>"},{"location":"zh/workflow/nodes/#_3","title":"\u5b9e\u73b0\u8981\u70b9","text":""},{"location":"zh/workflow/nodes/#_4","title":"\u8f93\u5165/\u8f93\u51fa\u7ed3\u6784","text":"<pre><code>class BaseNode:\n    def setup_input(self, context: Context) -&gt; NodeInput\n    def run(self, input: NodeInput) -&gt; NodeOutput\n    def update_context(self, context: Context, output: NodeOutput) -&gt; Context\n</code></pre>"},{"location":"zh/workflow/nodes/#_5","title":"\u4e0a\u4e0b\u6587\u7ba1\u7406","text":"<pre><code>class Context:\n    sql_contexts: List[SQLContext]\n    table_schemas: List[TableSchema]\n    metrics: List[BusinessMetric]\n    reflections: List[Reflection]\n    documents: List[Document]\n</code></pre>"},{"location":"zh/workflow/nodes/#_6","title":"\u9519\u8bef\u5904\u7406","text":"<ul> <li>\u8f93\u5165\u6821\u9a8c\uff1a\u5fc5\u586b\u53c2\u6570\u4e0e\u4e0a\u4e0b\u6587\u68c0\u67e5</li> <li>\u6267\u884c\u5b89\u5168\uff1a\u5904\u7406\u6570\u636e\u5e93\u9519\u8bef\u4e0e\u8d85\u65f6</li> <li>\u8f93\u51fa\u6821\u9a8c\uff1a\u786e\u4fdd\u8f93\u51fa\u683c\u5f0f\u6b63\u786e</li> <li>\u6062\u590d\u673a\u5236\uff1a\u81ea\u52a8\u91cd\u8bd5\u4e0e\u964d\u7ea7\u7b56\u7565</li> </ul>"},{"location":"zh/workflow/nodes/#_7","title":"\u8282\u70b9\u914d\u7f6e","text":""},{"location":"zh/workflow/nodes/#_8","title":"\u6a21\u578b\u5206\u914d","text":"<pre><code>nodes:\n  schema_linking:\n    model: \"claude-3-sonnet\"\n    temperature: 0.1\n  generate_sql:\n    model: \"gpt-4\"\n    temperature: 0.2\n  reasoning:\n    model: \"claude-3-opus\"\n    temperature: 0.3\n</code></pre>"},{"location":"zh/workflow/nodes/#_9","title":"\u63d0\u793a\u6a21\u677f","text":"<pre><code>nodes:\n  generate_sql:\n    prompt_template: \"generate_sql_system.j2\"\n    user_template: \"generate_sql_user.j2\"\n</code></pre>"},{"location":"zh/workflow/nodes/#_10","title":"\u8d44\u6e90\u9650\u5236","text":"<pre><code>nodes:\n  execute_sql:\n    timeout: 30\n    max_rows: 10000\n    memory_limit: \"1GB\"\n</code></pre>"},{"location":"zh/workflow/nodes/#_11","title":"\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/workflow/nodes/#_12","title":"\u9009\u62e9\u4e0e\u7ec4\u5408","text":"<ol> <li>\u5148\u505a Schema Linking\uff0c\u8865\u8db3\u4e0a\u4e0b\u6587</li> <li>\u590d\u6742\u573a\u666f\u7ed3\u5408 Reasoning \u4e0e Generate SQL</li> <li>\u5f15\u5165 Reflect \u63d0\u5347\u7a33\u5065\u6027</li> <li>\u7528 Parallel \u6bd4\u8f83\u591a\u79cd\u7b56\u7565</li> </ol>"},{"location":"zh/workflow/nodes/#_13","title":"\u6027\u80fd\u4f18\u5316","text":"<ul> <li>\u7f13\u5b58\u8868\u7ed3\u6784\uff0c\u8de8\u5de5\u4f5c\u6d41\u590d\u7528</li> <li>\u4f9d\u636e\u590d\u6742\u5ea6\u9009\u6a21\u578b\u89c4\u6a21</li> <li>\u63a7\u5236 SQL \u8fd4\u56de\u91cf</li> <li>\u76d1\u63a7\u957f\u4efb\u52a1\u7684\u8d44\u6e90\u5360\u7528</li> </ul>"},{"location":"zh/workflow/nodes/#_14","title":"\u6545\u969c\u6062\u590d","text":"<ul> <li>\u9010\u6b65\u964d\u7ea7\uff0c\u5c3d\u91cf\u7ed9\u51fa\u90e8\u5206\u6709\u7528\u7ed3\u679c</li> <li>\u77ac\u65f6\u5931\u8d25\u81ea\u52a8\u91cd\u8bd5</li> <li>\u9762\u5411\u7528\u6237\u7ed9\u51fa\u53ef\u64cd\u4f5c\u7684\u9519\u8bef\u4fe1\u606f</li> <li>\u8bb0\u5f55\u8be6\u5c3d\u65e5\u5fd7\u4ee5\u4fbf\u6392\u9519</li> </ul>"},{"location":"zh/workflow/nodes/#_15","title":"\u8fdb\u9636\u7528\u6cd5","text":""},{"location":"zh/workflow/nodes/#_16","title":"\u81ea\u5b9a\u4e49\u8282\u70b9","text":"<pre><code>class CustomValidationNode(BaseNode):\n    def run(self, input: ValidationInput) -&gt; ValidationOutput:\n        return ValidationOutput(is_valid=True, message=\"Validation passed\")\n</code></pre>"},{"location":"zh/workflow/nodes/#_17","title":"\u52a8\u6001\u5de5\u4f5c\u6d41","text":"<pre><code># \u5728\u53cd\u601d\u8282\u70b9\u4e2d\nif complexity_score &gt; threshold:\n    workflow.add_node(\"reasoning\", after=\"current\")\n\nif needs_validation:\n    workflow.add_node(\"compare\", before=\"output\")\n</code></pre>"},{"location":"zh/workflow/nodes/#_18","title":"\u7ec4\u5408\u793a\u4f8b","text":"<pre><code># \u5e76\u884c\u591a\u79cd SQL \u751f\u6210\u7b56\u7565\nparallel_node = ParallelNode([\n    GenerateSQLNode(strategy=\"conservative\"),\n    GenerateSQLNode(strategy=\"aggressive\"),\n    GenerateSQLNode(strategy=\"metric_based\")\n])\n\n# \u9009\u62e9\u6700\u4f18\u7ed3\u679c\nselection_node = SelectionNode(criteria=\"accuracy\")\n</code></pre>"},{"location":"zh/workflow/nodes/#_19","title":"\u7ed3\u8bed","text":"<p>\u8282\u70b9\u662f\u8ba9 Datus Agent \u5de5\u4f5c\u6d41\u65e2\u9ad8\u6548\u53c8\u667a\u80fd\u7684\u6a21\u5757\u5316\u57fa\u77f3\u3002\u7406\u89e3\u5404\u8282\u70b9\u804c\u8d23\u53ca\u5176\u534f\u4f5c\u65b9\u5f0f\uff0c\u6709\u52a9\u4e8e\u6784\u5efa\u80fd\u591f\u9002\u5e94\u590d\u6742\u9700\u6c42\u3001\u5e76\u6301\u7eed\u4ea7\u51fa\u9ad8\u8d28\u91cf\u7ed3\u679c\u7684 SQL \u751f\u6210\u5de5\u4f5c\u6d41\u3002</p>"},{"location":"zh/workflow/orchestration/","title":"\u5de5\u4f5c\u6d41\u7f16\u6392","text":"<p>\u5728 Datus Agent \u4e2d\uff0c\u5de5\u4f5c\u6d41\u7f16\u6392\u7528\u4e8e\u5b9a\u4e49\u3001\u7ba1\u7406\u5e76\u6267\u884c\u4e00\u7ec4\u8282\u70b9\u4ee5\u5b8c\u6210\u6570\u636e\u5206\u6790\u4efb\u52a1\u3002\u672c\u6587\u4ecb\u7ecd\u5de5\u4f5c\u6d41\u7684\u7ed3\u6784\u3001\u914d\u7f6e\u4e0e\u6267\u884c\u65b9\u5f0f\uff0c\u5e2e\u52a9\u4f60\u628a\u81ea\u7136\u8bed\u8a00\u8bf7\u6c42\u81ea\u52a8\u8f6c\u6362\u4e3a SQL \u4e0e\u7ed3\u679c\u3002</p>"},{"location":"zh/workflow/orchestration/#_2","title":"\u6838\u5fc3\u6982\u5ff5","text":""},{"location":"zh/workflow/orchestration/#1","title":"1. \u5de5\u4f5c\u6d41\u5b9a\u4e49","text":"<p>\u5de5\u4f5c\u6d41\u662f\u4e00\u7ec4\u6309\u5e8f\u6267\u884c\u7684\u8282\u70b9\uff1a</p> <ul> <li>\u76ee\u6807\u660e\u786e\uff1a\u6bcf\u4e2a\u5de5\u4f5c\u6d41\u89e3\u51b3\u67d0\u7c7b\u95ee\u9898</li> <li>\u987a\u5e8f\u6e05\u6670\uff1a\u8282\u70b9\u6309\u9884\u8bbe\u987a\u5e8f\u6267\u884c</li> <li>\u6570\u636e\u5171\u4eab\uff1a\u901a\u8fc7\u5171\u4eab\u4e0a\u4e0b\u6587\u5728\u8282\u70b9\u4e4b\u95f4\u4f20\u9012\u4fe1\u606f</li> <li>\u53ef\u81ea\u9002\u5e94\uff1a\u90e8\u5206\u5de5\u4f5c\u6d41\u80fd\u5728\u8fd0\u884c\u65f6\u81ea\u6211\u8c03\u6574</li> </ul>"},{"location":"zh/workflow/orchestration/#2","title":"2. \u5de5\u4f5c\u6d41\u914d\u7f6e","text":"<p>Datus \u63d0\u4f9b\u591a\u79cd\u5185\u7f6e\u5de5\u4f5c\u6d41\u6a21\u677f\uff1a</p> <pre><code>workflow:\n  reflection:\n    - schema_linking\n    - generate_sql\n    - execute_sql\n    - reflect\n    - output\n\n  fixed:\n    - schema_linking\n    - generate_sql\n    - execute_sql\n    - output\n\n  metric_to_sql:\n    - schema_linking\n    - search_metrics\n    - date_parser\n    - generate_sql\n    - execute_sql\n    - output\n</code></pre> <p>\u8bf4\u660e\uff1a\u4ee5\u4e0a\u4e3a\u5185\u7f6e\u6a21\u677f\u3002\u8981\u81ea\u5b9a\u4e49\u6216\u65b0\u589e\u5de5\u4f5c\u6d41\uff0c\u8bf7\u5728 <code>agent.yml</code> \u914d\u7f6e\uff08\u89c1\u4e0b\u6587\u201c\u81ea\u5b9a\u4e49\u5de5\u4f5c\u6d41\u201d\uff09\u3002</p>"},{"location":"zh/workflow/orchestration/#_3","title":"\u5185\u7f6e\u5de5\u4f5c\u6d41\u7c7b\u578b","text":""},{"location":"zh/workflow/orchestration/#1-reflection","title":"1. Reflection\uff08\u53cd\u601d\uff09","text":"<p>\u76ee\u7684\uff1a\u5177\u81ea\u6211\u6539\u8fdb\u80fd\u529b\u7684\u667a\u80fd SQL \u751f\u6210</p> <p>\u8282\u70b9\u5e8f\u5217\uff1a <pre><code>Schema Linking \u2192 Generate SQL \u2192 Execute SQL \u2192 Reflect \u2192 Output\n</code></pre></p> <p>\u7279\u6027\uff1a - \u81ea\u6211\u8bc4\u4f30\uff1a\u53cd\u601d\u8282\u70b9\u6839\u636e\u7ed3\u679c\u51b3\u5b9a\u540e\u7eed\u52a8\u4f5c - \u81ea\u9002\u5e94\uff1a\u53ef\u6309\u9700\u8981\u52a8\u6001\u52a0\u5165\u8282\u70b9 - \u7a33\u5065\uff1a\u9002\u914d\u9700\u8981\u591a\u6b21\u5c1d\u8bd5\u7684\u590d\u6742\u67e5\u8be2</p> <p>\u9002\u7528\uff1a\u590d\u6742\u4e1a\u52a1\u67e5\u8be2\u3001\u9996\u6b21 SQL \u96be\u4ee5\u4e00\u6b21\u5230\u4f4d\u3001\u9700\u8981\u9886\u57df\u77e5\u8bc6\u7684\u573a\u666f</p> <p>\u793a\u4f8b\uff1a <pre><code>User: \"Show me quarterly revenue trends by product category, excluding returns and considering seasonal adjustments\"\nProcess:\n1. Schema Linking\uff1a\u5b9a\u4f4d orders/products/categories\n2. Generate SQL\uff1a\u751f\u6210\u5b63\u5ea6\u6536\u5165\u521d\u7248\n3. Execute SQL\uff1a\u6267\u884c\n4. Reflect\uff1a\u53d1\u73b0\u7f3a\u5c11\u5b63\u8282\u6027\u8c03\u6574\n5. Add Fix\uff1a\u8865\u5145\u5b63\u8282\u6027\u8ba1\u7b97\n6. Output\uff1a\u8fd4\u56de\u4fee\u6b63\u540e\u7684\u7ed3\u679c\n</code></pre></p>"},{"location":"zh/workflow/orchestration/#2-fixed","title":"2. Fixed\uff08\u56fa\u5b9a\uff09","text":"<p>\u76ee\u7684\uff1a\u786e\u5b9a\u6027\u8def\u5f84\u3001\u53ef\u9884\u671f\u7684 SQL \u751f\u6210</p> <p>\u8282\u70b9\u5e8f\u5217\uff1a <pre><code>Schema Linking \u2192 Generate SQL \u2192 Execute SQL \u2192 Output\n</code></pre></p> <p>\u7279\u6027\uff1a - \u53ef\u9884\u671f\uff1a\u59cb\u7ec8\u9075\u5faa\u540c\u4e00\u6267\u884c\u8def\u5f84 - \u5feb\u901f\uff1a\u65e0\u53cd\u601d\u5f00\u9500 - \u7b80\u5355\uff1a\u6613\u7406\u89e3\u3001\u6613\u6392\u9519 - \u53ef\u9760\uff1a\u9002\u5408\u660e\u786e\u95ee\u9898</p> <p>\u9002\u7528\uff1a\u7b80\u5355\u67e5\u8be2\u3001\u9700\u6c42\u660e\u786e\u3001\u6027\u80fd\u654f\u611f</p> <p>\u793a\u4f8b\uff1a <pre><code>User: \"List all customers from California\"\nProcess:\n1. Schema Linking\uff1a\u5b9a\u4f4d customers\uff08\u542b state\uff09\n2. Generate SQL\uff1aSELECT * FROM customers WHERE state = 'CA'\n3. Execute SQL\uff1a\u8fd4\u56de\u7ed3\u679c\n4. Output\uff1a\u5c55\u793a\n</code></pre></p>"},{"location":"zh/workflow/orchestration/#3-metric-to-sql-sql","title":"3. Metric-to-SQL\uff08\u6307\u6807\u5230 SQL\uff09","text":"<p>\u76ee\u7684\uff1a\u4ece\u4e1a\u52a1\u6307\u6807\u751f\u6210 SQL</p> <p>\u8282\u70b9\u5e8f\u5217\uff1a <pre><code>Schema Linking \u2192 Search Metrics \u2192 Date Parser \u2192 Generate SQL \u2192 Execute SQL \u2192 Output\n</code></pre></p> <p>\u7279\u6027\uff1a - \u6307\u6807\u9a71\u52a8\uff1a\u4ee5\u4e1a\u52a1\u6307\u6807\u4e3a\u8d77\u70b9 - \u65f6\u95f4\u611f\u77e5\uff1a\u5305\u542b\u65f6\u95f4\u89e3\u6790 - \u53ef\u590d\u7528\uff1a\u590d\u7528\u65e2\u6709\u6307\u6807\u5b9a\u4e49 - \u6807\u51c6\u5316\uff1a\u4fdd\u8bc1\u53e3\u5f84\u4e00\u81f4</p> <p>\u9002\u7528\uff1aBI/\u62a5\u8868\u3001\u6807\u51c6 KPI\u3001\u65f6\u5e8f\u5206\u6790\u3001\u770b\u677f\u4e0e\u4f8b\u884c\u62a5\u544a</p> <p>\u793a\u4f8b\uff1a <pre><code>User: \"Show monthly active users for the last quarter\"\nProcess:\n1. Schema Linking\uff1a\u5b9a\u4f4d user_activity\n2. Search Metrics\uff1a\u627e\u5230 monthly_active_users \u5b9a\u4e49\n3. Date Parser\uff1a\u89e3\u6790\u201clast quarter\u201d\u8303\u56f4\n4. Generate SQL\uff1a\u6309\u6307\u6807\u53e3\u5f84\u751f\u6210\u67e5\u8be2\n5. Execute SQL\uff1a\u6267\u884c\n6. Output\uff1a\u5c55\u793a\u5206\u6708 MAU\n</code></pre></p>"},{"location":"zh/workflow/orchestration/#_4","title":"\u5de5\u4f5c\u6d41\u914d\u7f6e","text":""},{"location":"zh/workflow/orchestration/#_5","title":"\u81ea\u5b9a\u4e49\u5de5\u4f5c\u6d41","text":"<p>\u5728 <code>agent.yml</code> \u4e2d\u65b0\u589e\u6a21\u677f\uff1a <pre><code>agent:\n  workflow:\n    plan: custom_analytics\n\n    custom_analytics:\n      - schema_linking\n      - search_metrics\n      - generate_sql\n      - execute_sql\n      - compare\n      - output\n\n    data_exploration:\n      - schema_linking\n      - doc_search\n      - generate_sql\n      - execute_sql\n      - reflect\n      - output\n</code></pre></p>"},{"location":"zh/workflow/orchestration/#_6","title":"\u9ad8\u7ea7\u7279\u6027","text":""},{"location":"zh/workflow/orchestration/#_7","title":"\u5e76\u884c\u6267\u884c","text":"<pre><code>agent:\n  workflow:\n    plan: bird_para\n\n    bird_para:\n      - schema_linking\n      - parallel:\n        - generate_sql\n        - reasoning\n      - selection\n      - execute_sql\n      - output\n</code></pre>"},{"location":"zh/workflow/orchestration/#_8","title":"\u5b50\u5de5\u4f5c\u6d41","text":"<pre><code>agent:\n  workflow:\n    plan: main_workflow\n\n    main_workflow:\n      - schema_linking\n      - parallel:\n        - subworkflow1\n        - subworkflow2\n      - selection\n      - execute_sql\n      - output\n\n    subworkflow1:\n      - search_metrics\n      - generate_sql\n\n    subworkflow2:\n      - search_metrics\n      - reasoning\n</code></pre>"},{"location":"zh/workflow/orchestration/#_9","title":"\u5b50\u5de5\u4f5c\u6d41\uff08\u72ec\u7acb\u914d\u7f6e\uff09","text":"<pre><code>agent:\n  workflow:\n    plan: multi_agent\n\n    multi_agent:\n      - schema_linking\n      - parallel:\n        - agent1_workflow\n        - agent2_workflow\n      - selection\n      - output\n\n    agent1_workflow:\n      steps:\n        - search_metrics\n        - generate_sql\n      config: multi/agent1.yaml\n\n    agent2_workflow:\n      steps:\n        - reasoning\n        - reflect\n      config: multi/agent2.yaml\n</code></pre>"},{"location":"zh/workflow/orchestration/#_10","title":"\u5de5\u4f5c\u6d41\u53c2\u6570","text":"<pre><code># \u4f7f\u7528\u5185\u7f6e\u5de5\u4f5c\u6d41\ndatus run --namespace &lt;your_namespace&gt; --task \"your query\" --plan reflection\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u5de5\u4f5c\u6d41\ndatus run --namespace &lt;your_namespace&gt; --task \"your query\" --plan custom_analytics\n</code></pre> <p>\u53ef\u7528\u53c2\u6570\uff1a</p> \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4 \u53d6\u503c <code>--plan</code> \u6267\u884c\u7684\u5de5\u4f5c\u6d41\u7c7b\u578b <code>reflection</code> <code>reflection</code>\u3001<code>fixed</code>\u3001<code>metric_to_sql</code> \u6216\u81ea\u5b9a\u4e49 <code>--namespace</code> \u6570\u636e\u5e93\u547d\u540d\u7a7a\u95f4 \u5fc5\u586b \u5df2\u914d\u7f6e\u547d\u540d\u7a7a\u95f4 <code>--task</code> \u81ea\u7136\u8bed\u8a00\u4efb\u52a1 \u5fc5\u586b \u6587\u672c <code>--max_iterations</code> \u6700\u5927\u53cd\u601d\u8f6e\u6570 <code>3</code> \u6574\u6570 <code>--save_dir</code> \u4fdd\u5b58\u5de5\u4f5c\u6d41\u72b6\u6001\u76ee\u5f55 <code>./save</code> \u8def\u5f84"},{"location":"zh/workflow/orchestration/#_11","title":"\u8c03\u8bd5\u4e0e\u76d1\u63a7","text":"<pre><code># \u8be6\u7ec6\u65e5\u5fd7\ndatus run --namespace &lt;your_namespace&gt; --task \"your query\" --debug\n# \u4fdd\u5b58\u5de5\u4f5c\u6d41\u72b6\u6001\ndatus run --namespace &lt;your_namespace&gt; --task \"your query\" --save_dir ./debug_session\n# \u4ece\u4fdd\u5b58\u72b6\u6001\u6062\u590d\ndatus resume --save_dir ./debug_session\n</code></pre>"},{"location":"zh/workflow/orchestration/#_12","title":"\u7ed3\u8bed","text":"<p>\u5de5\u4f5c\u6d41\u7f16\u6392\u662f Datus Agent \u667a\u80fd SQL \u751f\u6210\u80fd\u529b\u7684\u57fa\u77f3\u3002\u7406\u89e3\u4e0d\u540c\u5de5\u4f5c\u6d41\u7c7b\u578b\u4e0e\u9002\u7528\u573a\u666f\uff0c\u80fd\u5e2e\u52a9\u4f60\u9ad8\u6548\u3001\u53ef\u9760\u5730\u89e3\u51b3\u590d\u6742\u7684\u6570\u636e\u5206\u6790\u95ee\u9898\u3002</p>"}]}